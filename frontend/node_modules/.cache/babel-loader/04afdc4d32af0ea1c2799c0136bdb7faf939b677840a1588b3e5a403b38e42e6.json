{"ast":null,"code":"var _jsxFileName = \"/Users/georgina/DestigFemmeDemoPi/frontend/src/Shop/components/PostContent.tsx\",\n  _s = $RefreshSig$();\n// Created by Georgina Alacaraz\nimport React, { useContext, useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { UserContext } from \"./Auth\";\nimport { Box, Grid, Typography } from '@mui/material';\nimport { useLocation } from 'react-router-dom';\nimport PostCard from \"./PostCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst _window = window;\nconst backendURL = _window.__ENV && _window.__ENV.backendURL;\nconst axiosClient = axios.create({\n  baseURL: `${backendURL}`,\n  timeout: 20000,\n  withCredentials: true\n});\nconst config = {\n  headers: {\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Origin': '*'\n  }\n};\nexport default function PostContent({\n  communityId\n}) {\n  _s();\n  const {\n    user,\n    saveUser,\n    showModal,\n    saveShowModal,\n    onModalClose\n  } = useContext(UserContext);\n  const navigate = useNavigate();\n  const [posts, setPosts] = useState([]);\n  const [isLiked, setIsLiked] = useState(false);\n  const [likesCount, setLikesCount] = useState(0);\n  const location = useLocation();\n  const postId = location.state.postId;\n  console.log(postId);\n\n  // useEffect(() => {\n  //   const fetchLikes = async () => {\n  //     try {\n  //       const response = await axiosClient.get(`/posts/likes/${postId}`);\n  //       setLikesCount(response.data.likesCount);\n  //       setIsLiked(response.data.isLiked);\n  //     } catch (error) {\n  //       console.error(\"Failed to fetch likes: \", error);\n  //     }\n  //     fetchLikes();\n  //   }\n  // }\n  // , [postId]);\n\n  const handleLike = async postId => {\n    try {\n      // Like the post\n      const response = await axiosClient.post(`/posts/like/${postId}`);\n      if (response.data.isLiked) {\n        setIsLiked(true);\n        setLikesCount(response.data.likeCount);\n      } else {\n        setIsLiked(false);\n        setLikesCount(response.data.likeCount);\n      }\n    } catch (error) {\n      console.error(\"Failed to handle post like/unlike: \", error);\n    }\n  };\n\n  // get the posts that have the same community id as the current session\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await axiosClient.get(`/posts/posts1?community_id=${communityId}`);\n        console.log(response.data.posts);\n        setPosts(response.data.posts || []);\n      } catch (error) {\n        console.error(\"Failed to fetch posts: \", error);\n      }\n    };\n    fetchPosts();\n  }, [communityId]); // Empty dependency array means this effect runs once on mount\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      flexGrow: 1,\n      margin: 2\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: Array.isArray(posts) && posts.length > 0 ? posts.map(post => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(PostCard, {\n          post: post,\n          onLike: handleLike,\n          isLiked: post.isLiked // Pass isLiked from the post object\n          ,\n          likesCount: post.likesCount // Pass likesCount from the post object\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this)\n      }, post._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: \"No posts found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(PostContent, \"T+Le2o6Z7yEOSeaWrOndLVmX+qE=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = PostContent;\nvar _c;\n$RefreshReg$(_c, \"PostContent\");","map":{"version":3,"names":["React","useContext","useEffect","useState","axios","useNavigate","UserContext","Box","Grid","Typography","useLocation","PostCard","jsxDEV","_jsxDEV","_window","window","backendURL","__ENV","axiosClient","create","baseURL","timeout","withCredentials","config","headers","PostContent","communityId","_s","user","saveUser","showModal","saveShowModal","onModalClose","navigate","posts","setPosts","isLiked","setIsLiked","likesCount","setLikesCount","location","postId","state","console","log","handleLike","response","post","data","likeCount","error","fetchPosts","get","sx","flexGrow","margin","children","container","spacing","Array","isArray","length","map","item","xs","onLike","fileName","_jsxFileName","lineNumber","columnNumber","_id","variant","_c","$RefreshReg$"],"sources":["/Users/georgina/DestigFemmeDemoPi/frontend/src/Shop/components/PostContent.tsx"],"sourcesContent":["// Created by Georgina Alacaraz\nimport React, { useContext, useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { UserContext } from \"./Auth\";\nimport { PostType, UserContextType } from \"./Types\";\nimport { set } from \"mongoose\";\nimport { Box, Grid, Typography, Card, CardContent } from '@mui/material';\nimport { useLocation } from 'react-router-dom';\nimport PostCard from \"./PostCard\";\n\ninterface WindowWithEnv extends Window {\n  __ENV?: {\n    backendURL: string, // REACT_APP_BACKEND_URL environment variable\n    sandbox: \"true\" | \"false\", // REACT_APP_SANDBOX_SDK environment variable - string, not boolean!\n  }\n}\n\nconst _window: WindowWithEnv = window;\nconst backendURL = _window.__ENV && _window.__ENV.backendURL;\n\nconst axiosClient = axios.create({ baseURL: `${backendURL}`, timeout: 20000, withCredentials: true });\nconst config = { headers: { 'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*' } };\n\nexport default function PostContent({ communityId }: { communityId: string }) {\n  const { user, saveUser, showModal, saveShowModal, onModalClose } = useContext(UserContext) as UserContextType;\n  const navigate = useNavigate();\n  const [posts, setPosts] = useState<PostType[]>([]);\n  const [isLiked, setIsLiked] = useState(false);\n  const [likesCount, setLikesCount] = useState(0);\n\n  const location = useLocation();\n  const postId = location.state.postId;\n  console.log(postId);\n \n  // useEffect(() => {\n  //   const fetchLikes = async () => {\n  //     try {\n  //       const response = await axiosClient.get(`/posts/likes/${postId}`);\n  //       setLikesCount(response.data.likesCount);\n  //       setIsLiked(response.data.isLiked);\n  //     } catch (error) {\n  //       console.error(\"Failed to fetch likes: \", error);\n  //     }\n  //     fetchLikes();\n  //   }\n  // }\n  // , [postId]);\n  \n  const handleLike = async (postId: String) => {\n    try {\n        // Like the post\n        const response = await axiosClient.post(`/posts/like/${postId}`);\n        if (response.data.isLiked){\n          setIsLiked(true);\n          setLikesCount(response.data.likeCount);\n        }\n        else {\n        setIsLiked(false);\n        setLikesCount(response.data.likeCount);\n        }\n    } catch (error) {\n      console.error(\"Failed to handle post like/unlike: \", error);\n    }\n  };\n  \n  // get the posts that have the same community id as the current session\n  useEffect(() => {\n      const fetchPosts = async () => {\n          try {\n              const response = await axiosClient.get(`/posts/posts1?community_id=${communityId}`);\n              console.log(response.data.posts);\n              setPosts(response.data.posts || []);\n\n          } catch (error) {\n              console.error(\"Failed to fetch posts: \", error);\n          }\n      };\n      fetchPosts();\n  }, [communityId]);// Empty dependency array means this effect runs once on mount\n\n  return (\n    <Box sx={{ flexGrow: 1, margin: 2 }}>\n      <Grid container spacing={2}>\n        {Array.isArray(posts) && posts.length > 0 ? (\n          posts.map((post) => (\n            <Grid item xs={12} key={post._id}>\n              <PostCard\n                post={post}\n                onLike={handleLike}\n                isLiked={post.isLiked} // Pass isLiked from the post object\n                likesCount={post.likesCount} // Pass likesCount from the post object\n              />\n            </Grid>\n          ))\n        ) : (\n          <Typography variant=\"h4\">No posts found</Typography>\n\n        )}\n      </Grid>\n    </Box>\n  );\n  \n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}