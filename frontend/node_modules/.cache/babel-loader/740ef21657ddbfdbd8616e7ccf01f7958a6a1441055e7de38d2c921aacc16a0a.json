{"ast":null,"code":"var _jsxFileName = \"/Users/georgina/DestigFemmeDemoPi/frontend/src/Shop/components/PostContent.tsx\",\n  _s = $RefreshSig$();\n// Created by Georgina Alacaraz\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Box, Grid, Typography } from \"@mui/material\";\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { UserContext } from \"./Auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst _window = window;\nconst backendURL = _window.__ENV && _window.__ENV.backendURL;\nconst axiosClient = axios.create({\n  baseURL: `${backendURL}`,\n  timeout: 20000,\n  withCredentials: true\n});\nconst config = {\n  headers: {\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Origin': '*'\n  }\n};\nexport default function PostContent() {\n  _s();\n  const {\n    user,\n    saveUser,\n    showModal,\n    saveShowModal,\n    onModalClose\n  } = useContext(UserContext);\n  const navigate = useNavigate();\n  const [posts, setPosts] = useState(null);\n\n  // Fetch posts when component mounts\n  useEffect(() => {\n    console.log(posts);\n  }, [setPosts]);\n\n  // get the posts that have the same community id as the current session\n  useEffect(() => {\n    // Make an API call to fetch the create community data\n    axiosClient.get('/posts/posts1').then(response => {\n      console.log(response);\n      setPosts(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []); // Empty dependency array means this effect runs once on mount\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          margin: 2,\n          color: \"#ef9a9a\",\n          style: {\n            fontWeight: 'bold'\n          },\n          children: posts && posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: post.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this)]\n          }, post._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(PostContent, \"ifEAzXex9BkDH04GdhZneIkJMQY=\", false, function () {\n  return [useNavigate];\n});\n_c = PostContent;\nvar _c;\n$RefreshReg$(_c, \"PostContent\");","map":{"version":3,"names":["React","useContext","useEffect","useState","Box","Grid","Typography","axios","useNavigate","UserContext","jsxDEV","_jsxDEV","_window","window","backendURL","__ENV","axiosClient","create","baseURL","timeout","withCredentials","config","headers","PostContent","_s","user","saveUser","showModal","saveShowModal","onModalClose","navigate","posts","setPosts","console","log","get","then","response","data","catch","error","children","container","spacing","item","xs","variant","margin","color","style","fontWeight","map","post","title","fileName","_jsxFileName","lineNumber","columnNumber","description","_id","_c","$RefreshReg$"],"sources":["/Users/georgina/DestigFemmeDemoPi/frontend/src/Shop/components/PostContent.tsx"],"sourcesContent":["// Created by Georgina Alacaraz\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Box, Grid, Typography } from \"@mui/material\";\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { UserContext } from \"./Auth\";\nimport { PostType, UserContextType } from \"./Types\";\nimport { set } from \"mongoose\";\n\ninterface WindowWithEnv extends Window {\n  __ENV?: {\n    backendURL: string, // REACT_APP_BACKEND_URL environment variable\n    sandbox: \"true\" | \"false\", // REACT_APP_SANDBOX_SDK environment variable - string, not boolean!\n  }\n}\n\nconst _window: WindowWithEnv = window;\nconst backendURL = _window.__ENV && _window.__ENV.backendURL;\n\nconst axiosClient = axios.create({ baseURL: `${backendURL}`, timeout: 20000, withCredentials: true });\nconst config = { headers: { 'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*' } };\n\nexport default function PostContent() {\n  const { user, saveUser, showModal, saveShowModal, onModalClose } = useContext(UserContext) as UserContextType;\n  const navigate = useNavigate();\n  const [posts, setPosts] = useState<PostType[] | null>(null);\n\n  // Fetch posts when component mounts\n  useEffect(() => {\n    console.log(posts);\n  }, [setPosts]);\n  \n  // get the posts that have the same community id as the current session\n  useEffect(() => {\n    // Make an API call to fetch the create community data\n    axiosClient.get('/posts/posts1')\n            .then((response) => {\n            console.log(response);\n            setPosts(response.data);\n            })\n            .catch((error) => {\n            console.log(error);\n            });\n        }\n    , []); // Empty dependency array means this effect runs once on mount\n\n  return (\n    <Box>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Typography variant=\"h5\" margin={2} color=\"#ef9a9a\" style={{ fontWeight: 'bold' }}>\n            {/* Render posts */}\n            {posts && posts.map((post: PostType) => (\n              <div key={post._id}>\n                <h2>{post.title}</h2>\n                <p>{post.description}</p>\n              </div>\n            ))}\n          </Typography>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}