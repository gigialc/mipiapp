{"ast":null,"code":"var _jsxFileName = \"/Users/georgina/DestigFemmeDemoPi/frontend/src/Shop/components/PostContent.tsx\",\n  _s = $RefreshSig$();\n// Created by Georgina Alacaraz\nimport React, { useContext, useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { UserContext } from \"./Auth\";\nimport { Box, Grid, Typography, Card, CardContent } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst _window = window;\nconst backendURL = _window.__ENV && _window.__ENV.backendURL;\nconst axiosClient = axios.create({\n  baseURL: `${backendURL}`,\n  timeout: 20000,\n  withCredentials: true\n});\nconst config = {\n  headers: {\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Origin': '*'\n  }\n};\nexport default function PostContent() {\n  _s();\n  const {\n    user,\n    saveUser,\n    showModal,\n    saveShowModal,\n    onModalClose\n  } = useContext(UserContext);\n  const navigate = useNavigate();\n  const [posts, setPosts] = useState([]);\n\n  // Fetch posts when component mounts\n  useEffect(() => {\n    console.log(posts);\n  }, [setPosts]);\n\n  // get the posts that have the same community id as the current session\n  useEffect(() => {\n    // Make an API call to fetch the create community data\n    axiosClient.get('/posts/posts1').then(response => {\n      console.log(response);\n      setPosts(response.data.posts || []);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []); // Empty dependency array means this effect runs once on mount\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      flexGrow: 1,\n      marginBottom: 4\n    },\n    children: [\" \", /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      justifyContent: \"center\",\n      children: Array.isArray(posts) && posts.map(post => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 8,\n        children: [\" \", /*#__PURE__*/_jsxDEV(Card, {\n          variant: \"outlined\",\n          sx: {\n            backgroundColor: '#fff',\n            marginY: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              component: \"div\",\n              style: {\n                fontWeight: 'bold',\n                color: '#333'\n              },\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              color: \"text.secondary\",\n              children: post.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this)]\n      }, post._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 7\n  }, this);\n}\n_s(PostContent, \"pWGQXpiTKxuSI1aSzrrei6sNhkM=\", false, function () {\n  return [useNavigate];\n});\n_c = PostContent;\nvar _c;\n$RefreshReg$(_c, \"PostContent\");","map":{"version":3,"names":["React","useContext","useEffect","useState","axios","useNavigate","UserContext","Box","Grid","Typography","Card","CardContent","jsxDEV","_jsxDEV","_window","window","backendURL","__ENV","axiosClient","create","baseURL","timeout","withCredentials","config","headers","PostContent","_s","user","saveUser","showModal","saveShowModal","onModalClose","navigate","posts","setPosts","console","log","get","then","response","data","catch","error","sx","flexGrow","marginBottom","children","container","spacing","justifyContent","Array","isArray","map","post","item","xs","md","variant","backgroundColor","marginY","component","style","fontWeight","color","title","fileName","_jsxFileName","lineNumber","columnNumber","description","_id","_c","$RefreshReg$"],"sources":["/Users/georgina/DestigFemmeDemoPi/frontend/src/Shop/components/PostContent.tsx"],"sourcesContent":["// Created by Georgina Alacaraz\nimport React, { useContext, useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { UserContext } from \"./Auth\";\nimport { PostType, UserContextType } from \"./Types\";\nimport { set } from \"mongoose\";\nimport { Box, Grid, Typography, Card, CardContent } from '@mui/material';\n\ninterface WindowWithEnv extends Window {\n  __ENV?: {\n    backendURL: string, // REACT_APP_BACKEND_URL environment variable\n    sandbox: \"true\" | \"false\", // REACT_APP_SANDBOX_SDK environment variable - string, not boolean!\n  }\n}\n\nconst _window: WindowWithEnv = window;\nconst backendURL = _window.__ENV && _window.__ENV.backendURL;\n\nconst axiosClient = axios.create({ baseURL: `${backendURL}`, timeout: 20000, withCredentials: true });\nconst config = { headers: { 'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*' } };\n\nexport default function PostContent() {\n  const { user, saveUser, showModal, saveShowModal, onModalClose } = useContext(UserContext) as UserContextType;\n  const navigate = useNavigate();\n  const [posts, setPosts] = useState<PostType[]>([]);\n\n  // Fetch posts when component mounts\n  useEffect(() => {\n    console.log(posts);\n  }, [setPosts]);\n  \n  // get the posts that have the same community id as the current session\n  useEffect(() => {\n    // Make an API call to fetch the create community data\n    axiosClient.get('/posts/posts1')\n            .then((response) => {\n            console.log(response);\n            setPosts(response.data.posts || []);\n            })\n            .catch((error) => {\n            console.log(error);\n            });\n        }\n    , []); // Empty dependency array means this effect runs once on mount\n\n    return (\n      <Box sx={{ flexGrow: 1, marginBottom: 4 }}> {/* Adjusted for overall spacing */}\n        <Grid container spacing={2} justifyContent=\"center\">\n          {Array.isArray(posts) && posts.map((post) => (\n            <Grid item xs={12} md={8} key={post._id}> {/* Adjust grid sizing as needed */}\n              <Card variant=\"outlined\" sx={{ backgroundColor: '#fff', marginY: 2 }}>\n                <CardContent>\n                  <Typography variant=\"h6\" component=\"div\" style={{ fontWeight: 'bold', color: '#333' }}>\n                    {post.title}\n                  </Typography>\n                  <Typography variant=\"body1\" color=\"text.secondary\">\n                    {post.description}\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n      </Box>\n    );\n    \n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}