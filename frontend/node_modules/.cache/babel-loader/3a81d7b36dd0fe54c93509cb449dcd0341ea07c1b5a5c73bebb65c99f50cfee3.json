{"ast":null,"code":"var _jsxFileName = \"/Users/georgina/DestigFemmeDemoPi/frontend/src/Shop/components/CommentContent.tsx\",\n  _s = $RefreshSig$();\n//Created by Georgina Alacaraz\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useLocation } from 'react-router-dom';\nimport { UserContext } from './Auth';\nimport { Paper } from '@mui/material';\nimport { Typography } from '@mui/material';\n//for community page\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst _window = window;\nconst backendURL = _window.__ENV && _window.__ENV.backendURL;\nconst axiosClient = axios.create({\n  baseURL: `${backendURL}`,\n  timeout: 20000,\n  withCredentials: true\n});\nconst config = {\n  headers: {\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Origin': '*'\n  }\n};\nexport default function CommentContent() {\n  _s();\n  const {\n    user,\n    saveUser,\n    showModal,\n    saveShowModal,\n    onModalClose\n  } = React.useContext(UserContext);\n  const [comment, setComment] = useState([]);\n  const location = useLocation();\n  const postId = location.state.postId;\n  console.log(postId);\n\n  // get the posts that have the same community id as the current session\n  useEffect(() => {\n    const fetchComments = async () => {\n      try {\n        const response = await axiosClient.get(`/comments/commentsByPostId?post_id=${postId}`);\n        setComment(response.data.comments || []);\n      } catch (error) {\n        console.error(\"Failed to fetch comments: \", error);\n      }\n    };\n    if (postId) {\n      // Only fetch comments if postId is available\n      fetchComments();\n    }\n  }, [postId]);\n  useEffect(() => {\n    if (!postId) return; // Add a guard clause if communityId is not set\n    console.log(postId);\n    axiosClient.get(`/posts/post/${postId}`) // Use template literals to inject communityId\n    .then(response => {\n      console.log(response.data); // Assuming you want to set the entire response object\n    }).catch(error => {\n      console.error(error);\n    });\n  }, [postId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: '600px',\n      margin: 'auto',\n      textAlign: 'center'\n    },\n    children: [(postId === null || postId === void 0 ? void 0 : postId.name) && /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      margin: 2,\n      style: {\n        color: '#9E4291',\n        fontWeight: 'bold'\n      },\n      children: postId.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), comment.length > 0 ? comment.map((comment, index) => /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        backgroundColor: 'white',\n        marginY: 2,\n        padding: 2,\n        borderRadius: '40px',\n        display: 'flex',\n        justifyContent: 'flex-start',\n        marginLeft: 'auto',\n        marginRight: '0'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        component: \"div\",\n        sx: {\n          wordBreak: 'break-word'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontWeight: 'bold',\n            marginRight: '8px'\n          },\n          children: [comment.user.username || 'Anonymous', \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this), comment.content]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }, this)) :\n    /*#__PURE__*/\n    // Display a message if there are no comments\n    _jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      style: {\n        marginTop: '5px'\n      },\n      children: \"There are no comments, be the first :)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(CommentContent, \"kc7j+VzN58r8l1NSBTSnXSi3XMM=\", false, function () {\n  return [useLocation];\n});\n_c = CommentContent;\n;\nvar _c;\n$RefreshReg$(_c, \"CommentContent\");","map":{"version":3,"names":["React","useEffect","useState","axios","useLocation","UserContext","Paper","Typography","jsxDEV","_jsxDEV","_window","window","backendURL","__ENV","axiosClient","create","baseURL","timeout","withCredentials","config","headers","CommentContent","_s","user","saveUser","showModal","saveShowModal","onModalClose","useContext","comment","setComment","location","postId","state","console","log","fetchComments","response","get","data","comments","error","then","catch","style","maxWidth","margin","textAlign","children","name","variant","color","fontWeight","title","fileName","_jsxFileName","lineNumber","columnNumber","length","map","index","elevation","sx","backgroundColor","marginY","padding","borderRadius","display","justifyContent","marginLeft","marginRight","component","wordBreak","username","content","marginTop","_c","$RefreshReg$"],"sources":["/Users/georgina/DestigFemmeDemoPi/frontend/src/Shop/components/CommentContent.tsx"],"sourcesContent":["//Created by Georgina Alacaraz\n\nimport { Button, Grid } from '@mui/material';\nimport { StringDecoder } from 'string_decoder';\nimport { UserContextType } from './Types';\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useLocation } from 'react-router-dom';\nimport { UserContext } from './Auth';\nimport { Paper } from '@mui/material';\nimport { Card, CardContent, Typography } from '@mui/material';\n//for community page\n\ninterface WindowWithEnv extends Window {\n  __ENV?: {\n    backendURL: string, // REACT_APP_BACKEND_URL environment variable\n    sandbox: \"true\" | \"false\", // REACT_APP_SANDBOX_SDK environment variable - string, not boolean!\n  }\n}\n\nconst _window: WindowWithEnv = window;\nconst backendURL = _window.__ENV && _window.__ENV.backendURL;\n\nconst axiosClient = axios.create({ baseURL: `${backendURL}`, timeout: 20000, withCredentials: true });\nconst config = { headers: { 'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*' } };\n\nexport default function CommentContent() {\n  const { user, saveUser, showModal, saveShowModal, onModalClose } = React.useContext(UserContext) as UserContextType;\n  const [comment, setComment] = useState<{ content: string, user: { username: string } }[]>([]);\n  const location = useLocation();\n  const postId = location.state.postId;\n  console.log(postId);\n\n    // get the posts that have the same community id as the current session\n    useEffect(() => {\n      const fetchComments = async () => {\n          try {\n              const response = await axiosClient.get(`/comments/commentsByPostId?post_id=${postId}`);\n              setComment(response.data.comments || []);\n          } catch (error) {\n              console.error(\"Failed to fetch comments: \", error);\n          }\n      };\n      if (postId) { // Only fetch comments if postId is available\n          fetchComments();\n      }\n  }, [postId]);\n\n  \n  useEffect(() => {\n    if (!postId) return; // Add a guard clause if communityId is not set\n  console.log(postId);\n    axiosClient.get(`/posts/post/${postId}`) // Use template literals to inject communityId\n      .then((response) => {\n        console.log(response.data);// Assuming you want to set the entire response object\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }, [postId]);\n    \n\n\n  return (\n    <div style={{ maxWidth: '600px', margin: 'auto', textAlign: 'center' }}>\n      {postId?.name && (\n      <Typography variant=\"h5\" margin={2} style={{ color: '#9E4291', fontWeight: 'bold' }}>\n       {postId.title}\n      </Typography>\n      )}\n      {comment.length > 0 ? (\n        comment.map((comment, index) => (\n          <Paper\n            key={index}\n            elevation={3}\n            sx={{\n              backgroundColor: 'white',\n              marginY: 2,\n              padding: 2,\n              borderRadius: '40px',\n              display: 'flex',\n              justifyContent: 'flex-start',\n              marginLeft: 'auto',\n              marginRight: '0',\n            }}\n          >\n            {/* Combine the username and comment content */}\n            <Typography variant=\"body1\" component=\"div\" sx={{ wordBreak: 'break-word' }}>\n              <span style={{ fontWeight: 'bold', marginRight: '8px' }}>\n                {comment.user.username || 'Anonymous'}:\n              </span>\n              {comment.content}\n            </Typography>\n          </Paper>\n        ))\n      ) : (\n        // Display a message if there are no comments\n        <Typography variant=\"subtitle1\" style={{ marginTop: '5px' }}>\n          There are no comments, be the first :)\n        </Typography>\n      )}\n    </div>\n  );\n};\n\n  \n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}