{"ast":null,"code":"var _jsxFileName = \"/Users/georgina/DestigFemmeDemoPi/frontend/src/Shop/components/CommentContent.tsx\",\n  _s2 = $RefreshSig$();\n//Created by Georgina Alacaraz\n\nimport { Grid } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useLocation } from 'react-router-dom';\nimport { UserContext } from './Auth';\nimport { onReadyForServerApproval, onReadyForServerCompletion } from './Payments';\nimport { Card, CardContent, Typography } from '@mui/material';\n//for community page\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst _window = window;\nconst backendURL = _window.__ENV && _window.__ENV.backendURL;\nconst axiosClient = axios.create({\n  baseURL: `${backendURL}`,\n  timeout: 20000,\n  withCredentials: true\n});\nconst config = {\n  headers: {\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Origin': '*'\n  }\n};\nexport default function CommentContent() {\n  _s2();\n  var _s = $RefreshSig$();\n  const {\n    user,\n    saveUser,\n    showModal,\n    saveShowModal,\n    onModalClose\n  } = React.useContext(UserContext);\n  const [comments, setComment] = useState([]);\n  const location = useLocation();\n  const postId = location.state.postId;\n  console.log(postId);\n  const orderProduct = async (memo, amount, paymentMetadata) => {\n    _s();\n    if (user.uid === \"\") {\n      return saveShowModal(true);\n    }\n    const paymentData = {\n      amount,\n      memo,\n      metadata: paymentMetadata\n    };\n    const callbacks = {\n      onReadyForServerApproval,\n      onReadyForServerCompletion\n      //onCancel,\n      //onError\n    };\n\n    // Fetch posts when component mounts\n    useEffect(() => {\n      console.log(comments);\n    }, [setComment]);\n\n    // get the posts that have the same community id as the current session\n    useEffect(() => {\n      const fetchComments = async () => {\n        try {\n          const response = await axiosClient.get(`/posts/comments?post_id=${[postId]}`);\n          setComment(response.data.posts || []);\n        } catch (error) {\n          console.error(\"Failed to fetch posts: \", error);\n        }\n      };\n      fetchComments();\n    }, [postId]); // Empty dependency array means this effect runs once on mount\n  };\n  _s(orderProduct, \"3ubReDTFssvu4DHeldAg55cW/CI=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      justifyContent: \"center\",\n      children: Array.isArray(comments) && comments.map(comment => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          variant: \"outlined\",\n          sx: {\n            backgroundColor: '#ffe6ff',\n            marginY: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              component: \"div\",\n              style: {\n                fontWeight: 'bold',\n                color: '#333'\n              },\n              children: comment.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)\n      }, comment._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s2(CommentContent, \"+DgY2aJU4jzueA5mDhaJbvsM/1w=\", false, function () {\n  return [useLocation];\n});\n_c = CommentContent;\nvar _c;\n$RefreshReg$(_c, \"CommentContent\");","map":{"version":3,"names":["Grid","React","useEffect","useState","axios","useLocation","UserContext","onReadyForServerApproval","onReadyForServerCompletion","Card","CardContent","Typography","jsxDEV","_jsxDEV","_window","window","backendURL","__ENV","axiosClient","create","baseURL","timeout","withCredentials","config","headers","CommentContent","_s2","_s","$RefreshSig$","user","saveUser","showModal","saveShowModal","onModalClose","useContext","comments","setComment","location","postId","state","console","log","orderProduct","memo","amount","paymentMetadata","uid","paymentData","metadata","callbacks","fetchComments","response","get","data","posts","error","children","container","spacing","justifyContent","Array","isArray","map","comment","item","xs","md","variant","sx","backgroundColor","marginY","component","style","fontWeight","color","description","fileName","_jsxFileName","lineNumber","columnNumber","_id","_c","$RefreshReg$"],"sources":["/Users/georgina/DestigFemmeDemoPi/frontend/src/Shop/components/CommentContent.tsx"],"sourcesContent":["//Created by Georgina Alacaraz\n\nimport { Button, Grid } from '@mui/material';\nimport { StringDecoder } from 'string_decoder';\nimport { CommentType, UserContextType } from './Types';\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useLocation } from 'react-router-dom';\nimport { UserContext } from './Auth';\nimport { MyPaymentMetadata } from './Types';\nimport { onReadyForServerApproval, onReadyForServerCompletion } from './Payments';\nimport CardActions from '@mui/material/CardActions';\nimport IconButton from '@mui/material/IconButton';\nimport CommentIcon from '@mui/icons-material/Comment';\nimport { Card, CardContent, Typography } from '@mui/material';\n//for community page\n\ninterface WindowWithEnv extends Window {\n  __ENV?: {\n    backendURL: string, // REACT_APP_BACKEND_URL environment variable\n    sandbox: \"true\" | \"false\", // REACT_APP_SANDBOX_SDK environment variable - string, not boolean!\n  }\n}\n\nconst _window: WindowWithEnv = window;\nconst backendURL = _window.__ENV && _window.__ENV.backendURL;\n\nconst axiosClient = axios.create({ baseURL: `${backendURL}`, timeout: 20000, withCredentials: true });\nconst config = { headers: { 'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*' } };\n\nexport default function CommentContent() {\n  const { user, saveUser, showModal, saveShowModal, onModalClose } = React.useContext(UserContext) as UserContextType;\n  const [comments, setComment] = useState<CommentType[]>([]);\n  const location = useLocation();\n  const postId = location.state.postId;\n  console.log(postId);\n\n  const orderProduct = async (memo: string, amount: number, paymentMetadata: MyPaymentMetadata) => {\n    if(user.uid === \"\") {\n      return saveShowModal(true);\n\n    }\n\n    const paymentData = { amount, memo, metadata: paymentMetadata };\n    const callbacks = {\n      onReadyForServerApproval,\n      onReadyForServerCompletion,\n      //onCancel,\n      //onError\n\n    }\n\n\n  // Fetch posts when component mounts\n    useEffect(() => {\n      console.log(comments);\n    }, [setComment]);\n\n    // get the posts that have the same community id as the current session\n    useEffect(() => {\n        const fetchComments = async () => {\n            try {\n                const response = await axiosClient.get(`/posts/comments?post_id=${[postId]}`);\n                setComment(response.data.posts || []);\n            } catch (error) {\n                console.error(\"Failed to fetch posts: \", error);\n            }\n        };\n        fetchComments();\n    }, [postId]);// Empty dependency array means this effect runs once on mount\n  }\n\n  return (\n    <div>\n    <Grid container spacing={2} justifyContent=\"center\">\n        {Array.isArray(comments) && comments.map((comment) => (\n          <Grid item xs={12} md={8} key={comment._id}>\n            <Card variant=\"outlined\" sx={{ backgroundColor: '#ffe6ff', marginY: 2 }}>\n              <CardContent>\n                <Typography variant=\"h6\" component=\"div\" style={{ fontWeight: 'bold', color: '#333' }}>\n                  {comment.description}\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}