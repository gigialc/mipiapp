{"ast":null,"code":"var _jsxFileName = \"/Users/georgina/DestigFemmeDemoPi/frontend/src/Shop/components/ProductCard.tsx\",\n  _s = $RefreshSig$();\n//Created by Georgina Alacaraz\n\nimport { Button, Grid } from '@mui/material';\nimport { useState } from 'react';\nimport { TextField } from '@mui/material';\n/* DEVELOPER NOTE:\n* the productCard is used to create the standard output of pies\n* on the User to App payments page of the app.\n*/\n\n//for community page\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductCard = props => {\n  _s();\n  const [newComment, setNewComment] = useState('');\n  const handleAddComment = () => {\n    // Call the passed `onAddComment` prop with the new comment details\n    props.onAddComment({\n      id: Date.now(),\n      // Simple ID generation, consider a more robust approach for real applications\n      author: 'Anonymous',\n      // Placeholder, adjust based on your application's needs\n      text: newComment\n    });\n    setNewComment(''); // Clear the input field\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    style: {\n      margin: 16,\n      paddingBottom: 16,\n      borderBottom: '1px solid pink'\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      style: {\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), props.comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: comment.author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 16\n          }, this), \": \", comment.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"Add a comment\",\n        variant: \"outlined\",\n        value: newComment,\n        onChange: e => setNewComment(e.target.value),\n        style: {\n          marginTop: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleAddComment,\n        style: {\n          marginTop: '10px'\n        },\n        children: \"Post Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductCard, \"4CPgt7oQpkJXYA7nM53m+f+bai8=\");\n_c = ProductCard;\nvar _c;\n$RefreshReg$(_c, \"ProductCard\");","map":{"version":3,"names":["Button","Grid","useState","TextField","jsxDEV","_jsxDEV","ProductCard","props","_s","newComment","setNewComment","handleAddComment","onAddComment","id","Date","now","author","text","container","style","margin","paddingBottom","borderBottom","children","item","width","fileName","_jsxFileName","lineNumber","columnNumber","comments","map","comment","index","fullWidth","label","variant","value","onChange","e","target","marginTop","color","onClick","_c","$RefreshReg$"],"sources":["/Users/georgina/DestigFemmeDemoPi/frontend/src/Shop/components/ProductCard.tsx"],"sourcesContent":["//Created by Georgina Alacaraz\n\nimport { Button, Grid } from '@mui/material';\nimport { StringDecoder } from 'string_decoder';\nimport { UserContextType } from './Types';\nimport { UserContext } from './Auth';\nimport { useState } from 'react';\nimport { TextField } from '@mui/material';\n/* DEVELOPER NOTE:\n* the productCard is used to create the standard output of pies\n* on the User to App payments page of the app.\n*/\n\n//for community page\n\ninterface Props {\n  name: string,\n  description: string,\n  price: number,\n  onClickBuy: () => void,\n}\ninterface Comment {\n  id: number;\n  author: string;\n  text: string;\n}\n\ninterface Props {\n  name: string;\n  description: string;\n  price: number;\n  onClickBuy: () => void;\n  comments: Comment[]; // Assuming you have an array of comments\n  onAddComment: (newComment: Comment) => void; // Method to add a new comment\n}\n\n\nconst ProductCard = (props: Props) => {\n  const [newComment, setNewComment] = useState('');\n\n  const handleAddComment = () => {\n    // Call the passed `onAddComment` prop with the new comment details\n    props.onAddComment({\n      id: Date.now(), // Simple ID generation, consider a more robust approach for real applications\n      author: 'Anonymous', // Placeholder, adjust based on your application's needs\n      text: newComment,\n    });\n    setNewComment(''); // Clear the input field\n  };\n\n  return (\n    <Grid container style={{ margin: 16, paddingBottom: 16, borderBottom: '1px solid pink' }}>\n      {/* Existing code remains unchanged */}\n\n      {/* New Comments Section */}\n      <Grid item style={{ width: '100%' }}>\n        <h4>Comments</h4>\n        {props.comments.map((comment, index) => (\n          <div key={index}>\n            <p><strong>{comment.author}</strong>: {comment.text}</p>\n          </div>\n        ))}\n        <TextField\n          fullWidth\n          label=\"Add a comment\"\n          variant=\"outlined\"\n          value={newComment}\n          onChange={(e) => setNewComment(e.target.value)}\n          style={{ marginTop: '10px' }}\n        />\n        <Button variant=\"contained\" color=\"primary\" onClick={handleAddComment} style={{ marginTop: '10px' }}>\n          Post Comment\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n"],"mappings":";;AAAA;;AAEA,SAASA,MAAM,EAAEC,IAAI,QAAQ,eAAe;AAI5C,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,SAAS,QAAQ,eAAe;AACzC;AACA;AACA;AACA;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAwBA,MAAMC,WAAW,GAAIC,KAAY,IAAK;EAAAC,EAAA;EACpC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMS,gBAAgB,GAAGA,CAAA,KAAM;IAC7B;IACAJ,KAAK,CAACK,YAAY,CAAC;MACjBC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MAAE;MAChBC,MAAM,EAAE,WAAW;MAAE;MACrBC,IAAI,EAAER;IACR,CAAC,CAAC;IACFC,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC;EACrB,CAAC;;EAED,oBACEL,OAAA,CAACJ,IAAI;IAACiB,SAAS;IAACC,KAAK,EAAE;MAAEC,MAAM,EAAE,EAAE;MAAEC,aAAa,EAAE,EAAE;MAAEC,YAAY,EAAE;IAAiB,CAAE;IAAAC,QAAA,eAIvFlB,OAAA,CAACJ,IAAI;MAACuB,IAAI;MAACL,KAAK,EAAE;QAAEM,KAAK,EAAE;MAAO,CAAE;MAAAF,QAAA,gBAClClB,OAAA;QAAAkB,QAAA,EAAI;MAAQ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAChBtB,KAAK,CAACuB,QAAQ,CAACC,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBACjC5B,OAAA;QAAAkB,QAAA,eACElB,OAAA;UAAAkB,QAAA,gBAAGlB,OAAA;YAAAkB,QAAA,EAASS,OAAO,CAAChB;UAAM;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC,MAAE,EAACG,OAAO,CAACf,IAAI;QAAA;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC,GADhDI,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACN,CAAC,eACFxB,OAAA,CAACF,SAAS;QACR+B,SAAS;QACTC,KAAK,EAAC,eAAe;QACrBC,OAAO,EAAC,UAAU;QAClBC,KAAK,EAAE5B,UAAW;QAClB6B,QAAQ,EAAGC,CAAC,IAAK7B,aAAa,CAAC6B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC/ClB,KAAK,EAAE;UAAEsB,SAAS,EAAE;QAAO;MAAE;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC,eACFxB,OAAA,CAACL,MAAM;QAACoC,OAAO,EAAC,WAAW;QAACM,KAAK,EAAC,SAAS;QAACC,OAAO,EAAEhC,gBAAiB;QAACQ,KAAK,EAAE;UAAEsB,SAAS,EAAE;QAAO,CAAE;QAAAlB,QAAA,EAAC;MAErG;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEX,CAAC;AAACrB,EAAA,CAvCIF,WAAW;AAAAsC,EAAA,GAAXtC,WAAW;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}