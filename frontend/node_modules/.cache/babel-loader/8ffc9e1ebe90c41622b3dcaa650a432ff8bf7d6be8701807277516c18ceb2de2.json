{"ast":null,"code":"var _jsxFileName = \"/Users/georgina/DestigFemmeDemoPi/frontend/src/Shop/components/PostContent.tsx\",\n  _s = $RefreshSig$();\n// Created by Georgina Alacaraz\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Box, Grid, Typography } from \"@mui/material\";\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { UserContext } from \"./Auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst _window = window;\nconst backendURL = _window.__ENV && _window.__ENV.backendURL;\nconst axiosClient = axios.create({\n  baseURL: `${backendURL}`,\n  timeout: 20000,\n  withCredentials: true\n});\nconst config = {\n  headers: {\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Origin': '*'\n  }\n};\nexport default function PostContent() {\n  _s();\n  const {\n    user,\n    saveUser,\n    showModal,\n    saveShowModal,\n    onModalClose\n  } = useContext(UserContext);\n  const navigate = useNavigate();\n  const [posts, setPosts] = useState([]);\n\n  // Fetch posts when component mounts\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        // Adjust the URL to wherever your posts are fetched from\n        const response = await axiosClient.get('/posts/posts1', config);\n        setPosts(response.data); // Assuming the response data is the array of posts\n      } catch (error) {\n        console.error(\"Failed to fetch posts:\", error);\n        // Optionally, handle errors, e.g., by setting an error state\n      }\n    };\n\n    fetchPosts();\n  }, []); // Empty dependency array means this effect runs once on mount\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          margin: 2,\n          color: \"#ef9a9a\",\n          style: {\n            fontWeight: 'bold'\n          },\n          children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: post.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this)]\n          }, post._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(PostContent, \"xKzm+z36ZXATBFqWTyG5mPSptG0=\", false, function () {\n  return [useNavigate];\n});\n_c = PostContent;\nvar _c;\n$RefreshReg$(_c, \"PostContent\");","map":{"version":3,"names":["React","useContext","useEffect","useState","Box","Grid","Typography","axios","useNavigate","UserContext","jsxDEV","_jsxDEV","_window","window","backendURL","__ENV","axiosClient","create","baseURL","timeout","withCredentials","config","headers","PostContent","_s","user","saveUser","showModal","saveShowModal","onModalClose","navigate","posts","setPosts","fetchPosts","response","get","data","error","console","children","container","spacing","item","xs","variant","margin","color","style","fontWeight","map","post","title","fileName","_jsxFileName","lineNumber","columnNumber","description","_id","_c","$RefreshReg$"],"sources":["/Users/georgina/DestigFemmeDemoPi/frontend/src/Shop/components/PostContent.tsx"],"sourcesContent":["// Created by Georgina Alacaraz\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Box, Grid, Typography } from \"@mui/material\";\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { UserContext } from \"./Auth\";\nimport { UserContextType } from \"./Types\";\n\ninterface WindowWithEnv extends Window {\n  __ENV?: {\n    backendURL: string, // REACT_APP_BACKEND_URL environment variable\n    sandbox: \"true\" | \"false\", // REACT_APP_SANDBOX_SDK environment variable - string, not boolean!\n  }\n}\n\nconst _window: WindowWithEnv = window;\nconst backendURL = _window.__ENV && _window.__ENV.backendURL;\n\nconst axiosClient = axios.create({ baseURL: `${backendURL}`, timeout: 20000, withCredentials: true });\nconst config = { headers: { 'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*' } };\n\nexport default function PostContent() {\n  const { user, saveUser, showModal, saveShowModal, onModalClose } = useContext(UserContext) as UserContextType;\n  const navigate = useNavigate();\n  const [posts, setPosts] = useState<any[]>([]);\n\n  // Fetch posts when component mounts\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        // Adjust the URL to wherever your posts are fetched from\n        const response = await axiosClient.get('/posts/posts1', config);\n        setPosts(response.data); // Assuming the response data is the array of posts\n      } catch (error) {\n        console.error(\"Failed to fetch posts:\", error);\n        // Optionally, handle errors, e.g., by setting an error state\n      }\n    };\n\n    fetchPosts();\n  }, []); // Empty dependency array means this effect runs once on mount\n\n  return (\n    <Box>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Typography variant=\"h5\" margin={2} color=\"#ef9a9a\" style={{ fontWeight: 'bold' }}>\n            {/* Render posts */}\n            {posts.map((post) => (\n              <div key={post._id}>\n                <h3>{post.title}</h3>\n                <p>{post.description}</p>\n                {/* Render other post details as needed */}\n              </div>\n            ))}\n          </Typography>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}