{"ast":null,"code":"var _jsxFileName = \"/Users/georgina/DestigFemmeDemoPi/frontend/src/Shop/components/PostContent.tsx\",\n  _s = $RefreshSig$();\n// Created by Georgina Alacaraz\nimport React, { useContext, useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { UserContext } from \"./Auth\";\nimport { Box, Grid, Typography, Card, CardContent } from '@mui/material';\nimport { useLocation } from 'react-router-dom';\nimport CardActions from '@mui/material/CardActions';\nimport IconButton from '@mui/material/IconButton';\nimport CommentIcon from '@mui/icons-material/Comment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst _window = window;\nconst backendURL = _window.__ENV && _window.__ENV.backendURL;\nconst axiosClient = axios.create({\n  baseURL: `${backendURL}`,\n  timeout: 20000,\n  withCredentials: true\n});\nconst config = {\n  headers: {\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Origin': '*'\n  }\n};\nexport default function PostContent({\n  communityId\n}) {\n  _s();\n  const {\n    user,\n    saveUser,\n    showModal,\n    saveShowModal,\n    onModalClose\n  } = useContext(UserContext);\n  const navigate = useNavigate();\n  const [posts, setPosts] = useState([]);\n  const location = useLocation();\n  const postId = location.state.postId;\n  console.log(postId);\n\n  // Fetch posts when component mounts\n  useEffect(() => {\n    console.log(posts);\n  }, [setPosts]);\n\n  // get the posts that have the same community id as the current session\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await axiosClient.get(`/posts/posts1?community_id=${communityId}`);\n        setPosts(response.data.posts || []);\n      } catch (error) {\n        console.error(\"Failed to fetch posts: \", error);\n      }\n    };\n    fetchPosts();\n  }, [communityId]); // Empty dependency array means this effect runs once on mount\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      flexGrow: 1,\n      margin: 2\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: Array.isArray(posts) && posts.length > 0 ? posts.map(post => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            display: 'flex',\n            flexDirection: 'column',\n            minHeight: 200\n          },\n          children: [/*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              color: \"text.secondary\",\n              children: post.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n            sx: {\n              marginTop: 'auto'\n            },\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              \"aria-label\": \"add a comment\",\n              onClick: () => navigate(\"/comments\", {\n                state: {\n                  postId: post._id\n                }\n              }),\n              children: /*#__PURE__*/_jsxDEV(CommentIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: {\n                color: \"#9E4291\",\n                display: 'inline'\n              },\n              children: \"Comment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this)\n      }, post._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          textAlign: \"center\",\n          children: \"There are no posts in this community :(\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(PostContent, \"HZD6srve54t0V5sjIrS1/LQkkFA=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = PostContent;\n;\nvar _c;\n$RefreshReg$(_c, \"PostContent\");","map":{"version":3,"names":["React","useContext","useEffect","useState","axios","useNavigate","UserContext","Box","Grid","Typography","Card","CardContent","useLocation","CardActions","IconButton","CommentIcon","jsxDEV","_jsxDEV","_window","window","backendURL","__ENV","axiosClient","create","baseURL","timeout","withCredentials","config","headers","PostContent","communityId","_s","user","saveUser","showModal","saveShowModal","onModalClose","navigate","posts","setPosts","location","postId","state","console","log","fetchPosts","response","get","data","error","sx","flexGrow","margin","children","container","spacing","Array","isArray","length","map","post","item","xs","display","flexDirection","minHeight","variant","gutterBottom","title","fileName","_jsxFileName","lineNumber","columnNumber","color","description","marginTop","onClick","_id","textAlign","_c","$RefreshReg$"],"sources":["/Users/georgina/DestigFemmeDemoPi/frontend/src/Shop/components/PostContent.tsx"],"sourcesContent":["// Created by Georgina Alacaraz\nimport React, { useContext, useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { UserContext } from \"./Auth\";\nimport { PostType, UserContextType } from \"./Types\";\nimport { set } from \"mongoose\";\nimport { Box, Grid, Typography, Card, CardContent } from '@mui/material';\nimport ButtonBase from '@mui/material/ButtonBase';\nimport { useLocation } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport CardActions from '@mui/material/CardActions';\nimport IconButton from '@mui/material/IconButton';\nimport CommentIcon from '@mui/icons-material/Comment';\nimport { PodcastsOutlined, PostAddOutlined } from \"@mui/icons-material\";\nimport CommentContent from \"./CommentContent\";\n\n\ninterface WindowWithEnv extends Window {\n  __ENV?: {\n    backendURL: string, // REACT_APP_BACKEND_URL environment variable\n    sandbox: \"true\" | \"false\", // REACT_APP_SANDBOX_SDK environment variable - string, not boolean!\n  }\n}\n\nconst _window: WindowWithEnv = window;\nconst backendURL = _window.__ENV && _window.__ENV.backendURL;\n\nconst axiosClient = axios.create({ baseURL: `${backendURL}`, timeout: 20000, withCredentials: true });\nconst config = { headers: { 'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*' } };\n\nexport default function PostContent({ communityId }: { communityId: string }) {\n  const { user, saveUser, showModal, saveShowModal, onModalClose } = useContext(UserContext) as UserContextType;\n  const navigate = useNavigate();\n  const [posts, setPosts] = useState<PostType[]>([]);\n\n  const location = useLocation();\n  const postId = location.state.postId;\n  console.log(postId);\n \n  // Fetch posts when component mounts\n  useEffect(() => {\n    console.log(posts);\n  }, [setPosts]);\n  \n  // get the posts that have the same community id as the current session\n  useEffect(() => {\n      const fetchPosts = async () => {\n          try {\n              const response = await axiosClient.get(`/posts/posts1?community_id=${communityId}`);\n              setPosts(response.data.posts || []);\n          } catch (error) {\n              console.error(\"Failed to fetch posts: \", error);\n          }\n      };\n      fetchPosts();\n  }, [communityId]);// Empty dependency array means this effect runs once on mount\n\n  return (\n    <Box sx={{ flexGrow: 1, margin: 2}}>\n      <Grid container spacing={2}>\n        {Array.isArray(posts) && posts.length > 0 ? (\n          posts.map((post) => (\n            <Grid item xs={12} key={post._id}>\n              <Card sx={{ display: 'flex', flexDirection: 'column', minHeight: 200 }}>\n                <CardContent>\n                  <Typography variant=\"h6\" gutterBottom>\n                    {post.title}\n                  </Typography>\n                  <Typography variant=\"body1\" color=\"text.secondary\">\n                    {post.description}\n                  </Typography>\n                </CardContent>\n                <CardActions sx={{ marginTop: 'auto' }}>\n                  <IconButton aria-label=\"add a comment\" onClick={() => navigate(\"/comments\", { state: { postId: post._id } })}>\n                    <CommentIcon />\n                  </IconButton>\n                  <Typography variant=\"body2\" sx={{ color: \"#9E4291\", display: 'inline' }}>\n                    Comment\n                  </Typography>\n                </CardActions>\n              </Card>\n            </Grid>\n          ))\n        ) : (\n          <Grid item xs={12}>\n            <Typography variant=\"body1\" textAlign=\"center\">\n              There are no posts in this community :(\n            </Typography>\n          </Grid>\n        )}\n      </Grid>\n    </Box>\n   \n  );\n\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}