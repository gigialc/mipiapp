{"ast":null,"code":"var _jsxFileName = \"/Users/georgina/DestigFemmeDemoPi/frontend/src/Shop/components/CommentContent.tsx\",\n  _s = $RefreshSig$();\n//Created by Georgina Alacaraz\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useLocation } from 'react-router-dom';\nimport { UserContext } from './Auth';\nimport { Card, CardContent, Typography } from '@mui/material';\n//for community page\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst _window = window;\nconst backendURL = _window.__ENV && _window.__ENV.backendURL;\nconst axiosClient = axios.create({\n  baseURL: `${backendURL}`,\n  timeout: 20000,\n  withCredentials: true\n});\nconst config = {\n  headers: {\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Origin': '*'\n  }\n};\nexport default function CommentContent() {\n  _s();\n  const {\n    user,\n    saveUser,\n    showModal,\n    saveShowModal,\n    onModalClose\n  } = React.useContext(UserContext);\n  const [comment, setComment] = useState([]);\n  const location = useLocation();\n  const postId = location.state.postId;\n  console.log(postId);\n\n  // get the posts that have the same community id as the current session\n  useEffect(() => {\n    const fetchComments = async () => {\n      try {\n        const response = await axiosClient.get(`/comments/commentsByPostId?post_id=${postId}`);\n        setComment(response.data.comments || []);\n      } catch (error) {\n        console.error(\"Failed to fetch comments: \", error);\n      }\n    };\n    if (postId) {\n      // Only fetch comments if postId is available\n      fetchComments();\n    }\n  }, [postId]); // Empty dependency array means this effect runs once on mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: comment.map(comment => /*#__PURE__*/_jsxDEV(Card, {\n      variant: \"outlined\",\n      sx: {\n        backgroundColor: '#ffe6ff',\n        marginY: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"div\",\n          style: {\n            fontWeight: 'bold',\n            color: '#333'\n          },\n          children: comment.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(CommentContent, \"ika0pGhSGRiDcACVfbQGs0j9DfE=\", false, function () {\n  return [useLocation];\n});\n_c = CommentContent;\nvar _c;\n$RefreshReg$(_c, \"CommentContent\");","map":{"version":3,"names":["React","useEffect","useState","axios","useLocation","UserContext","Card","CardContent","Typography","jsxDEV","_jsxDEV","_window","window","backendURL","__ENV","axiosClient","create","baseURL","timeout","withCredentials","config","headers","CommentContent","_s","user","saveUser","showModal","saveShowModal","onModalClose","useContext","comment","setComment","location","postId","state","console","log","fetchComments","response","get","data","comments","error","children","map","variant","sx","backgroundColor","marginY","component","style","fontWeight","color","content","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/georgina/DestigFemmeDemoPi/frontend/src/Shop/components/CommentContent.tsx"],"sourcesContent":["//Created by Georgina Alacaraz\n\nimport { Button, Grid } from '@mui/material';\nimport { StringDecoder } from 'string_decoder';\nimport { UserContextType } from './Types';\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useLocation } from 'react-router-dom';\nimport { UserContext } from './Auth';\nimport { MyPaymentMetadata } from './Types';\nimport { onReadyForServerApproval, onReadyForServerCompletion } from './Payments';\nimport CardActions from '@mui/material/CardActions';\nimport IconButton from '@mui/material/IconButton';\nimport CommentIcon from '@mui/icons-material/Comment';\nimport { Card, CardContent, Typography } from '@mui/material';\n//for community page\n\ninterface WindowWithEnv extends Window {\n  __ENV?: {\n    backendURL: string, // REACT_APP_BACKEND_URL environment variable\n    sandbox: \"true\" | \"false\", // REACT_APP_SANDBOX_SDK environment variable - string, not boolean!\n  }\n}\n\nconst _window: WindowWithEnv = window;\nconst backendURL = _window.__ENV && _window.__ENV.backendURL;\n\nconst axiosClient = axios.create({ baseURL: `${backendURL}`, timeout: 20000, withCredentials: true });\nconst config = { headers: { 'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*' } };\n\nexport default function CommentContent() {\n  const { user, saveUser, showModal, saveShowModal, onModalClose } = React.useContext(UserContext) as UserContextType;\n  const [comment, setComment] = useState<{ content: string }[]>([]);\n  const location = useLocation();\n  const postId = location.state.postId;\n  console.log(postId);\n\n    // get the posts that have the same community id as the current session\n    useEffect(() => {\n      const fetchComments = async () => {\n          try {\n              const response = await axiosClient.get(`/comments/commentsByPostId?post_id=${postId}`);\n              setComment(response.data.comments || []);\n          } catch (error) {\n              console.error(\"Failed to fetch comments: \", error);\n          }\n      };\n      if (postId) { // Only fetch comments if postId is available\n          fetchComments();\n      }\n  }, [postId]);// Empty dependency array means this effect runs once on mount\n\n  return (\n    <div>\n      {comment.map((comment) => (\n        <Card variant=\"outlined\" sx={{ backgroundColor: '#ffe6ff', marginY: 2 }}>\n          <CardContent>\n            <Typography variant=\"h6\" component=\"div\" style={{ fontWeight: 'bold', color: '#333' }}>\n              {comment.content} \n            </Typography>\n          </CardContent>\n        </Card>\n      ))}\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}