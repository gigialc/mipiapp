{"ast":null,"code":"var _jsxFileName = \"/Users/georgina/DestigFemmeDemoPi/frontend/src/Shop/components/PostContent.tsx\",\n  _s = $RefreshSig$();\n// Created by Georgina Alacaraz\nimport React, { useContext, useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { UserContext } from \"./Auth\";\nimport { Box, Grid, Typography, Card, CardContent } from '@mui/material';\nimport { useLocation } from 'react-router-dom';\nimport CardActions from '@mui/material/CardActions';\nimport IconButton from '@mui/material/IconButton';\nimport HeartIcon from '@mui/icons-material/Favorite';\nimport ChatBubbleOutlineIcon from '@mui/icons-material/ChatBubbleOutline';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst _window = window;\nconst backendURL = _window.__ENV && _window.__ENV.backendURL;\nconst axiosClient = axios.create({\n  baseURL: `${backendURL}`,\n  timeout: 20000,\n  withCredentials: true\n});\nconst config = {\n  headers: {\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Origin': '*'\n  }\n};\nexport default function PostContent({\n  communityId\n}) {\n  _s();\n  const {\n    user,\n    saveUser,\n    showModal,\n    saveShowModal,\n    onModalClose\n  } = useContext(UserContext);\n  const navigate = useNavigate();\n  const [posts, setPosts] = useState([]);\n  const [postLikes, setPostLikes] = useState(posts.map(() => 0));\n  const [commentLikes, setCommentLikes] = useState([]);\n  const [liked, setLiked] = useState(Array(posts.length).fill(false));\n  const location = useLocation();\n  const postId = location.state.postId;\n  console.log(postId);\n\n  // Fetch posts when component mounts\n  //get number of likes for each post and weather the current user has likes them\n  useEffect(() => {\n    const fetchLikes = async () => {\n      try {\n        const response = await axiosClient.get(`/likes/posts?postId=${postId}`);\n        const likes = response.data.likes;\n        const liked = response.data.liked;\n        setPostLikes(likes);\n        setLiked(liked);\n      } catch (error) {\n        console.error(\"Failed to fetch likes: \", error);\n      }\n    };\n    fetchLikes();\n  }, [postId]); // Empty dependency array means this effect runs once on mount\n\n  //likes posted to backend for posts\n  const handleCommentLike = index => {\n    axiosClient.post(\"/likes/posts\", {\n      postId\n    }, config).then(response => {\n      console.log(response.data);\n    }).catch(error => {\n      console.error(\"Failed to like post: \", error);\n    });\n  };\n\n  // get the posts that have the same community id as the current session\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await axiosClient.get(`/posts/posts1?community_id=${communityId}`);\n        setPosts(response.data.posts || []);\n      } catch (error) {\n        console.error(\"Failed to fetch posts: \", error);\n      }\n    };\n    fetchPosts();\n  }, [communityId]); // Empty dependency array means this effect runs once on mount\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      flexGrow: 1,\n      margin: 2\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: Array.isArray(posts) && posts.length > 0 ? posts.map((post, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            flexDirection: 'column',\n            minHeight: 100,\n            width: \"100%\",\n            backgroundColor: '#efc9e4'\n          },\n          children: [/*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              align: \"left\",\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              color: \"text.secondary\",\n              align: \"left\",\n              children: post.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n            sx: {\n              marginTop: 'auto',\n              display: 'flex',\n              justifyContent: 'space-between'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(IconButton, {\n                \"aria-label\": \"add a comment\",\n                onClick: () => navigate(\"/comments\", {\n                  state: {\n                    postId: post._id\n                  }\n                }),\n                children: /*#__PURE__*/_jsxDEV(ChatBubbleOutlineIcon, {\n                  style: {\n                    fontSize: '16px',\n                    color: \"black\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                sx: {\n                  color: \"#9E4291\",\n                  display: 'inline',\n                  marginLeft: '4px'\n                },\n                children: post.comments.length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => handleCommentLike(index),\n                \"aria-label\": \"like post\",\n                disabled: liked[index] // Disable the button if the post is already liked\n                ,\n                children: /*#__PURE__*/_jsxDEV(HeartIcon, {\n                  style: {\n                    fontSize: '16px',\n                    fill: liked[index] ? 'red' : 'white',\n                    // Change fill color to red if liked, white otherwise\n                    stroke: 'black',\n                    strokeWidth: '2px'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 21\n              }, this), post.likes]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this)\n      }, post._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          textAlign: \"center\",\n          children: \"There are no posts in this community :(\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n_s(PostContent, \"8f/ZTqxn1shMQz8bcUBfDjrmDBU=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = PostContent;\nvar _c;\n$RefreshReg$(_c, \"PostContent\");","map":{"version":3,"names":["React","useContext","useEffect","useState","axios","useNavigate","UserContext","Box","Grid","Typography","Card","CardContent","useLocation","CardActions","IconButton","HeartIcon","ChatBubbleOutlineIcon","jsxDEV","_jsxDEV","_window","window","backendURL","__ENV","axiosClient","create","baseURL","timeout","withCredentials","config","headers","PostContent","communityId","_s","user","saveUser","showModal","saveShowModal","onModalClose","navigate","posts","setPosts","postLikes","setPostLikes","map","commentLikes","setCommentLikes","liked","setLiked","Array","length","fill","location","postId","state","console","log","fetchLikes","response","get","likes","data","error","handleCommentLike","index","post","then","catch","fetchPosts","sx","flexGrow","margin","children","container","spacing","isArray","item","xs","flexDirection","minHeight","width","backgroundColor","variant","gutterBottom","align","title","fileName","_jsxFileName","lineNumber","columnNumber","color","description","marginTop","display","justifyContent","onClick","_id","style","fontSize","marginLeft","comments","disabled","stroke","strokeWidth","textAlign","_c","$RefreshReg$"],"sources":["/Users/georgina/DestigFemmeDemoPi/frontend/src/Shop/components/PostContent.tsx"],"sourcesContent":["// Created by Georgina Alacaraz\nimport React, { useContext, useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { UserContext } from \"./Auth\";\nimport { PostType, UserContextType } from \"./Types\";\nimport { set } from \"mongoose\";\nimport { Box, Grid, Typography, Card, CardContent } from '@mui/material';\nimport ButtonBase from '@mui/material/ButtonBase';\nimport { useLocation } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport CardActions from '@mui/material/CardActions';\nimport IconButton from '@mui/material/IconButton';\nimport CommentIcon from '@mui/icons-material/Comment';\nimport { PodcastsOutlined, PostAddOutlined } from \"@mui/icons-material\";\nimport CommentContent from \"./CommentContent\";\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\nimport { CardMedia } from '@mui/material';\nimport { CardActionArea } from '@mui/material';\nimport HeartIcon from '@mui/icons-material/Favorite';\nimport ChatBubbleOutlineIcon from '@mui/icons-material/ChatBubbleOutline';\n\ninterface WindowWithEnv extends Window {\n  __ENV?: {\n    backendURL: string, // REACT_APP_BACKEND_URL environment variable\n    sandbox: \"true\" | \"false\", // REACT_APP_SANDBOX_SDK environment variable - string, not boolean!\n  }\n}\n\nconst _window: WindowWithEnv = window;\nconst backendURL = _window.__ENV && _window.__ENV.backendURL;\n\nconst axiosClient = axios.create({ baseURL: `${backendURL}`, timeout: 20000, withCredentials: true });\nconst config = { headers: { 'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*' } };\n\nexport default function PostContent({ communityId }: { communityId: string }) {\n  const { user, saveUser, showModal, saveShowModal, onModalClose } = useContext(UserContext) as UserContextType;\n  const navigate = useNavigate();\n  const [posts, setPosts] = useState<PostType[]>([]);\n  const [postLikes, setPostLikes] = useState(posts.map(() => 0));\n  const [commentLikes, setCommentLikes] = useState<number[]>([]);\n  const [liked, setLiked] = useState<boolean[]>(Array(posts.length).fill(false));\n\n  const location = useLocation();\n  const postId = location.state.postId;\n  console.log(postId);\n \n  // Fetch posts when component mounts\n  //get number of likes for each post and weather the current user has likes them\n  useEffect(() => {\n    const fetchLikes = async () => {\n      try {\n        const response = await axiosClient.get(`/likes/posts?postId=${postId}`);\n        const likes = response.data.likes;\n        const liked = response.data.liked;\n        setPostLikes(likes);\n        setLiked(liked);\n      } catch (error) {\n        console.error(\"Failed to fetch likes: \", error);\n      }\n    };\n    fetchLikes();\n  }, [postId]); // Empty dependency array means this effect runs once on mount\n\n\n  //likes posted to backend for posts\n  const handleCommentLike = (index: number) => {\n    axiosClient.post(\"/likes/posts\", { postId }, config)\n      .then(response => {\n        console.log(response.data);\n      })\n      .catch(error => {\n        console.error(\"Failed to like post: \", error);\n      });\n  };\n  \n  // get the posts that have the same community id as the current session\n  useEffect(() => {\n      const fetchPosts = async () => {\n          try {\n              const response = await axiosClient.get(`/posts/posts1?community_id=${communityId}`);\n              setPosts(response.data.posts || []);\n          } catch (error) {\n              console.error(\"Failed to fetch posts: \", error);\n          }\n      };\n      fetchPosts();\n  }, [communityId]);// Empty dependency array means this effect runs once on mount\n\n  return (\n    <Box sx={{ flexGrow: 1, margin: 2 }}>\n      <Grid container spacing={2}>\n        {Array.isArray(posts) && posts.length > 0 ? (\n          posts.map((post, index) => (\n            <Grid item xs={12} key={post._id}>\n              <Card sx={{ flexDirection: 'column', minHeight: 100, width: \"100%\", backgroundColor:'#efc9e4' }}>\n                <CardContent>\n                  <Typography variant=\"h6\" gutterBottom align=\"left\">\n                    {post.title}\n                  </Typography>\n                  <Typography variant=\"body1\" color=\"text.secondary\" align=\"left\">\n                    {post.description}\n                  </Typography>\n                </CardContent>\n                <CardActions sx={{ marginTop: 'auto', display: 'flex', justifyContent: 'space-between' }}>\n                  {/* Comment button */}\n                  <div> {/* Wrap comment icon and button in a div */}\n                    <IconButton aria-label=\"add a comment\" onClick={() => navigate(\"/comments\", { state: { postId: post._id } })}>\n                      <ChatBubbleOutlineIcon style={{ fontSize: '16px', color: \"black\"}} />\n                    </IconButton>\n                    <Typography variant=\"body2\" sx={{ color: \"#9E4291\", display: 'inline', marginLeft: '4px' }}>\n                      {post.comments.length}\n                    </Typography>\n                  </div>\n                  {/* Like button */}\n                  <div> {/* Wrap like button and likes count in a div */}\n                    <IconButton\n                      onClick={() => handleCommentLike(index)}\n                      aria-label=\"like post\"\n                      disabled={liked[index]} // Disable the button if the post is already liked\n                    >\n                      <HeartIcon\n                        style={{\n                          fontSize: '16px',\n                          fill: liked[index] ? 'red' : 'white', // Change fill color to red if liked, white otherwise\n                          stroke: 'black',\n                          strokeWidth: '2px'\n                        }}\n                      />\n                    </IconButton >{post.likes}\n                  </div>\n                </CardActions>\n              </Card>\n            </Grid>\n          ))\n        ) : (\n          <Grid item xs={12}>\n            <Typography variant=\"body1\" textAlign=\"center\">\n              There are no posts in this community :(\n            </Typography>\n          </Grid>\n        )}\n      </Grid>\n    </Box>\n  );\n  \n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}