{"ast":null,"code":"/**\n * React Router v6.14.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('react'), require('@remix-run/router')) : typeof define === 'function' && define.amd ? define(['exports', 'react', '@remix-run/router'], factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.ReactRouter = {}, global.React, global.RemixRouter));\n})(this, function (exports, React, router) {\n  'use strict';\n\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = Object.create(null);\n    if (e) {\n      Object.keys(e).forEach(function (k) {\n        if (k !== 'default') {\n          var d = Object.getOwnPropertyDescriptor(e, k);\n          Object.defineProperty(n, k, d.get ? d : {\n            enumerable: true,\n            get: function () {\n              return e[k];\n            }\n          });\n        }\n      });\n    }\n    n[\"default\"] = e;\n    return Object.freeze(n);\n  }\n  var React__namespace = /*#__PURE__*/_interopNamespace(React);\n  function _extends() {\n    _extends = Object.assign ? Object.assign.bind() : function (target) {\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i];\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n      return target;\n    };\n    return _extends.apply(this, arguments);\n  }\n\n  // Create react-specific types from the agnostic types in @remix-run/router to\n  // export from react-router\n  const DataRouterContext = /*#__PURE__*/React__namespace.createContext(null);\n  {\n    DataRouterContext.displayName = \"DataRouter\";\n  }\n  const DataRouterStateContext = /*#__PURE__*/React__namespace.createContext(null);\n  {\n    DataRouterStateContext.displayName = \"DataRouterState\";\n  }\n  const AwaitContext = /*#__PURE__*/React__namespace.createContext(null);\n  {\n    AwaitContext.displayName = \"Await\";\n  }\n\n  /**\n   * A Navigator is a \"location changer\"; it's how you get to different locations.\n   *\n   * Every history instance conforms to the Navigator interface, but the\n   * distinction is useful primarily when it comes to the low-level <Router> API\n   * where both the location and a navigator must be provided separately in order\n   * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n   * and/or location were to be read directly from the history instance.\n   */\n\n  const NavigationContext = /*#__PURE__*/React__namespace.createContext(null);\n  {\n    NavigationContext.displayName = \"Navigation\";\n  }\n  const LocationContext = /*#__PURE__*/React__namespace.createContext(null);\n  {\n    LocationContext.displayName = \"Location\";\n  }\n  const RouteContext = /*#__PURE__*/React__namespace.createContext({\n    outlet: null,\n    matches: [],\n    isDataRoute: false\n  });\n  {\n    RouteContext.displayName = \"Route\";\n  }\n  const RouteErrorContext = /*#__PURE__*/React__namespace.createContext(null);\n  {\n    RouteErrorContext.displayName = \"RouteError\";\n  }\n\n  /**\n   * Returns the full href for the given \"to\" value. This is useful for building\n   * custom links that are also accessible and preserve right-click behavior.\n   *\n   * @see https://reactrouter.com/hooks/use-href\n   */\n  function useHref(to, _temp) {\n    let {\n      relative\n    } = _temp === void 0 ? {} : _temp;\n    !useInRouterContext() ? router.UNSAFE_invariant(false,\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    \"useHref() may be used only in the context of a <Router> component.\") : void 0;\n    let {\n      basename,\n      navigator\n    } = React__namespace.useContext(NavigationContext);\n    let {\n      hash,\n      pathname,\n      search\n    } = useResolvedPath(to, {\n      relative\n    });\n    let joinedPathname = pathname;\n\n    // If we're operating within a basename, prepend it to the pathname prior\n    // to creating the href.  If this is a root navigation, then just use the raw\n    // basename which allows the basename to have full control over the presence\n    // of a trailing slash on root links\n    if (basename !== \"/\") {\n      joinedPathname = pathname === \"/\" ? basename : router.joinPaths([basename, pathname]);\n    }\n    return navigator.createHref({\n      pathname: joinedPathname,\n      search,\n      hash\n    });\n  }\n\n  /**\n   * Returns true if this component is a descendant of a <Router>.\n   *\n   * @see https://reactrouter.com/hooks/use-in-router-context\n   */\n  function useInRouterContext() {\n    return React__namespace.useContext(LocationContext) != null;\n  }\n\n  /**\n   * Returns the current location object, which represents the current URL in web\n   * browsers.\n   *\n   * Note: If you're using this it may mean you're doing some of your own\n   * \"routing\" in your app, and we'd like to know what your use case is. We may\n   * be able to provide something higher-level to better suit your needs.\n   *\n   * @see https://reactrouter.com/hooks/use-location\n   */\n  function useLocation() {\n    !useInRouterContext() ? router.UNSAFE_invariant(false,\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    \"useLocation() may be used only in the context of a <Router> component.\") : void 0;\n    return React__namespace.useContext(LocationContext).location;\n  }\n\n  /**\n   * Returns the current navigation action which describes how the router came to\n   * the current location, either by a pop, push, or replace on the history stack.\n   *\n   * @see https://reactrouter.com/hooks/use-navigation-type\n   */\n  function useNavigationType() {\n    return React__namespace.useContext(LocationContext).navigationType;\n  }\n\n  /**\n   * Returns a PathMatch object if the given pattern matches the current URL.\n   * This is useful for components that need to know \"active\" state, e.g.\n   * <NavLink>.\n   *\n   * @see https://reactrouter.com/hooks/use-match\n   */\n  function useMatch(pattern) {\n    !useInRouterContext() ? router.UNSAFE_invariant(false,\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    \"useMatch() may be used only in the context of a <Router> component.\") : void 0;\n    let {\n      pathname\n    } = useLocation();\n    return React__namespace.useMemo(() => router.matchPath(pattern, pathname), [pathname, pattern]);\n  }\n\n  /**\n   * The interface for the navigate() function returned from useNavigate().\n   */\n\n  const navigateEffectWarning = \"You should call navigate() in a React.useEffect(), not when \" + \"your component is first rendered.\";\n\n  // Mute warnings for calls to useNavigate in SSR environments\n  function useIsomorphicLayoutEffect(cb) {\n    let isStatic = React__namespace.useContext(NavigationContext).static;\n    if (!isStatic) {\n      // We should be able to get rid of this once react 18.3 is released\n      // See: https://github.com/facebook/react/pull/26395\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      React__namespace.useLayoutEffect(cb);\n    }\n  }\n\n  /**\n   * Returns an imperative method for changing the location. Used by <Link>s, but\n   * may also be used by other elements to change the location.\n   *\n   * @see https://reactrouter.com/hooks/use-navigate\n   */\n  function useNavigate() {\n    let {\n      isDataRoute\n    } = React__namespace.useContext(RouteContext);\n    // Conditional usage is OK here because the usage of a data router is static\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n  }\n  function useNavigateUnstable() {\n    !useInRouterContext() ? router.UNSAFE_invariant(false,\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    \"useNavigate() may be used only in the context of a <Router> component.\") : void 0;\n    let dataRouterContext = React__namespace.useContext(DataRouterContext);\n    let {\n      basename,\n      navigator\n    } = React__namespace.useContext(NavigationContext);\n    let {\n      matches\n    } = React__namespace.useContext(RouteContext);\n    let {\n      pathname: locationPathname\n    } = useLocation();\n    let routePathnamesJson = JSON.stringify(router.UNSAFE_getPathContributingMatches(matches).map(match => match.pathnameBase));\n    let activeRef = React__namespace.useRef(false);\n    useIsomorphicLayoutEffect(() => {\n      activeRef.current = true;\n    });\n    let navigate = React__namespace.useCallback(function (to, options) {\n      if (options === void 0) {\n        options = {};\n      }\n      router.UNSAFE_warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our history listener yet\n      if (!activeRef.current) return;\n      if (typeof to === \"number\") {\n        navigator.go(to);\n        return;\n      }\n      let path = router.resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, options.relative === \"path\");\n\n      // If we're operating within a basename, prepend it to the pathname prior\n      // to handing off to history (but only if we're not in a data router,\n      // otherwise it'll prepend the basename inside of the router).\n      // If this is a root navigation, then we navigate to the raw basename\n      // which allows the basename to have full control over the presence of a\n      // trailing slash on root links\n      if (dataRouterContext == null && basename !== \"/\") {\n        path.pathname = path.pathname === \"/\" ? basename : router.joinPaths([basename, path.pathname]);\n      }\n      (!!options.replace ? navigator.replace : navigator.push)(path, options.state, options);\n    }, [basename, navigator, routePathnamesJson, locationPathname, dataRouterContext]);\n    return navigate;\n  }\n  const OutletContext = /*#__PURE__*/React__namespace.createContext(null);\n\n  /**\n   * Returns the context (if provided) for the child route at this level of the route\n   * hierarchy.\n   * @see https://reactrouter.com/hooks/use-outlet-context\n   */\n  function useOutletContext() {\n    return React__namespace.useContext(OutletContext);\n  }\n\n  /**\n   * Returns the element for the child route at this level of the route\n   * hierarchy. Used internally by <Outlet> to render child routes.\n   *\n   * @see https://reactrouter.com/hooks/use-outlet\n   */\n  function useOutlet(context) {\n    let outlet = React__namespace.useContext(RouteContext).outlet;\n    if (outlet) {\n      return /*#__PURE__*/React__namespace.createElement(OutletContext.Provider, {\n        value: context\n      }, outlet);\n    }\n    return outlet;\n  }\n\n  /**\n   * Returns an object of key/value pairs of the dynamic params from the current\n   * URL that were matched by the route path.\n   *\n   * @see https://reactrouter.com/hooks/use-params\n   */\n  function useParams() {\n    let {\n      matches\n    } = React__namespace.useContext(RouteContext);\n    let routeMatch = matches[matches.length - 1];\n    return routeMatch ? routeMatch.params : {};\n  }\n\n  /**\n   * Resolves the pathname of the given `to` value against the current location.\n   *\n   * @see https://reactrouter.com/hooks/use-resolved-path\n   */\n  function useResolvedPath(to, _temp2) {\n    let {\n      relative\n    } = _temp2 === void 0 ? {} : _temp2;\n    let {\n      matches\n    } = React__namespace.useContext(RouteContext);\n    let {\n      pathname: locationPathname\n    } = useLocation();\n    let routePathnamesJson = JSON.stringify(router.UNSAFE_getPathContributingMatches(matches).map(match => match.pathnameBase));\n    return React__namespace.useMemo(() => router.resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, relative === \"path\"), [to, routePathnamesJson, locationPathname, relative]);\n  }\n\n  /**\n   * Returns the element of the route that matched the current location, prepared\n   * with the correct context to render the remainder of the route tree. Route\n   * elements in the tree must render an <Outlet> to render their child route's\n   * element.\n   *\n   * @see https://reactrouter.com/hooks/use-routes\n   */\n  function useRoutes(routes, locationArg) {\n    return useRoutesImpl(routes, locationArg);\n  }\n\n  // Internal implementation with accept optional param for RouterProvider usage\n  function useRoutesImpl(routes, locationArg, dataRouterState) {\n    !useInRouterContext() ? router.UNSAFE_invariant(false,\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    \"useRoutes() may be used only in the context of a <Router> component.\") : void 0;\n    let {\n      navigator\n    } = React__namespace.useContext(NavigationContext);\n    let {\n      matches: parentMatches\n    } = React__namespace.useContext(RouteContext);\n    let routeMatch = parentMatches[parentMatches.length - 1];\n    let parentParams = routeMatch ? routeMatch.params : {};\n    let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n    let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n    let parentRoute = routeMatch && routeMatch.route;\n    {\n      // You won't get a warning about 2 different <Routes> under a <Route>\n      // without a trailing *, but this is a best-effort warning anyway since we\n      // cannot even give the warning unless they land at the parent route.\n      //\n      // Example:\n      //\n      // <Routes>\n      //   {/* This route path MUST end with /* because otherwise\n      //       it will never match /blog/post/123 */}\n      //   <Route path=\"blog\" element={<Blog />} />\n      //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n      // </Routes>\n      //\n      // function Blog() {\n      //   return (\n      //     <Routes>\n      //       <Route path=\"post/:id\" element={<Post />} />\n      //     </Routes>\n      //   );\n      // }\n      let parentPath = parentRoute && parentRoute.path || \"\";\n      warningOnce(parentPathname, !parentRoute || parentPath.endsWith(\"*\"), \"You rendered descendant <Routes> (or called `useRoutes()`) at \" + (\"\\\"\" + parentPathname + \"\\\" (under <Route path=\\\"\" + parentPath + \"\\\">) but the \") + \"parent route path has no trailing \\\"*\\\". This means if you navigate \" + \"deeper, the parent won't match anymore and therefore the child \" + \"routes will never render.\\n\\n\" + (\"Please change the parent <Route path=\\\"\" + parentPath + \"\\\"> to <Route \") + (\"path=\\\"\" + (parentPath === \"/\" ? \"*\" : parentPath + \"/*\") + \"\\\">.\"));\n    }\n    let locationFromContext = useLocation();\n    let location;\n    if (locationArg) {\n      var _parsedLocationArg$pa;\n      let parsedLocationArg = typeof locationArg === \"string\" ? router.parsePath(locationArg) : locationArg;\n      !(parentPathnameBase === \"/\" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ? router.UNSAFE_invariant(false, \"When overriding the location using `<Routes location>` or `useRoutes(routes, location)`, \" + \"the location pathname must begin with the portion of the URL pathname that was \" + (\"matched by all parent routes. The current pathname base is \\\"\" + parentPathnameBase + \"\\\" \") + (\"but pathname \\\"\" + parsedLocationArg.pathname + \"\\\" was given in the `location` prop.\")) : void 0;\n      location = parsedLocationArg;\n    } else {\n      location = locationFromContext;\n    }\n    let pathname = location.pathname || \"/\";\n    let remainingPathname = parentPathnameBase === \"/\" ? pathname : pathname.slice(parentPathnameBase.length) || \"/\";\n    let matches = router.matchRoutes(routes, {\n      pathname: remainingPathname\n    });\n    {\n      router.UNSAFE_warning(parentRoute || matches != null, \"No routes matched location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \");\n      router.UNSAFE_warning(matches == null || matches[matches.length - 1].route.element !== undefined || matches[matches.length - 1].route.Component !== undefined, \"Matched leaf route at location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \" + \"does not have an element or Component. This means it will render an <Outlet /> with a \" + \"null value by default resulting in an \\\"empty\\\" page.\");\n    }\n    let renderedMatches = _renderMatches(matches && matches.map(match => Object.assign({}, match, {\n      params: Object.assign({}, parentParams, match.params),\n      pathname: router.joinPaths([parentPathnameBase,\n      // Re-encode pathnames that were decoded inside matchRoutes\n      navigator.encodeLocation ? navigator.encodeLocation(match.pathname).pathname : match.pathname]),\n      pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : router.joinPaths([parentPathnameBase,\n      // Re-encode pathnames that were decoded inside matchRoutes\n      navigator.encodeLocation ? navigator.encodeLocation(match.pathnameBase).pathname : match.pathnameBase])\n    })), parentMatches, dataRouterState);\n\n    // When a user passes in a `locationArg`, the associated routes need to\n    // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n    // to use the scoped location instead of the global location.\n    if (locationArg && renderedMatches) {\n      return /*#__PURE__*/React__namespace.createElement(LocationContext.Provider, {\n        value: {\n          location: _extends({\n            pathname: \"/\",\n            search: \"\",\n            hash: \"\",\n            state: null,\n            key: \"default\"\n          }, location),\n          navigationType: router.Action.Pop\n        }\n      }, renderedMatches);\n    }\n    return renderedMatches;\n  }\n  function DefaultErrorComponent() {\n    let error = useRouteError();\n    let message = router.isRouteErrorResponse(error) ? error.status + \" \" + error.statusText : error instanceof Error ? error.message : JSON.stringify(error);\n    let stack = error instanceof Error ? error.stack : null;\n    let lightgrey = \"rgba(200,200,200, 0.5)\";\n    let preStyles = {\n      padding: \"0.5rem\",\n      backgroundColor: lightgrey\n    };\n    let codeStyles = {\n      padding: \"2px 4px\",\n      backgroundColor: lightgrey\n    };\n    let devInfo = null;\n    {\n      console.error(\"Error handled by React Router default ErrorBoundary:\", error);\n      devInfo = /*#__PURE__*/React__namespace.createElement(React__namespace.Fragment, null, /*#__PURE__*/React__namespace.createElement(\"p\", null, \"\\uD83D\\uDCBF Hey developer \\uD83D\\uDC4B\"), /*#__PURE__*/React__namespace.createElement(\"p\", null, \"You can provide a way better UX than this when your app throws errors by providing your own \", /*#__PURE__*/React__namespace.createElement(\"code\", {\n        style: codeStyles\n      }, \"ErrorBoundary\"), \" or\", \" \", /*#__PURE__*/React__namespace.createElement(\"code\", {\n        style: codeStyles\n      }, \"errorElement\"), \" prop on your route.\"));\n    }\n    return /*#__PURE__*/React__namespace.createElement(React__namespace.Fragment, null, /*#__PURE__*/React__namespace.createElement(\"h2\", null, \"Unexpected Application Error!\"), /*#__PURE__*/React__namespace.createElement(\"h3\", {\n      style: {\n        fontStyle: \"italic\"\n      }\n    }, message), stack ? /*#__PURE__*/React__namespace.createElement(\"pre\", {\n      style: preStyles\n    }, stack) : null, devInfo);\n  }\n  const defaultErrorElement = /*#__PURE__*/React__namespace.createElement(DefaultErrorComponent, null);\n  class RenderErrorBoundary extends React__namespace.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        location: props.location,\n        revalidation: props.revalidation,\n        error: props.error\n      };\n    }\n    static getDerivedStateFromError(error) {\n      return {\n        error: error\n      };\n    }\n    static getDerivedStateFromProps(props, state) {\n      // When we get into an error state, the user will likely click \"back\" to the\n      // previous page that didn't have an error. Because this wraps the entire\n      // application, that will have no effect--the error page continues to display.\n      // This gives us a mechanism to recover from the error when the location changes.\n      //\n      // Whether we're in an error state or not, we update the location in state\n      // so that when we are in an error state, it gets reset when a new location\n      // comes in and the user recovers from the error.\n      if (state.location !== props.location || state.revalidation !== \"idle\" && props.revalidation === \"idle\") {\n        return {\n          error: props.error,\n          location: props.location,\n          revalidation: props.revalidation\n        };\n      }\n\n      // If we're not changing locations, preserve the location but still surface\n      // any new errors that may come through. We retain the existing error, we do\n      // this because the error provided from the app state may be cleared without\n      // the location changing.\n      return {\n        error: props.error || state.error,\n        location: state.location,\n        revalidation: props.revalidation || state.revalidation\n      };\n    }\n    componentDidCatch(error, errorInfo) {\n      console.error(\"React Router caught the following error during render\", error, errorInfo);\n    }\n    render() {\n      return this.state.error ? /*#__PURE__*/React__namespace.createElement(RouteContext.Provider, {\n        value: this.props.routeContext\n      }, /*#__PURE__*/React__namespace.createElement(RouteErrorContext.Provider, {\n        value: this.state.error,\n        children: this.props.component\n      })) : this.props.children;\n    }\n  }\n  function RenderedRoute(_ref) {\n    let {\n      routeContext,\n      match,\n      children\n    } = _ref;\n    let dataRouterContext = React__namespace.useContext(DataRouterContext);\n\n    // Track how deep we got in our render pass to emulate SSR componentDidCatch\n    // in a DataStaticRouter\n    if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {\n      dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n    }\n    return /*#__PURE__*/React__namespace.createElement(RouteContext.Provider, {\n      value: routeContext\n    }, children);\n  }\n  function _renderMatches(matches, parentMatches, dataRouterState) {\n    var _dataRouterState2;\n    if (parentMatches === void 0) {\n      parentMatches = [];\n    }\n    if (dataRouterState === void 0) {\n      dataRouterState = null;\n    }\n    if (matches == null) {\n      var _dataRouterState;\n      if ((_dataRouterState = dataRouterState) != null && _dataRouterState.errors) {\n        // Don't bail if we have data router errors so we can render them in the\n        // boundary.  Use the pre-matched (or shimmed) matches\n        matches = dataRouterState.matches;\n      } else {\n        return null;\n      }\n    }\n    let renderedMatches = matches;\n\n    // If we have data errors, trim matches to the highest error boundary\n    let errors = (_dataRouterState2 = dataRouterState) == null ? void 0 : _dataRouterState2.errors;\n    if (errors != null) {\n      let errorIndex = renderedMatches.findIndex(m => m.route.id && (errors == null ? void 0 : errors[m.route.id]));\n      !(errorIndex >= 0) ? router.UNSAFE_invariant(false, \"Could not find a matching route for errors on route IDs: \" + Object.keys(errors).join(\",\")) : void 0;\n      renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));\n    }\n    return renderedMatches.reduceRight((outlet, match, index) => {\n      let error = match.route.id ? errors == null ? void 0 : errors[match.route.id] : null;\n      // Only data routers handle errors\n      let errorElement = null;\n      if (dataRouterState) {\n        errorElement = match.route.errorElement || defaultErrorElement;\n      }\n      let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n      let getChildren = () => {\n        let children;\n        if (error) {\n          children = errorElement;\n        } else if (match.route.Component) {\n          // Note: This is a de-optimized path since React won't re-use the\n          // ReactElement since it's identity changes with each new\n          // React.createElement call.  We keep this so folks can use\n          // `<Route Component={...}>` in `<Routes>` but generally `Component`\n          // usage is only advised in `RouterProvider` when we can convert it to\n          // `element` ahead of time.\n          children = /*#__PURE__*/React__namespace.createElement(match.route.Component, null);\n        } else if (match.route.element) {\n          children = match.route.element;\n        } else {\n          children = outlet;\n        }\n        return /*#__PURE__*/React__namespace.createElement(RenderedRoute, {\n          match: match,\n          routeContext: {\n            outlet,\n            matches,\n            isDataRoute: dataRouterState != null\n          },\n          children: children\n        });\n      };\n      // Only wrap in an error boundary within data router usages when we have an\n      // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n      // an ancestor ErrorBoundary/errorElement\n      return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /*#__PURE__*/React__namespace.createElement(RenderErrorBoundary, {\n        location: dataRouterState.location,\n        revalidation: dataRouterState.revalidation,\n        component: errorElement,\n        error: error,\n        children: getChildren(),\n        routeContext: {\n          outlet: null,\n          matches,\n          isDataRoute: true\n        }\n      }) : getChildren();\n    }, null);\n  }\n  var DataRouterHook;\n  (function (DataRouterHook) {\n    DataRouterHook[\"UseBlocker\"] = \"useBlocker\";\n    DataRouterHook[\"UseRevalidator\"] = \"useRevalidator\";\n    DataRouterHook[\"UseNavigateStable\"] = \"useNavigate\";\n  })(DataRouterHook || (DataRouterHook = {}));\n  var DataRouterStateHook;\n  (function (DataRouterStateHook) {\n    DataRouterStateHook[\"UseBlocker\"] = \"useBlocker\";\n    DataRouterStateHook[\"UseLoaderData\"] = \"useLoaderData\";\n    DataRouterStateHook[\"UseActionData\"] = \"useActionData\";\n    DataRouterStateHook[\"UseRouteError\"] = \"useRouteError\";\n    DataRouterStateHook[\"UseNavigation\"] = \"useNavigation\";\n    DataRouterStateHook[\"UseRouteLoaderData\"] = \"useRouteLoaderData\";\n    DataRouterStateHook[\"UseMatches\"] = \"useMatches\";\n    DataRouterStateHook[\"UseRevalidator\"] = \"useRevalidator\";\n    DataRouterStateHook[\"UseNavigateStable\"] = \"useNavigate\";\n    DataRouterStateHook[\"UseRouteId\"] = \"useRouteId\";\n  })(DataRouterStateHook || (DataRouterStateHook = {}));\n  function getDataRouterConsoleError(hookName) {\n    return hookName + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n  }\n  function useDataRouterContext(hookName) {\n    let ctx = React__namespace.useContext(DataRouterContext);\n    !ctx ? router.UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : void 0;\n    return ctx;\n  }\n  function useDataRouterState(hookName) {\n    let state = React__namespace.useContext(DataRouterStateContext);\n    !state ? router.UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : void 0;\n    return state;\n  }\n  function useRouteContext(hookName) {\n    let route = React__namespace.useContext(RouteContext);\n    !route ? router.UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : void 0;\n    return route;\n  }\n\n  // Internal version with hookName-aware debugging\n  function useCurrentRouteId(hookName) {\n    let route = useRouteContext(hookName);\n    let thisRoute = route.matches[route.matches.length - 1];\n    !thisRoute.route.id ? router.UNSAFE_invariant(false, hookName + \" can only be used on routes that contain a unique \\\"id\\\"\") : void 0;\n    return thisRoute.route.id;\n  }\n\n  /**\n   * Returns the ID for the nearest contextual route\n   */\n  function useRouteId() {\n    return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n  }\n\n  /**\n   * Returns the current navigation, defaulting to an \"idle\" navigation when\n   * no navigation is in progress\n   */\n  function useNavigation() {\n    let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n    return state.navigation;\n  }\n\n  /**\n   * Returns a revalidate function for manually triggering revalidation, as well\n   * as the current state of any manual revalidations\n   */\n  function useRevalidator() {\n    let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n    let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n    return {\n      revalidate: dataRouterContext.router.revalidate,\n      state: state.revalidation\n    };\n  }\n\n  /**\n   * Returns the active route matches, useful for accessing loaderData for\n   * parent/child routes or the route \"handle\" property\n   */\n  function useMatches() {\n    let {\n      matches,\n      loaderData\n    } = useDataRouterState(DataRouterStateHook.UseMatches);\n    return React__namespace.useMemo(() => matches.map(match => {\n      let {\n        pathname,\n        params\n      } = match;\n      // Note: This structure matches that created by createUseMatchesMatch\n      // in the @remix-run/router , so if you change this please also change\n      // that :)  Eventually we'll DRY this up\n      return {\n        id: match.route.id,\n        pathname,\n        params,\n        data: loaderData[match.route.id],\n        handle: match.route.handle\n      };\n    }), [matches, loaderData]);\n  }\n\n  /**\n   * Returns the loader data for the nearest ancestor Route loader\n   */\n  function useLoaderData() {\n    let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n    let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n    if (state.errors && state.errors[routeId] != null) {\n      console.error(\"You cannot `useLoaderData` in an errorElement (routeId: \" + routeId + \")\");\n      return undefined;\n    }\n    return state.loaderData[routeId];\n  }\n\n  /**\n   * Returns the loaderData for the given routeId\n   */\n  function useRouteLoaderData(routeId) {\n    let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n    return state.loaderData[routeId];\n  }\n\n  /**\n   * Returns the action data for the nearest ancestor Route action\n   */\n  function useActionData() {\n    let state = useDataRouterState(DataRouterStateHook.UseActionData);\n    let route = React__namespace.useContext(RouteContext);\n    !route ? router.UNSAFE_invariant(false, \"useActionData must be used inside a RouteContext\") : void 0;\n    return Object.values((state == null ? void 0 : state.actionData) || {})[0];\n  }\n\n  /**\n   * Returns the nearest ancestor Route error, which could be a loader/action\n   * error or a render error.  This is intended to be called from your\n   * ErrorBoundary/errorElement to display a proper error message.\n   */\n  function useRouteError() {\n    var _state$errors;\n    let error = React__namespace.useContext(RouteErrorContext);\n    let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n    let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n    // If this was a render error, we put it in a RouteError context inside\n    // of RenderErrorBoundary\n    if (error) {\n      return error;\n    }\n\n    // Otherwise look for errors from our data router state\n    return (_state$errors = state.errors) == null ? void 0 : _state$errors[routeId];\n  }\n\n  /**\n   * Returns the happy-path data from the nearest ancestor <Await /> value\n   */\n  function useAsyncValue() {\n    let value = React__namespace.useContext(AwaitContext);\n    return value == null ? void 0 : value._data;\n  }\n\n  /**\n   * Returns the error from the nearest ancestor <Await /> value\n   */\n  function useAsyncError() {\n    let value = React__namespace.useContext(AwaitContext);\n    return value == null ? void 0 : value._error;\n  }\n  let blockerId = 0;\n\n  /**\n   * Allow the application to block navigations within the SPA and present the\n   * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n   * using half-filled form data.  This does not handle hard-reloads or\n   * cross-origin navigations.\n   */\n  function useBlocker(shouldBlock) {\n    let {\n      router: router$1,\n      basename\n    } = useDataRouterContext(DataRouterHook.UseBlocker);\n    let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n    let [blockerKey, setBlockerKey] = React__namespace.useState(\"\");\n    let blockerFunction = React__namespace.useCallback(arg => {\n      if (typeof shouldBlock !== \"function\") {\n        return !!shouldBlock;\n      }\n      if (basename === \"/\") {\n        return shouldBlock(arg);\n      }\n\n      // If they provided us a function and we've got an active basename, strip\n      // it from the locations we expose to the user to match the behavior of\n      // useLocation\n      let {\n        currentLocation,\n        nextLocation,\n        historyAction\n      } = arg;\n      return shouldBlock({\n        currentLocation: _extends({}, currentLocation, {\n          pathname: router.stripBasename(currentLocation.pathname, basename) || currentLocation.pathname\n        }),\n        nextLocation: _extends({}, nextLocation, {\n          pathname: router.stripBasename(nextLocation.pathname, basename) || nextLocation.pathname\n        }),\n        historyAction\n      });\n    }, [basename, shouldBlock]);\n\n    // This effect is in charge of blocker key assignment and deletion (which is\n    // tightly coupled to the key)\n    React__namespace.useEffect(() => {\n      let key = String(++blockerId);\n      setBlockerKey(key);\n      return () => router$1.deleteBlocker(key);\n    }, [router$1]);\n\n    // This effect handles assigning the blockerFunction.  This is to handle\n    // unstable blocker function identities, and happens only after the prior\n    // effect so we don't get an orphaned blockerFunction in the router with a\n    // key of \"\".  Until then we just have the IDLE_BLOCKER.\n    React__namespace.useEffect(() => {\n      if (blockerKey !== \"\") {\n        router$1.getBlocker(blockerKey, blockerFunction);\n      }\n    }, [router$1, blockerKey, blockerFunction]);\n\n    // Prefer the blocker from `state` not `router.state` since DataRouterContext\n    // is memoized so this ensures we update on blocker state updates\n    return blockerKey && state.blockers.has(blockerKey) ? state.blockers.get(blockerKey) : router.IDLE_BLOCKER;\n  }\n\n  /**\n   * Stable version of useNavigate that is used when we are in the context of\n   * a RouterProvider.\n   */\n  function useNavigateStable() {\n    let {\n      router: router$1\n    } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n    let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n    let activeRef = React__namespace.useRef(false);\n    useIsomorphicLayoutEffect(() => {\n      activeRef.current = true;\n    });\n    let navigate = React__namespace.useCallback(function (to, options) {\n      if (options === void 0) {\n        options = {};\n      }\n      router.UNSAFE_warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our router subscriber yet\n      if (!activeRef.current) return;\n      if (typeof to === \"number\") {\n        router$1.navigate(to);\n      } else {\n        router$1.navigate(to, _extends({\n          fromRouteId: id\n        }, options));\n      }\n    }, [router$1, id]);\n    return navigate;\n  }\n  const alreadyWarned = {};\n  function warningOnce(key, cond, message) {\n    if (!cond && !alreadyWarned[key]) {\n      alreadyWarned[key] = true;\n      router.UNSAFE_warning(false, message);\n    }\n  }\n\n  /**\n    Webpack + React 17 fails to compile on any of the following because webpack\n    complains that `startTransition` doesn't exist in `React`:\n    * import { startTransition } from \"react\"\n    * import * as React from from \"react\";\n      \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n    * import * as React from from \"react\";\n      \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n     Moving it to a constant such as the following solves the Webpack/React 17 issue:\n    * import * as React from from \"react\";\n      const START_TRANSITION = \"startTransition\";\n      START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n     However, that introduces webpack/terser minification issues in production builds\n    in React 18 where minification/obfuscation ends up removing the call of\n    React.startTransition entirely from the first half of the ternary.  Grabbing\n    this exported reference once up front resolves that issue.\n     See https://github.com/remix-run/react-router/issues/10579\n  */\n  const START_TRANSITION = \"startTransition\";\n  const startTransitionImpl = React__namespace[START_TRANSITION];\n\n  /**\n   * Given a Remix Router instance, render the appropriate UI\n   */\n  function RouterProvider(_ref) {\n    let {\n      fallbackElement,\n      router,\n      future\n    } = _ref;\n    // Need to use a layout effect here so we are subscribed early enough to\n    // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n    let [state, setStateImpl] = React__namespace.useState(router.state);\n    let {\n      v7_startTransition\n    } = future || {};\n    let setState = React__namespace.useCallback(newState => {\n      v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n    }, [setStateImpl, v7_startTransition]);\n    React__namespace.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n    let navigator = React__namespace.useMemo(() => {\n      return {\n        createHref: router.createHref,\n        encodeLocation: router.encodeLocation,\n        go: n => router.navigate(n),\n        push: (to, state, opts) => router.navigate(to, {\n          state,\n          preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n        }),\n        replace: (to, state, opts) => router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n        })\n      };\n    }, [router]);\n    let basename = router.basename || \"/\";\n    let dataRouterContext = React__namespace.useMemo(() => ({\n      router,\n      navigator,\n      static: false,\n      basename\n    }), [router, navigator, basename]);\n\n    // The fragment and {null} here are important!  We need them to keep React 18's\n    // useId happy when we are server-rendering since we may have a <script> here\n    // containing the hydrated server-side staticContext (from StaticRouterProvider).\n    // useId relies on the component tree structure to generate deterministic id's\n    // so we need to ensure it remains the same on the client even though\n    // we don't need the <script> tag\n    return /*#__PURE__*/React__namespace.createElement(React__namespace.Fragment, null, /*#__PURE__*/React__namespace.createElement(DataRouterContext.Provider, {\n      value: dataRouterContext\n    }, /*#__PURE__*/React__namespace.createElement(DataRouterStateContext.Provider, {\n      value: state\n    }, /*#__PURE__*/React__namespace.createElement(Router, {\n      basename: basename,\n      location: state.location,\n      navigationType: state.historyAction,\n      navigator: navigator\n    }, state.initialized ? /*#__PURE__*/React__namespace.createElement(DataRoutes, {\n      routes: router.routes,\n      state: state\n    }) : fallbackElement))), null);\n  }\n  function DataRoutes(_ref2) {\n    let {\n      routes,\n      state\n    } = _ref2;\n    return useRoutesImpl(routes, undefined, state);\n  }\n  /**\n   * A <Router> that stores all entries in memory.\n   *\n   * @see https://reactrouter.com/router-components/memory-router\n   */\n  function MemoryRouter(_ref3) {\n    let {\n      basename,\n      children,\n      initialEntries,\n      initialIndex,\n      future\n    } = _ref3;\n    let historyRef = React__namespace.useRef();\n    if (historyRef.current == null) {\n      historyRef.current = router.createMemoryHistory({\n        initialEntries,\n        initialIndex,\n        v5Compat: true\n      });\n    }\n    let history = historyRef.current;\n    let [state, setStateImpl] = React__namespace.useState({\n      action: history.action,\n      location: history.location\n    });\n    let {\n      v7_startTransition\n    } = future || {};\n    let setState = React__namespace.useCallback(newState => {\n      v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n    }, [setStateImpl, v7_startTransition]);\n    React__namespace.useLayoutEffect(() => history.listen(setState), [history, setState]);\n    return /*#__PURE__*/React__namespace.createElement(Router, {\n      basename: basename,\n      children: children,\n      location: state.location,\n      navigationType: state.action,\n      navigator: history\n    });\n  }\n  /**\n   * Changes the current location.\n   *\n   * Note: This API is mostly useful in React.Component subclasses that are not\n   * able to use hooks. In functional components, we recommend you use the\n   * `useNavigate` hook instead.\n   *\n   * @see https://reactrouter.com/components/navigate\n   */\n  function Navigate(_ref4) {\n    let {\n      to,\n      replace,\n      state,\n      relative\n    } = _ref4;\n    !useInRouterContext() ? router.UNSAFE_invariant(false,\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    \"<Navigate> may be used only in the context of a <Router> component.\") : void 0;\n    router.UNSAFE_warning(!React__namespace.useContext(NavigationContext).static, \"<Navigate> must not be used on the initial render in a <StaticRouter>. \" + \"This is a no-op, but you should modify your code so the <Navigate> is \" + \"only ever rendered in response to some user interaction or state change.\");\n    let {\n      matches\n    } = React__namespace.useContext(RouteContext);\n    let {\n      pathname: locationPathname\n    } = useLocation();\n    let navigate = useNavigate();\n\n    // Resolve the path outside of the effect so that when effects run twice in\n    // StrictMode they navigate to the same place\n    let path = router.resolveTo(to, router.UNSAFE_getPathContributingMatches(matches).map(match => match.pathnameBase), locationPathname, relative === \"path\");\n    let jsonPath = JSON.stringify(path);\n    React__namespace.useEffect(() => navigate(JSON.parse(jsonPath), {\n      replace,\n      state,\n      relative\n    }), [navigate, jsonPath, relative, replace, state]);\n    return null;\n  }\n  /**\n   * Renders the child route's element, if there is one.\n   *\n   * @see https://reactrouter.com/components/outlet\n   */\n  function Outlet(props) {\n    return useOutlet(props.context);\n  }\n  /**\n   * Declares an element that should be rendered at a certain URL path.\n   *\n   * @see https://reactrouter.com/components/route\n   */\n  function Route(_props) {\n    router.UNSAFE_invariant(false, \"A <Route> is only ever to be used as the child of <Routes> element, \" + \"never rendered directly. Please wrap your <Route> in a <Routes>.\");\n  }\n  /**\n   * Provides location context for the rest of the app.\n   *\n   * Note: You usually won't render a <Router> directly. Instead, you'll render a\n   * router that is more specific to your environment such as a <BrowserRouter>\n   * in web browsers or a <StaticRouter> for server rendering.\n   *\n   * @see https://reactrouter.com/router-components/router\n   */\n  function Router(_ref5) {\n    let {\n      basename: basenameProp = \"/\",\n      children = null,\n      location: locationProp,\n      navigationType = router.Action.Pop,\n      navigator,\n      static: staticProp = false\n    } = _ref5;\n    !!useInRouterContext() ? router.UNSAFE_invariant(false, \"You cannot render a <Router> inside another <Router>.\" + \" You should never have more than one in your app.\") : void 0;\n\n    // Preserve trailing slashes on basename, so we can let the user control\n    // the enforcement of trailing slashes throughout the app\n    let basename = basenameProp.replace(/^\\/*/, \"/\");\n    let navigationContext = React__namespace.useMemo(() => ({\n      basename,\n      navigator,\n      static: staticProp\n    }), [basename, navigator, staticProp]);\n    if (typeof locationProp === \"string\") {\n      locationProp = router.parsePath(locationProp);\n    }\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\",\n      state = null,\n      key = \"default\"\n    } = locationProp;\n    let locationContext = React__namespace.useMemo(() => {\n      let trailingPathname = router.stripBasename(pathname, basename);\n      if (trailingPathname == null) {\n        return null;\n      }\n      return {\n        location: {\n          pathname: trailingPathname,\n          search,\n          hash,\n          state,\n          key\n        },\n        navigationType\n      };\n    }, [basename, pathname, search, hash, state, key, navigationType]);\n    router.UNSAFE_warning(locationContext != null, \"<Router basename=\\\"\" + basename + \"\\\"> is not able to match the URL \" + (\"\\\"\" + pathname + search + hash + \"\\\" because it does not start with the \") + \"basename, so the <Router> won't render anything.\");\n    if (locationContext == null) {\n      return null;\n    }\n    return /*#__PURE__*/React__namespace.createElement(NavigationContext.Provider, {\n      value: navigationContext\n    }, /*#__PURE__*/React__namespace.createElement(LocationContext.Provider, {\n      children: children,\n      value: locationContext\n    }));\n  }\n  /**\n   * A container for a nested tree of <Route> elements that renders the branch\n   * that best matches the current location.\n   *\n   * @see https://reactrouter.com/components/routes\n   */\n  function Routes(_ref6) {\n    let {\n      children,\n      location\n    } = _ref6;\n    return useRoutes(createRoutesFromChildren(children), location);\n  }\n  /**\n   * Component to use for rendering lazily loaded data from returning defer()\n   * in a loader function\n   */\n  function Await(_ref7) {\n    let {\n      children,\n      errorElement,\n      resolve\n    } = _ref7;\n    return /*#__PURE__*/React__namespace.createElement(AwaitErrorBoundary, {\n      resolve: resolve,\n      errorElement: errorElement\n    }, /*#__PURE__*/React__namespace.createElement(ResolveAwait, null, children));\n  }\n  var AwaitRenderStatus;\n  (function (AwaitRenderStatus) {\n    AwaitRenderStatus[AwaitRenderStatus[\"pending\"] = 0] = \"pending\";\n    AwaitRenderStatus[AwaitRenderStatus[\"success\"] = 1] = \"success\";\n    AwaitRenderStatus[AwaitRenderStatus[\"error\"] = 2] = \"error\";\n  })(AwaitRenderStatus || (AwaitRenderStatus = {}));\n  const neverSettledPromise = new Promise(() => {});\n  class AwaitErrorBoundary extends React__namespace.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        error: null\n      };\n    }\n    static getDerivedStateFromError(error) {\n      return {\n        error\n      };\n    }\n    componentDidCatch(error, errorInfo) {\n      console.error(\"<Await> caught the following error during render\", error, errorInfo);\n    }\n    render() {\n      let {\n        children,\n        errorElement,\n        resolve\n      } = this.props;\n      let promise = null;\n      let status = AwaitRenderStatus.pending;\n      if (!(resolve instanceof Promise)) {\n        // Didn't get a promise - provide as a resolved promise\n        status = AwaitRenderStatus.success;\n        promise = Promise.resolve();\n        Object.defineProperty(promise, \"_tracked\", {\n          get: () => true\n        });\n        Object.defineProperty(promise, \"_data\", {\n          get: () => resolve\n        });\n      } else if (this.state.error) {\n        // Caught a render error, provide it as a rejected promise\n        status = AwaitRenderStatus.error;\n        let renderError = this.state.error;\n        promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n        Object.defineProperty(promise, \"_tracked\", {\n          get: () => true\n        });\n        Object.defineProperty(promise, \"_error\", {\n          get: () => renderError\n        });\n      } else if (resolve._tracked) {\n        // Already tracked promise - check contents\n        promise = resolve;\n        status = promise._error !== undefined ? AwaitRenderStatus.error : promise._data !== undefined ? AwaitRenderStatus.success : AwaitRenderStatus.pending;\n      } else {\n        // Raw (untracked) promise - track it\n        status = AwaitRenderStatus.pending;\n        Object.defineProperty(resolve, \"_tracked\", {\n          get: () => true\n        });\n        promise = resolve.then(data => Object.defineProperty(resolve, \"_data\", {\n          get: () => data\n        }), error => Object.defineProperty(resolve, \"_error\", {\n          get: () => error\n        }));\n      }\n      if (status === AwaitRenderStatus.error && promise._error instanceof router.AbortedDeferredError) {\n        // Freeze the UI by throwing a never resolved promise\n        throw neverSettledPromise;\n      }\n      if (status === AwaitRenderStatus.error && !errorElement) {\n        // No errorElement, throw to the nearest route-level error boundary\n        throw promise._error;\n      }\n      if (status === AwaitRenderStatus.error) {\n        // Render via our errorElement\n        return /*#__PURE__*/React__namespace.createElement(AwaitContext.Provider, {\n          value: promise,\n          children: errorElement\n        });\n      }\n      if (status === AwaitRenderStatus.success) {\n        // Render children with resolved value\n        return /*#__PURE__*/React__namespace.createElement(AwaitContext.Provider, {\n          value: promise,\n          children: children\n        });\n      }\n\n      // Throw to the suspense boundary\n      throw promise;\n    }\n  }\n\n  /**\n   * @private\n   * Indirection to leverage useAsyncValue for a render-prop API on <Await>\n   */\n  function ResolveAwait(_ref8) {\n    let {\n      children\n    } = _ref8;\n    let data = useAsyncValue();\n    let toRender = typeof children === \"function\" ? children(data) : children;\n    return /*#__PURE__*/React__namespace.createElement(React__namespace.Fragment, null, toRender);\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////\n  // UTILS\n  ///////////////////////////////////////////////////////////////////////////////\n\n  /**\n   * Creates a route config from a React \"children\" object, which is usually\n   * either a `<Route>` element or an array of them. Used internally by\n   * `<Routes>` to create a route config from its children.\n   *\n   * @see https://reactrouter.com/utils/create-routes-from-children\n   */\n  function createRoutesFromChildren(children, parentPath) {\n    if (parentPath === void 0) {\n      parentPath = [];\n    }\n    let routes = [];\n    React__namespace.Children.forEach(children, (element, index) => {\n      if (! /*#__PURE__*/React__namespace.isValidElement(element)) {\n        // Ignore non-elements. This allows people to more easily inline\n        // conditionals in their route config.\n        return;\n      }\n      let treePath = [...parentPath, index];\n      if (element.type === React__namespace.Fragment) {\n        // Transparently support React.Fragment and its children.\n        routes.push.apply(routes, createRoutesFromChildren(element.props.children, treePath));\n        return;\n      }\n      !(element.type === Route) ? router.UNSAFE_invariant(false, \"[\" + (typeof element.type === \"string\" ? element.type : element.type.name) + \"] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>\") : void 0;\n      !(!element.props.index || !element.props.children) ? router.UNSAFE_invariant(false, \"An index route cannot have child routes.\") : void 0;\n      let route = {\n        id: element.props.id || treePath.join(\"-\"),\n        caseSensitive: element.props.caseSensitive,\n        element: element.props.element,\n        Component: element.props.Component,\n        index: element.props.index,\n        path: element.props.path,\n        loader: element.props.loader,\n        action: element.props.action,\n        errorElement: element.props.errorElement,\n        ErrorBoundary: element.props.ErrorBoundary,\n        hasErrorBoundary: element.props.ErrorBoundary != null || element.props.errorElement != null,\n        shouldRevalidate: element.props.shouldRevalidate,\n        handle: element.props.handle,\n        lazy: element.props.lazy\n      };\n      if (element.props.children) {\n        route.children = createRoutesFromChildren(element.props.children, treePath);\n      }\n      routes.push(route);\n    });\n    return routes;\n  }\n\n  /**\n   * Renders the result of `matchRoutes()` into a React element.\n   */\n  function renderMatches(matches) {\n    return _renderMatches(matches);\n  }\n  function mapRouteProperties(route) {\n    let updates = {\n      // Note: this check also occurs in createRoutesFromChildren so update\n      // there if you change this -- please and thank you!\n      hasErrorBoundary: route.ErrorBoundary != null || route.errorElement != null\n    };\n    if (route.Component) {\n      {\n        if (route.element) {\n          router.UNSAFE_warning(false, \"You should not include both `Component` and `element` on your route - \" + \"`Component` will be used.\");\n        }\n      }\n      Object.assign(updates, {\n        element: /*#__PURE__*/React__namespace.createElement(route.Component),\n        Component: undefined\n      });\n    }\n    if (route.ErrorBoundary) {\n      {\n        if (route.errorElement) {\n          router.UNSAFE_warning(false, \"You should not include both `ErrorBoundary` and `errorElement` on your route - \" + \"`ErrorBoundary` will be used.\");\n        }\n      }\n      Object.assign(updates, {\n        errorElement: /*#__PURE__*/React__namespace.createElement(route.ErrorBoundary),\n        ErrorBoundary: undefined\n      });\n    }\n    return updates;\n  }\n  function createMemoryRouter(routes, opts) {\n    return router.createRouter({\n      basename: opts == null ? void 0 : opts.basename,\n      future: _extends({}, opts == null ? void 0 : opts.future, {\n        v7_prependBasename: true\n      }),\n      history: router.createMemoryHistory({\n        initialEntries: opts == null ? void 0 : opts.initialEntries,\n        initialIndex: opts == null ? void 0 : opts.initialIndex\n      }),\n      hydrationData: opts == null ? void 0 : opts.hydrationData,\n      routes,\n      mapRouteProperties\n    }).initialize();\n  }\n  Object.defineProperty(exports, 'AbortedDeferredError', {\n    enumerable: true,\n    get: function () {\n      return router.AbortedDeferredError;\n    }\n  });\n  Object.defineProperty(exports, 'NavigationType', {\n    enumerable: true,\n    get: function () {\n      return router.Action;\n    }\n  });\n  Object.defineProperty(exports, 'createPath', {\n    enumerable: true,\n    get: function () {\n      return router.createPath;\n    }\n  });\n  Object.defineProperty(exports, 'defer', {\n    enumerable: true,\n    get: function () {\n      return router.defer;\n    }\n  });\n  Object.defineProperty(exports, 'generatePath', {\n    enumerable: true,\n    get: function () {\n      return router.generatePath;\n    }\n  });\n  Object.defineProperty(exports, 'isRouteErrorResponse', {\n    enumerable: true,\n    get: function () {\n      return router.isRouteErrorResponse;\n    }\n  });\n  Object.defineProperty(exports, 'json', {\n    enumerable: true,\n    get: function () {\n      return router.json;\n    }\n  });\n  Object.defineProperty(exports, 'matchPath', {\n    enumerable: true,\n    get: function () {\n      return router.matchPath;\n    }\n  });\n  Object.defineProperty(exports, 'matchRoutes', {\n    enumerable: true,\n    get: function () {\n      return router.matchRoutes;\n    }\n  });\n  Object.defineProperty(exports, 'parsePath', {\n    enumerable: true,\n    get: function () {\n      return router.parsePath;\n    }\n  });\n  Object.defineProperty(exports, 'redirect', {\n    enumerable: true,\n    get: function () {\n      return router.redirect;\n    }\n  });\n  Object.defineProperty(exports, 'resolvePath', {\n    enumerable: true,\n    get: function () {\n      return router.resolvePath;\n    }\n  });\n  exports.Await = Await;\n  exports.MemoryRouter = MemoryRouter;\n  exports.Navigate = Navigate;\n  exports.Outlet = Outlet;\n  exports.Route = Route;\n  exports.Router = Router;\n  exports.RouterProvider = RouterProvider;\n  exports.Routes = Routes;\n  exports.UNSAFE_DataRouterContext = DataRouterContext;\n  exports.UNSAFE_DataRouterStateContext = DataRouterStateContext;\n  exports.UNSAFE_LocationContext = LocationContext;\n  exports.UNSAFE_NavigationContext = NavigationContext;\n  exports.UNSAFE_RouteContext = RouteContext;\n  exports.UNSAFE_mapRouteProperties = mapRouteProperties;\n  exports.UNSAFE_useRouteId = useRouteId;\n  exports.UNSAFE_useRoutesImpl = useRoutesImpl;\n  exports.createMemoryRouter = createMemoryRouter;\n  exports.createRoutesFromChildren = createRoutesFromChildren;\n  exports.createRoutesFromElements = createRoutesFromChildren;\n  exports.renderMatches = renderMatches;\n  exports.unstable_useBlocker = useBlocker;\n  exports.useActionData = useActionData;\n  exports.useAsyncError = useAsyncError;\n  exports.useAsyncValue = useAsyncValue;\n  exports.useHref = useHref;\n  exports.useInRouterContext = useInRouterContext;\n  exports.useLoaderData = useLoaderData;\n  exports.useLocation = useLocation;\n  exports.useMatch = useMatch;\n  exports.useMatches = useMatches;\n  exports.useNavigate = useNavigate;\n  exports.useNavigation = useNavigation;\n  exports.useNavigationType = useNavigationType;\n  exports.useOutlet = useOutlet;\n  exports.useOutletContext = useOutletContext;\n  exports.useParams = useParams;\n  exports.useResolvedPath = useResolvedPath;\n  exports.useRevalidator = useRevalidator;\n  exports.useRouteError = useRouteError;\n  exports.useRouteLoaderData = useRouteLoaderData;\n  exports.useRoutes = useRoutes;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":{"version":3,"sources":["../../lib/context.ts","../../lib/hooks.tsx","../../lib/components.tsx","../../index.ts"],"names":["DataRouterContext","React","createContext","displayName","DataRouterStateContext","AwaitContext","NavigationContext","LocationContext","RouteContext","outlet","matches","isDataRoute","RouteErrorContext","useHref","to","relative","useInRouterContext","basename","navigator","useContext","hash","pathname","search","useResolvedPath","joinedPathname","joinPaths","createHref","useLocation","location","useNavigationType","navigationType","useMatch","pattern","useMemo","matchPath","navigateEffectWarning","useIsomorphicLayoutEffect","cb","isStatic","static","useLayoutEffect","useNavigate","useNavigateStable","useNavigateUnstable","dataRouterContext","locationPathname","routePathnamesJson","JSON","stringify","getPathContributingMatches","map","match","pathnameBase","activeRef","useRef","current","navigate","useCallback","options","process","go","path","resolveTo","parse","replace","push","state","OutletContext","useOutletContext","useOutlet","context","Provider","value","useParams","routeMatch","length","params","useRoutes","routes","locationArg","useRoutesImpl","dataRouterState","parentMatches","parentParams","parentPathname","parentPathnameBase","parentRoute","route","parentPath","warningOnce","endsWith","locationFromContext","parsedLocationArg","parsePath","startsWith","remainingPathname","slice","matchRoutes","warning","element","undefined","Component","renderedMatches","_renderMatches","Object","assign","encodeLocation","key","NavigationType","Pop","DefaultErrorComponent","error","useRouteError","message","isRouteErrorResponse","status","statusText","Error","stack","lightgrey","preStyles","padding","backgroundColor","codeStyles","devInfo","console","style","fontStyle","defaultErrorElement","RenderErrorBoundary","constructor","props","revalidation","getDerivedStateFromError","getDerivedStateFromProps","componentDidCatch","errorInfo","render","routeContext","children","component","RenderedRoute","staticContext","errorElement","ErrorBoundary","_deepestRenderedBoundaryId","id","errors","errorIndex","findIndex","m","keys","join","Math","min","reduceRight","index","concat","getChildren","DataRouterHook","DataRouterStateHook","getDataRouterConsoleError","hookName","useDataRouterContext","ctx","useDataRouterState","useRouteContext","useCurrentRouteId","thisRoute","useRouteId","UseRouteId","useNavigation","UseNavigation","navigation","useRevalidator","UseRevalidator","revalidate","router","useMatches","loaderData","UseMatches","data","handle","useLoaderData","UseLoaderData","routeId","useRouteLoaderData","UseRouteLoaderData","useActionData","UseActionData","values","actionData","UseRouteError","useAsyncValue","_data","useAsyncError","_error","blockerId","useBlocker","shouldBlock","UseBlocker","blockerKey","setBlockerKey","useState","blockerFunction","arg","currentLocation","nextLocation","historyAction","stripBasename","useEffect","String","deleteBlocker","getBlocker","blockers","has","get","IDLE_BLOCKER","UseNavigateStable","fromRouteId","alreadyWarned","cond","START_TRANSITION","startTransitionImpl","RouterProvider","fallbackElement","future","setStateImpl","v7_startTransition","setState","newState","subscribe","n","opts","preventScrollReset","Router","initialized","DataRoutes","MemoryRouter","initialEntries","initialIndex","historyRef","createMemoryHistory","v5Compat","history","action","listen","Navigate","jsonPath","Outlet","Route","_props","basenameProp","locationProp","staticProp","navigationContext","locationContext","trailingPathname","Routes","createRoutesFromChildren","Await","resolve","AwaitErrorBoundary","ResolveAwait","AwaitRenderStatus","neverSettledPromise","Promise","promise","pending","success","defineProperty","renderError","reject","catch","_tracked","then","AbortedDeferredError","toRender","Children","forEach","isValidElement","treePath","type","Fragment","apply","name","caseSensitive","loader","hasErrorBoundary","shouldRevalidate","lazy","renderMatches","mapRouteProperties","updates","createElement","createMemoryRouter","createRouter","v7_prependBasename","hydrationData","initialize"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport type {\n  AgnosticRouteMatch,\n  AgnosticIndexRouteObject,\n  AgnosticNonIndexRouteObject,\n  History,\n  Location,\n  RelativeRoutingType,\n  Router,\n  StaticHandlerContext,\n  To,\n  TrackedPromise,\n  LazyRouteFunction,\n} from \"@remix-run/router\";\nimport type { Action as NavigationType } from \"@remix-run/router\";\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nexport interface IndexRouteObject {\n  caseSensitive?: AgnosticIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticIndexRouteObject[\"path\"];\n  id?: AgnosticIndexRouteObject[\"id\"];\n  loader?: AgnosticIndexRouteObject[\"loader\"];\n  action?: AgnosticIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticIndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<IndexRouteObject>;\n}\n\nexport interface NonIndexRouteObject {\n  caseSensitive?: AgnosticNonIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticNonIndexRouteObject[\"path\"];\n  id?: AgnosticNonIndexRouteObject[\"id\"];\n  loader?: AgnosticNonIndexRouteObject[\"loader\"];\n  action?: AgnosticNonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticNonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticNonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticNonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: RouteObject[];\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<NonIndexRouteObject>;\n}\n\nexport type RouteObject = IndexRouteObject | NonIndexRouteObject;\n\nexport type DataRouteObject = RouteObject & {\n  children?: DataRouteObject[];\n  id: string;\n};\n\nexport interface RouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends RouteObject = RouteObject\n> extends AgnosticRouteMatch<ParamKey, RouteObjectType> {}\n\nexport interface DataRouteMatch extends RouteMatch<string, DataRouteObject> {}\n\nexport interface DataRouterContextObject extends NavigationContextObject {\n  router: Router;\n  staticContext?: StaticHandlerContext;\n}\n\nexport const DataRouterContext =\n  React.createContext<DataRouterContextObject | null>(null);\nif (__DEV__) {\n  DataRouterContext.displayName = \"DataRouter\";\n}\n\nexport const DataRouterStateContext = React.createContext<\n  Router[\"state\"] | null\n>(null);\nif (__DEV__) {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\n\nexport const AwaitContext = React.createContext<TrackedPromise | null>(null);\nif (__DEV__) {\n  AwaitContext.displayName = \"Await\";\n}\n\nexport interface NavigateOptions {\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level <Router> API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\nexport interface Navigator {\n  createHref: History[\"createHref\"];\n  // Optional for backwards-compat with Router/HistoryRouter usage (edge case)\n  encodeLocation?: History[\"encodeLocation\"];\n  go: History[\"go\"];\n  push(to: To, state?: any, opts?: NavigateOptions): void;\n  replace(to: To, state?: any, opts?: NavigateOptions): void;\n}\n\ninterface NavigationContextObject {\n  basename: string;\n  navigator: Navigator;\n  static: boolean;\n}\n\nexport const NavigationContext = React.createContext<NavigationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  NavigationContext.displayName = \"Navigation\";\n}\n\ninterface LocationContextObject {\n  location: Location;\n  navigationType: NavigationType;\n}\n\nexport const LocationContext = React.createContext<LocationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  LocationContext.displayName = \"Location\";\n}\n\nexport interface RouteContextObject {\n  outlet: React.ReactElement | null;\n  matches: RouteMatch[];\n  isDataRoute: boolean;\n}\n\nexport const RouteContext = React.createContext<RouteContextObject>({\n  outlet: null,\n  matches: [],\n  isDataRoute: false,\n});\n\nif (__DEV__) {\n  RouteContext.displayName = \"Route\";\n}\n\nexport const RouteErrorContext = React.createContext<any>(null);\n\nif (__DEV__) {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n","import * as React from \"react\";\nimport type {\n  Blocker,\n  BlockerFunction,\n  Location,\n  ParamParseKey,\n  Params,\n  Path,\n  PathMatch,\n  PathPattern,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  RevalidationState,\n  To,\n} from \"@remix-run/router\";\nimport {\n  Action as NavigationType,\n  UNSAFE_invariant as invariant,\n  isRouteErrorResponse,\n  joinPaths,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  resolveTo,\n  stripBasename,\n  IDLE_BLOCKER,\n  UNSAFE_getPathContributingMatches as getPathContributingMatches,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  NavigateOptions,\n  RouteContextObject,\n  RouteMatch,\n  RouteObject,\n  DataRouteMatch,\n} from \"./context\";\nimport {\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n  RouteErrorContext,\n  AwaitContext,\n} from \"./context\";\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\nexport function useHref(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to, { relative });\n\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname =\n      pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\n}\n\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\nexport function useInRouterContext(): boolean {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\nexport function useLocation(): Location {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\nexport function useNavigationType(): NavigationType {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\nexport function useMatch<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(pattern: PathPattern<Path> | Path): PathMatch<ParamKey> | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n\n  let { pathname } = useLocation();\n  return React.useMemo(\n    () => matchPath<ParamKey, Path>(pattern, pathname),\n    [pathname, pattern]\n  );\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\nexport interface NavigateFunction {\n  (to: To, options?: NavigateOptions): void;\n  (delta: number): void;\n}\n\nconst navigateEffectWarning =\n  `You should call navigate() in a React.useEffect(), not when ` +\n  `your component is first rendered.`;\n\n// Mute warnings for calls to useNavigate in SSR environments\nfunction useIsomorphicLayoutEffect(\n  cb: Parameters<typeof React.useLayoutEffect>[0]\n) {\n  let isStatic = React.useContext(NavigationContext).static;\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(cb);\n  }\n}\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\nexport function useNavigate(): NavigateFunction {\n  let { isDataRoute } = React.useContext(RouteContext);\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\n\nfunction useNavigateUnstable(): NavigateFunction {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n\n  let dataRouterContext = React.useContext(DataRouterContext);\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our history listener yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        navigator.go(to);\n        return;\n      }\n\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        options.relative === \"path\"\n      );\n\n      // If we're operating within a basename, prepend it to the pathname prior\n      // to handing off to history (but only if we're not in a data router,\n      // otherwise it'll prepend the basename inside of the router).\n      // If this is a root navigation, then we navigate to the raw basename\n      // which allows the basename to have full control over the presence of a\n      // trailing slash on root links\n      if (dataRouterContext == null && basename !== \"/\") {\n        path.pathname =\n          path.pathname === \"/\"\n            ? basename\n            : joinPaths([basename, path.pathname]);\n      }\n\n      (!!options.replace ? navigator.replace : navigator.push)(\n        path,\n        options.state,\n        options\n      );\n    },\n    [\n      basename,\n      navigator,\n      routePathnamesJson,\n      locationPathname,\n      dataRouterContext,\n    ]\n  );\n\n  return navigate;\n}\n\nconst OutletContext = React.createContext<unknown>(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\nexport function useOutletContext<Context = unknown>(): Context {\n  return React.useContext(OutletContext) as Context;\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\nexport function useOutlet(context?: unknown): React.ReactElement | null {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return (\n      <OutletContext.Provider value={context}>{outlet}</OutletContext.Provider>\n    );\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\nexport function useParams<\n  ParamsOrKey extends string | Record<string, string | undefined> = string\n>(): Readonly<\n  [ParamsOrKey] extends [string] ? Params<ParamsOrKey> : Partial<ParamsOrKey>\n> {\n  let { matches } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? (routeMatch.params as any) : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\nexport function useResolvedPath(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): Path {\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  return React.useMemo(\n    () =>\n      resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        relative === \"path\"\n      ),\n    [to, routePathnamesJson, locationPathname, relative]\n  );\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\nexport function useRoutes(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string\n): React.ReactElement | null {\n  return useRoutesImpl(routes, locationArg);\n}\n\n// Internal implementation with accept optional param for RouterProvider usage\nexport function useRoutesImpl(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string,\n  dataRouterState?: RemixRouter[\"state\"]\n): React.ReactElement | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n\n  let { navigator } = React.useContext(NavigationContext);\n  let { matches: parentMatches } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (__DEV__) {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = (parentRoute && parentRoute.path) || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at ` +\n        `\"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the ` +\n        `parent route path has no trailing \"*\". This means if you navigate ` +\n        `deeper, the parent won't match anymore and therefore the child ` +\n        `routes will never render.\\n\\n` +\n        `Please change the parent <Route path=\"${parentPath}\"> to <Route ` +\n        `path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n\n  let locationFromContext = useLocation();\n\n  let location;\n  if (locationArg) {\n    let parsedLocationArg =\n      typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n    invariant(\n      parentPathnameBase === \"/\" ||\n        parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, ` +\n        `the location pathname must begin with the portion of the URL pathname that was ` +\n        `matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" ` +\n        `but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n  let remainingPathname =\n    parentPathnameBase === \"/\"\n      ? pathname\n      : pathname.slice(parentPathnameBase.length) || \"/\";\n\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\n\n  if (__DEV__) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n\n    warning(\n      matches == null ||\n        matches[matches.length - 1].route.element !== undefined ||\n        matches[matches.length - 1].route.Component !== undefined,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" ` +\n        `does not have an element or Component. This means it will render an <Outlet /> with a ` +\n        `null value by default resulting in an \"empty\" page.`\n    );\n  }\n\n  let renderedMatches = _renderMatches(\n    matches &&\n      matches.map((match) =>\n        Object.assign({}, match, {\n          params: Object.assign({}, parentParams, match.params),\n          pathname: joinPaths([\n            parentPathnameBase,\n            // Re-encode pathnames that were decoded inside matchRoutes\n            navigator.encodeLocation\n              ? navigator.encodeLocation(match.pathname).pathname\n              : match.pathname,\n          ]),\n          pathnameBase:\n            match.pathnameBase === \"/\"\n              ? parentPathnameBase\n              : joinPaths([\n                  parentPathnameBase,\n                  // Re-encode pathnames that were decoded inside matchRoutes\n                  navigator.encodeLocation\n                    ? navigator.encodeLocation(match.pathnameBase).pathname\n                    : match.pathnameBase,\n                ]),\n        })\n      ),\n    parentMatches,\n    dataRouterState\n  );\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return (\n      <LocationContext.Provider\n        value={{\n          location: {\n            pathname: \"/\",\n            search: \"\",\n            hash: \"\",\n            state: null,\n            key: \"default\",\n            ...location,\n          },\n          navigationType: NavigationType.Pop,\n        }}\n      >\n        {renderedMatches}\n      </LocationContext.Provider>\n    );\n  }\n\n  return renderedMatches;\n}\n\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error)\n    ? `${error.status} ${error.statusText}`\n    : error instanceof Error\n    ? error.message\n    : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = { padding: \"0.5rem\", backgroundColor: lightgrey };\n  let codeStyles = { padding: \"2px 4px\", backgroundColor: lightgrey };\n\n  let devInfo = null;\n  if (__DEV__) {\n    console.error(\n      \"Error handled by React Router default ErrorBoundary:\",\n      error\n    );\n\n    devInfo = (\n      <>\n        <p>💿 Hey developer 👋</p>\n        <p>\n          You can provide a way better UX than this when your app throws errors\n          by providing your own <code style={codeStyles}>ErrorBoundary</code> or{\" \"}\n          <code style={codeStyles}>errorElement</code> prop on your route.\n        </p>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <h2>Unexpected Application Error!</h2>\n      <h3 style={{ fontStyle: \"italic\" }}>{message}</h3>\n      {stack ? <pre style={preStyles}>{stack}</pre> : null}\n      {devInfo}\n    </>\n  );\n}\n\nconst defaultErrorElement = <DefaultErrorComponent />;\n\ntype RenderErrorBoundaryProps = React.PropsWithChildren<{\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n  component: React.ReactNode;\n  routeContext: RouteContextObject;\n}>;\n\ntype RenderErrorBoundaryState = {\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n};\n\nexport class RenderErrorBoundary extends React.Component<\n  RenderErrorBoundaryProps,\n  RenderErrorBoundaryState\n> {\n  constructor(props: RenderErrorBoundaryProps) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error,\n    };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error: error };\n  }\n\n  static getDerivedStateFromProps(\n    props: RenderErrorBoundaryProps,\n    state: RenderErrorBoundaryState\n  ) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (\n      state.location !== props.location ||\n      (state.revalidation !== \"idle\" && props.revalidation === \"idle\")\n    ) {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation,\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error || state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation,\n    };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"React Router caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    return this.state.error ? (\n      <RouteContext.Provider value={this.props.routeContext}>\n        <RouteErrorContext.Provider\n          value={this.state.error}\n          children={this.props.component}\n        />\n      </RouteContext.Provider>\n    ) : (\n      this.props.children\n    );\n  }\n}\n\ninterface RenderedRouteProps {\n  routeContext: RouteContextObject;\n  match: RouteMatch<string, RouteObject>;\n  children: React.ReactNode | null;\n}\n\nfunction RenderedRoute({ routeContext, match, children }: RenderedRouteProps) {\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (\n    dataRouterContext &&\n    dataRouterContext.static &&\n    dataRouterContext.staticContext &&\n    (match.route.errorElement || match.route.ErrorBoundary)\n  ) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n\n  return (\n    <RouteContext.Provider value={routeContext}>\n      {children}\n    </RouteContext.Provider>\n  );\n}\n\nexport function _renderMatches(\n  matches: RouteMatch[] | null,\n  parentMatches: RouteMatch[] = [],\n  dataRouterState: RemixRouter[\"state\"] | null = null\n): React.ReactElement | null {\n  if (matches == null) {\n    if (dataRouterState?.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches as DataRouteMatch[];\n    } else {\n      return null;\n    }\n  }\n\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = dataRouterState?.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(\n      (m) => m.route.id && errors?.[m.route.id]\n    );\n    invariant(\n      errorIndex >= 0,\n      `Could not find a matching route for errors on route IDs: ${Object.keys(\n        errors\n      ).join(\",\")}`\n    );\n    renderedMatches = renderedMatches.slice(\n      0,\n      Math.min(renderedMatches.length, errorIndex + 1)\n    );\n  }\n\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error = match.route.id ? errors?.[match.route.id] : null;\n    // Only data routers handle errors\n    let errorElement: React.ReactNode | null = null;\n    if (dataRouterState) {\n      errorElement = match.route.errorElement || defaultErrorElement;\n    }\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children: React.ReactNode;\n      if (error) {\n        children = errorElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = <match.route.Component />;\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return (\n        <RenderedRoute\n          match={match}\n          routeContext={{\n            outlet,\n            matches,\n            isDataRoute: dataRouterState != null,\n          }}\n          children={children}\n        />\n      );\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState &&\n      (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? (\n      <RenderErrorBoundary\n        location={dataRouterState.location}\n        revalidation={dataRouterState.revalidation}\n        component={errorElement}\n        error={error}\n        children={getChildren()}\n        routeContext={{ outlet: null, matches, isDataRoute: true }}\n      />\n    ) : (\n      getChildren()\n    );\n  }, null as React.ReactElement | null);\n}\n\nenum DataRouterHook {\n  UseBlocker = \"useBlocker\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n}\n\nenum DataRouterStateHook {\n  UseBlocker = \"useBlocker\",\n  UseLoaderData = \"useLoaderData\",\n  UseActionData = \"useActionData\",\n  UseRouteError = \"useRouteError\",\n  UseNavigation = \"useNavigation\",\n  UseRouteLoaderData = \"useRouteLoaderData\",\n  UseMatches = \"useMatches\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n  UseRouteId = \"useRouteId\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\nfunction useRouteContext(hookName: DataRouterStateHook) {\n  let route = React.useContext(RouteContext);\n  invariant(route, getDataRouterConsoleError(hookName));\n  return route;\n}\n\n// Internal version with hookName-aware debugging\nfunction useCurrentRouteId(hookName: DataRouterStateHook) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  invariant(\n    thisRoute.route.id,\n    `${hookName} can only be used on routes that contain a unique \"id\"`\n  );\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the ID for the nearest contextual route\n */\nexport function useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nexport function useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nexport function useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return {\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation,\n  };\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nexport function useMatches() {\n  let { matches, loaderData } = useDataRouterState(\n    DataRouterStateHook.UseMatches\n  );\n  return React.useMemo(\n    () =>\n      matches.map((match) => {\n        let { pathname, params } = match;\n        // Note: This structure matches that created by createUseMatchesMatch\n        // in the @remix-run/router , so if you change this please also change\n        // that :)  Eventually we'll DRY this up\n        return {\n          id: match.route.id,\n          pathname,\n          params,\n          data: loaderData[match.route.id] as unknown,\n          handle: match.route.handle as unknown,\n        };\n      }),\n    [matches, loaderData]\n  );\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nexport function useLoaderData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\n      `You cannot \\`useLoaderData\\` in an errorElement (routeId: ${routeId})`\n    );\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nexport function useRouteLoaderData(routeId: string): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nexport function useActionData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useActionData must be used inside a RouteContext`);\n\n  return Object.values(state?.actionData || {})[0];\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nexport function useRouteError(): unknown {\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return state.errors?.[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor <Await /> value\n */\nexport function useAsyncValue(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._data;\n}\n\n/**\n * Returns the error from the nearest ancestor <Await /> value\n */\nexport function useAsyncError(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._error;\n}\n\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nexport function useBlocker(shouldBlock: boolean | BlockerFunction): Blocker {\n  let { router, basename } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n\n  let [blockerKey, setBlockerKey] = React.useState(\"\");\n  let blockerFunction = React.useCallback<BlockerFunction>(\n    (arg) => {\n      if (typeof shouldBlock !== \"function\") {\n        return !!shouldBlock;\n      }\n      if (basename === \"/\") {\n        return shouldBlock(arg);\n      }\n\n      // If they provided us a function and we've got an active basename, strip\n      // it from the locations we expose to the user to match the behavior of\n      // useLocation\n      let { currentLocation, nextLocation, historyAction } = arg;\n      return shouldBlock({\n        currentLocation: {\n          ...currentLocation,\n          pathname:\n            stripBasename(currentLocation.pathname, basename) ||\n            currentLocation.pathname,\n        },\n        nextLocation: {\n          ...nextLocation,\n          pathname:\n            stripBasename(nextLocation.pathname, basename) ||\n            nextLocation.pathname,\n        },\n        historyAction,\n      });\n    },\n    [basename, shouldBlock]\n  );\n\n  // This effect is in charge of blocker key assignment and deletion (which is\n  // tightly coupled to the key)\n  React.useEffect(() => {\n    let key = String(++blockerId);\n    setBlockerKey(key);\n    return () => router.deleteBlocker(key);\n  }, [router]);\n\n  // This effect handles assigning the blockerFunction.  This is to handle\n  // unstable blocker function identities, and happens only after the prior\n  // effect so we don't get an orphaned blockerFunction in the router with a\n  // key of \"\".  Until then we just have the IDLE_BLOCKER.\n  React.useEffect(() => {\n    if (blockerKey !== \"\") {\n      router.getBlocker(blockerKey, blockerFunction);\n    }\n  }, [router, blockerKey, blockerFunction]);\n\n  // Prefer the blocker from `state` not `router.state` since DataRouterContext\n  // is memoized so this ensures we update on blocker state updates\n  return blockerKey && state.blockers.has(blockerKey)\n    ? state.blockers.get(blockerKey)!\n    : IDLE_BLOCKER;\n}\n\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\nfunction useNavigateStable(): NavigateFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our router subscriber yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        router.navigate(to);\n      } else {\n        router.navigate(to, { fromRouteId: id, ...options });\n      }\n    },\n    [router, id]\n  );\n\n  return navigate;\n}\n\nconst alreadyWarned: Record<string, boolean> = {};\n\nfunction warningOnce(key: string, cond: boolean, message: string) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n","import * as React from \"react\";\nimport type {\n  TrackedPromise,\n  InitialEntry,\n  Location,\n  MemoryHistory,\n  Router as RemixRouter,\n  To,\n  LazyRouteFunction,\n  RelativeRoutingType,\n  RouterState,\n} from \"@remix-run/router\";\nimport {\n  Action as NavigationType,\n  AbortedDeferredError,\n  createMemoryHistory,\n  UNSAFE_invariant as invariant,\n  parsePath,\n  resolveTo,\n  stripBasename,\n  UNSAFE_warning as warning,\n  UNSAFE_getPathContributingMatches as getPathContributingMatches,\n} from \"@remix-run/router\";\n\nimport type {\n  DataRouteObject,\n  IndexRouteObject,\n  RouteMatch,\n  RouteObject,\n  Navigator,\n  NonIndexRouteObject,\n} from \"./context\";\nimport {\n  LocationContext,\n  NavigationContext,\n  DataRouterContext,\n  DataRouterStateContext,\n  AwaitContext,\n  RouteContext,\n} from \"./context\";\nimport {\n  useAsyncValue,\n  useInRouterContext,\n  useNavigate,\n  useOutlet,\n  useRoutes,\n  _renderMatches,\n  useRoutesImpl,\n  useLocation,\n} from \"./hooks\";\n\nexport interface FutureConfig {\n  v7_startTransition: boolean;\n}\n\nexport interface RouterProviderProps {\n  fallbackElement?: React.ReactNode;\n  router: RemixRouter;\n  future?: FutureConfig;\n}\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n  future,\n}: RouterProviderProps): React.ReactElement {\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  let [state, setStateImpl] = React.useState(router.state);\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: RouterState) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  let dataRouterContext = React.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n    }),\n    [router, navigator, basename]\n  );\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider value={dataRouterContext}>\n        <DataRouterStateContext.Provider value={state}>\n          <Router\n            basename={basename}\n            location={state.location}\n            navigationType={state.historyAction}\n            navigator={navigator}\n          >\n            {state.initialized ? (\n              <DataRoutes routes={router.routes} state={state} />\n            ) : (\n              fallbackElement\n            )}\n          </Router>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\nfunction DataRoutes({\n  routes,\n  state,\n}: {\n  routes: DataRouteObject[];\n  state: RouterState;\n}): React.ReactElement | null {\n  return useRoutesImpl(routes, undefined, state);\n}\n\nexport interface MemoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  future?: FutureConfig;\n}\n\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\nexport function MemoryRouter({\n  basename,\n  children,\n  initialEntries,\n  initialIndex,\n  future,\n}: MemoryRouterProps): React.ReactElement {\n  let historyRef = React.useRef<MemoryHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true,\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface NavigateProps {\n  to: To;\n  replace?: boolean;\n  state?: any;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\nexport function Navigate({\n  to,\n  replace,\n  state,\n  relative,\n}: NavigateProps): null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n\n  warning(\n    !React.useContext(NavigationContext).static,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. ` +\n      `This is a no-op, but you should modify your code so the <Navigate> is ` +\n      `only ever rendered in response to some user interaction or state change.`\n  );\n\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let navigate = useNavigate();\n\n  // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n  let path = resolveTo(\n    to,\n    getPathContributingMatches(matches).map((match) => match.pathnameBase),\n    locationPathname,\n    relative === \"path\"\n  );\n  let jsonPath = JSON.stringify(path);\n\n  React.useEffect(\n    () => navigate(JSON.parse(jsonPath), { replace, state, relative }),\n    [navigate, jsonPath, relative, replace, state]\n  );\n\n  return null;\n}\n\nexport interface OutletProps {\n  context?: unknown;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\nexport function Outlet(props: OutletProps): React.ReactElement | null {\n  return useOutlet(props.context);\n}\n\nexport interface PathRouteProps {\n  caseSensitive?: NonIndexRouteObject[\"caseSensitive\"];\n  path?: NonIndexRouteObject[\"path\"];\n  id?: NonIndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<NonIndexRouteObject>;\n  loader?: NonIndexRouteObject[\"loader\"];\n  action?: NonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: NonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: NonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: NonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport interface LayoutRouteProps extends PathRouteProps {}\n\nexport interface IndexRouteProps {\n  caseSensitive?: IndexRouteObject[\"caseSensitive\"];\n  path?: IndexRouteObject[\"path\"];\n  id?: IndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<IndexRouteObject>;\n  loader?: IndexRouteObject[\"loader\"];\n  action?: IndexRouteObject[\"action\"];\n  hasErrorBoundary?: IndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: IndexRouteObject[\"shouldRevalidate\"];\n  handle?: IndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport type RouteProps = PathRouteProps | LayoutRouteProps | IndexRouteProps;\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\nexport function Route(_props: RouteProps): React.ReactElement | null {\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, ` +\n      `never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\n\nexport interface RouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  location: Partial<Location> | string;\n  navigationType?: NavigationType;\n  navigator: Navigator;\n  static?: boolean;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\nexport function Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = NavigationType.Pop,\n  navigator,\n  static: staticProp = false,\n}: RouterProps): React.ReactElement | null {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>.` +\n      ` You should never have more than one in your app.`\n  );\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(\n    () => ({ basename, navigator, static: staticProp }),\n    [basename, navigator, staticProp]\n  );\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\",\n  } = locationProp;\n\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key,\n      },\n      navigationType,\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n\n  warning(\n    locationContext != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL ` +\n      `\"${pathname}${search}${hash}\" because it does not start with the ` +\n      `basename, so the <Router> won't render anything.`\n  );\n\n  if (locationContext == null) {\n    return null;\n  }\n\n  return (\n    <NavigationContext.Provider value={navigationContext}>\n      <LocationContext.Provider children={children} value={locationContext} />\n    </NavigationContext.Provider>\n  );\n}\n\nexport interface RoutesProps {\n  children?: React.ReactNode;\n  location?: Partial<Location> | string;\n}\n\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\nexport function Routes({\n  children,\n  location,\n}: RoutesProps): React.ReactElement | null {\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n\nexport interface AwaitResolveRenderFunction {\n  (data: Awaited<any>): React.ReactNode;\n}\n\nexport interface AwaitProps {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}\n\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nexport function Await({ children, errorElement, resolve }: AwaitProps) {\n  return (\n    <AwaitErrorBoundary resolve={resolve} errorElement={errorElement}>\n      <ResolveAwait>{children}</ResolveAwait>\n    </AwaitErrorBoundary>\n  );\n}\n\ntype AwaitErrorBoundaryProps = React.PropsWithChildren<{\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}>;\n\ntype AwaitErrorBoundaryState = {\n  error: any;\n};\n\nenum AwaitRenderStatus {\n  pending,\n  success,\n  error,\n}\n\nconst neverSettledPromise = new Promise(() => {});\n\nclass AwaitErrorBoundary extends React.Component<\n  AwaitErrorBoundaryProps,\n  AwaitErrorBoundaryState\n> {\n  constructor(props: AwaitErrorBoundaryProps) {\n    super(props);\n    this.state = { error: null };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"<Await> caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    let { children, errorElement, resolve } = this.props;\n\n    let promise: TrackedPromise | null = null;\n    let status: AwaitRenderStatus = AwaitRenderStatus.pending;\n\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_data\", { get: () => resolve });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_error\", { get: () => renderError });\n    } else if ((resolve as TrackedPromise)._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status =\n        promise._error !== undefined\n          ? AwaitRenderStatus.error\n          : promise._data !== undefined\n          ? AwaitRenderStatus.success\n          : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", { get: () => true });\n      promise = resolve.then(\n        (data: any) =>\n          Object.defineProperty(resolve, \"_data\", { get: () => data }),\n        (error: any) =>\n          Object.defineProperty(resolve, \"_error\", { get: () => error })\n      );\n    }\n\n    if (\n      status === AwaitRenderStatus.error &&\n      promise._error instanceof AbortedDeferredError\n    ) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return <AwaitContext.Provider value={promise} children={errorElement} />;\n    }\n\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return <AwaitContext.Provider value={promise} children={children} />;\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on <Await>\n */\nfunction ResolveAwait({\n  children,\n}: {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n}) {\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return <>{toRender}</>;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\nexport function createRoutesFromChildren(\n  children: React.ReactNode,\n  parentPath: number[] = []\n): RouteObject[] {\n  let routes: RouteObject[] = [];\n\n  React.Children.forEach(children, (element, index) => {\n    if (!React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    let treePath = [...parentPath, index];\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children, treePath)\n      );\n      return;\n    }\n\n    invariant(\n      element.type === Route,\n      `[${\n        typeof element.type === \"string\" ? element.type : element.type.name\n      }] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n\n    invariant(\n      !element.props.index || !element.props.children,\n      \"An index route cannot have child routes.\"\n    );\n\n    let route: RouteObject = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary:\n        element.props.ErrorBoundary != null ||\n        element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy,\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(\n        element.props.children,\n        treePath\n      );\n    }\n\n    routes.push(route);\n  });\n\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nexport function renderMatches(\n  matches: RouteMatch[] | null\n): React.ReactElement | null {\n  return _renderMatches(matches);\n}\n","import * as React from \"react\";\nimport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  Blocker,\n  BlockerFunction,\n  Fetcher,\n  HydrationState,\n  JsonFunction,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  Navigation,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  PathPattern,\n  RedirectFunction,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  ShouldRevalidateFunction,\n  To,\n  InitialEntry,\n  LazyRouteFunction,\n  FutureConfig as RouterFutureConfig,\n} from \"@remix-run/router\";\nimport {\n  AbortedDeferredError,\n  Action as NavigationType,\n  createMemoryHistory,\n  createPath,\n  createRouter,\n  defer,\n  generatePath,\n  isRouteErrorResponse,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  resolvePath,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  AwaitProps,\n  MemoryRouterProps,\n  NavigateProps,\n  OutletProps,\n  RouteProps,\n  PathRouteProps,\n  LayoutRouteProps,\n  IndexRouteProps,\n  RouterProps,\n  RoutesProps,\n  RouterProviderProps,\n  FutureConfig,\n} from \"./lib/components\";\nimport {\n  createRoutesFromChildren,\n  renderMatches,\n  Await,\n  MemoryRouter,\n  Navigate,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n} from \"./lib/components\";\nimport type {\n  DataRouteMatch,\n  DataRouteObject,\n  IndexRouteObject,\n  Navigator,\n  NavigateOptions,\n  NonIndexRouteObject,\n  RouteMatch,\n  RouteObject,\n} from \"./lib/context\";\nimport {\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n} from \"./lib/context\";\nimport type { NavigateFunction } from \"./lib/hooks\";\nimport {\n  useBlocker,\n  useHref,\n  useInRouterContext,\n  useLocation,\n  useMatch,\n  useNavigationType,\n  useNavigate,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRoutes,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useRouteId,\n  useLoaderData,\n  useMatches,\n  useNavigation,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutesImpl,\n} from \"./lib/hooks\";\n\n// Exported for backwards compatibility, but not being used internally anymore\ntype Hash = string;\ntype Pathname = string;\ntype Search = string;\n\n// Expose react-router public API\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  Blocker as unstable_Blocker,\n  BlockerFunction as unstable_BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  Fetcher,\n  FutureConfig,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  To,\n};\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromChildren as createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useBlocker as unstable_useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n};\n\nfunction mapRouteProperties(route: RouteObject) {\n  let updates: Partial<RouteObject> & { hasErrorBoundary: boolean } = {\n    // Note: this check also occurs in createRoutesFromChildren so update\n    // there if you change this -- please and thank you!\n    hasErrorBoundary: route.ErrorBoundary != null || route.errorElement != null,\n  };\n\n  if (route.Component) {\n    if (__DEV__) {\n      if (route.element) {\n        warning(\n          false,\n          \"You should not include both `Component` and `element` on your route - \" +\n            \"`Component` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      element: React.createElement(route.Component),\n      Component: undefined,\n    });\n  }\n\n  if (route.ErrorBoundary) {\n    if (__DEV__) {\n      if (route.errorElement) {\n        warning(\n          false,\n          \"You should not include both `ErrorBoundary` and `errorElement` on your route - \" +\n            \"`ErrorBoundary` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      errorElement: React.createElement(route.ErrorBoundary),\n      ErrorBoundary: undefined,\n    });\n  }\n\n  return updates;\n}\n\nexport function createMemoryRouter(\n  routes: RouteObject[],\n  opts?: {\n    basename?: string;\n    future?: Partial<Omit<RouterFutureConfig, \"v7_prependBasename\">>;\n    hydrationData?: HydrationState;\n    initialEntries?: InitialEntry[];\n    initialIndex?: number;\n  }\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createMemoryHistory({\n      initialEntries: opts?.initialEntries,\n      initialIndex: opts?.initialIndex,\n    }),\n    hydrationData: opts?.hydrationData,\n    routes,\n    mapRouteProperties,\n  }).initialize();\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  NavigationContext as UNSAFE_NavigationContext,\n  LocationContext as UNSAFE_LocationContext,\n  RouteContext as UNSAFE_RouteContext,\n  DataRouterContext as UNSAFE_DataRouterContext,\n  DataRouterStateContext as UNSAFE_DataRouterStateContext,\n  mapRouteProperties as UNSAFE_mapRouteProperties,\n  useRouteId as UNSAFE_useRouteId,\n  useRoutesImpl as UNSAFE_useRoutesImpl,\n};\n"]},"metadata":{},"sourceType":"script"}