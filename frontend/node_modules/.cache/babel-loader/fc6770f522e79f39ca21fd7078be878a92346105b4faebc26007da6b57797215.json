{"ast":null,"code":"var _jsxFileName = \"/Users/georgina/DestigFemmeDemoPi/frontend/src/Shop/components/PostContent.tsx\",\n  _s = $RefreshSig$();\n// Created by Georgina Alacaraz\nimport React, { useContext, useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { UserContext } from \"./Auth\";\nimport { Box, Grid, Typography, Card, CardContent } from '@mui/material';\nimport { useLocation } from 'react-router-dom';\nimport CardActions from '@mui/material/CardActions';\nimport IconButton from '@mui/material/IconButton';\nimport HeartIcon from '@mui/icons-material/Favorite';\nimport ChatBubbleOutlineIcon from '@mui/icons-material/ChatBubbleOutline';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst _window = window;\nconst backendURL = _window.__ENV && _window.__ENV.backendURL;\nconst axiosClient = axios.create({\n  baseURL: `${backendURL}`,\n  timeout: 20000,\n  withCredentials: true\n});\nconst config = {\n  headers: {\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Origin': '*'\n  }\n};\nexport default function PostContent({\n  communityId\n}) {\n  _s();\n  const {\n    user,\n    saveUser,\n    showModal,\n    saveShowModal,\n    onModalClose\n  } = useContext(UserContext);\n  const navigate = useNavigate();\n  const [posts, setPosts] = useState([]);\n  const [postLikes, setPostLikes] = useState(posts.map(() => 0));\n  const [commentLikes, setCommentLikes] = useState([]);\n  const location = useLocation();\n  const postId = location.state.postId;\n  console.log(postId);\n\n  // Fetch posts when component mounts\n  useEffect(() => {\n    console.log(posts);\n  }, [setPosts]);\n  const handleCommentLike = index => {\n    const updatedLikes = [...commentLikes];\n    updatedLikes[index] += 1;\n    setCommentLikes(updatedLikes);\n  };\n\n  // Function to handle comment like\n  const handlePostLike = () => {\n    const updatedLikes = [...postLikes];\n    updatedLikes[0] += 1;\n    setPostLikes(updatedLikes);\n  };\n\n  // get the posts that have the same community id as the current session\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await axiosClient.get(`/posts/posts1?community_id=${communityId}`);\n        setPosts(response.data.posts || []);\n      } catch (error) {\n        console.error(\"Failed to fetch posts: \", error);\n      }\n    };\n    fetchPosts();\n  }, [communityId]); // Empty dependency array means this effect runs once on mount\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      flexGrow: 1,\n      margin: 2\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: Array.isArray(posts) && posts.length > 0 ? posts.map((post, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            flexDirection: 'column',\n            minHeight: 100,\n            width: \"100%\",\n            backgroundColor: \"pink\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              align: \"left\",\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              color: \"text.secondary\",\n              align: \"left\",\n              children: post.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n            sx: {\n              marginTop: 'auto',\n              display: 'flex',\n              justifyContent: 'space-between'\n            },\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: () => handleCommentLike(index),\n              \"aria-label\": \"like post\",\n              style: {\n                position: 'relative'\n              },\n              children: [/*#__PURE__*/_jsxDEV(HeartIcon, {\n                style: {\n                  fontSize: '16px',\n                  fill: 'white',\n                  stroke: 'black',\n                  strokeWidth: \"2px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                style: {\n                  color: 'gray',\n                  marginLeft: '4px'\n                },\n                children: commentLikes[index]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(IconButton, {\n                \"aria-label\": \"add a comment\",\n                onClick: () => navigate(\"/comments\", {\n                  state: {\n                    postId: post._id\n                  }\n                }),\n                children: /*#__PURE__*/_jsxDEV(ChatBubbleOutlineIcon, {\n                  style: {\n                    fontSize: '16px',\n                    fill: 'white',\n                    stroke: 'black'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                sx: {\n                  color: \"#9E4291\",\n                  display: 'inline',\n                  marginLeft: '4px'\n                },\n                children: post.comments.length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this)\n      }, post._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          textAlign: \"center\",\n          children: \"There are no posts in this community :(\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(PostContent, \"n1egfpDxSOZVvdLXpYKeQZlzi4c=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = PostContent;\n;\nvar _c;\n$RefreshReg$(_c, \"PostContent\");","map":{"version":3,"names":["React","useContext","useEffect","useState","axios","useNavigate","UserContext","Box","Grid","Typography","Card","CardContent","useLocation","CardActions","IconButton","HeartIcon","ChatBubbleOutlineIcon","jsxDEV","_jsxDEV","_window","window","backendURL","__ENV","axiosClient","create","baseURL","timeout","withCredentials","config","headers","PostContent","communityId","_s","user","saveUser","showModal","saveShowModal","onModalClose","navigate","posts","setPosts","postLikes","setPostLikes","map","commentLikes","setCommentLikes","location","postId","state","console","log","handleCommentLike","index","updatedLikes","handlePostLike","fetchPosts","response","get","data","error","sx","flexGrow","margin","children","container","spacing","Array","isArray","length","post","item","xs","flexDirection","minHeight","width","backgroundColor","variant","gutterBottom","align","title","fileName","_jsxFileName","lineNumber","columnNumber","color","description","marginTop","display","justifyContent","onClick","style","position","fontSize","fill","stroke","strokeWidth","marginLeft","_id","comments","textAlign","_c","$RefreshReg$"],"sources":["/Users/georgina/DestigFemmeDemoPi/frontend/src/Shop/components/PostContent.tsx"],"sourcesContent":["// Created by Georgina Alacaraz\nimport React, { useContext, useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { UserContext } from \"./Auth\";\nimport { PostType, UserContextType } from \"./Types\";\nimport { set } from \"mongoose\";\nimport { Box, Grid, Typography, Card, CardContent } from '@mui/material';\nimport ButtonBase from '@mui/material/ButtonBase';\nimport { useLocation } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport CardActions from '@mui/material/CardActions';\nimport IconButton from '@mui/material/IconButton';\nimport CommentIcon from '@mui/icons-material/Comment';\nimport { PodcastsOutlined, PostAddOutlined } from \"@mui/icons-material\";\nimport CommentContent from \"./CommentContent\";\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\nimport { CardMedia } from '@mui/material';\nimport { CardActionArea } from '@mui/material';\nimport HeartIcon from '@mui/icons-material/Favorite';\nimport ChatBubbleOutlineIcon from '@mui/icons-material/ChatBubbleOutline';\n\ninterface WindowWithEnv extends Window {\n  __ENV?: {\n    backendURL: string, // REACT_APP_BACKEND_URL environment variable\n    sandbox: \"true\" | \"false\", // REACT_APP_SANDBOX_SDK environment variable - string, not boolean!\n  }\n}\n\nconst _window: WindowWithEnv = window;\nconst backendURL = _window.__ENV && _window.__ENV.backendURL;\n\nconst axiosClient = axios.create({ baseURL: `${backendURL}`, timeout: 20000, withCredentials: true });\nconst config = { headers: { 'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*' } };\n\nexport default function PostContent({ communityId }: { communityId: string }) {\n  const { user, saveUser, showModal, saveShowModal, onModalClose } = useContext(UserContext) as UserContextType;\n  const navigate = useNavigate();\n  const [posts, setPosts] = useState<PostType[]>([]);\n  const [postLikes, setPostLikes] = useState(posts.map(() => 0));\n  const [commentLikes, setCommentLikes] = useState<number[]>([]);\n\n  const location = useLocation();\n  const postId = location.state.postId;\n  console.log(postId);\n \n  // Fetch posts when component mounts\n  useEffect(() => {\n    console.log(posts);\n  }, [setPosts]);\n\n  const handleCommentLike = (index: number) => {\n    const updatedLikes = [...commentLikes];\n    updatedLikes[index] += 1;\n    setCommentLikes(updatedLikes);\n  }\n\n  // Function to handle comment like\n  const handlePostLike = () => {\n    const updatedLikes = [...postLikes];\n    updatedLikes[0] += 1;\n    setPostLikes(updatedLikes);\n  };\n  \n  // get the posts that have the same community id as the current session\n  useEffect(() => {\n      const fetchPosts = async () => {\n          try {\n              const response = await axiosClient.get(`/posts/posts1?community_id=${communityId}`);\n              setPosts(response.data.posts || []);\n          } catch (error) {\n              console.error(\"Failed to fetch posts: \", error);\n          }\n      };\n      fetchPosts();\n  }, [communityId]);// Empty dependency array means this effect runs once on mount\n\n  return (\n    <Box sx={{ flexGrow: 1, margin: 2 }}>\n      <Grid container spacing={2}>\n        {Array.isArray(posts) && posts.length > 0 ? (\n          posts.map((post, index) => (\n            <Grid item xs={12} key={post._id}>\n              <Card sx={{ flexDirection: 'column', minHeight: 100, width: \"100%\" , backgroundColor: \"pink\"}}>\n                <CardContent>\n                  <Typography variant=\"h6\" gutterBottom align=\"left\">\n                    {post.title}\n                  </Typography>\n                  <Typography variant=\"body1\" color=\"text.secondary\" align=\"left\">\n                    {post.description}\n                  </Typography>\n                </CardContent>\n                <CardActions sx={{ marginTop: 'auto', display: 'flex', justifyContent: 'space-between' }}>\n                  {/* Like button */}\n                  <IconButton\n                    onClick={() => handleCommentLike(index)}\n                    aria-label=\"like post\"\n                    style={{ position: 'relative' }}\n                  >\n                    <HeartIcon style={{ fontSize: '16px', fill: 'white', stroke: 'black', strokeWidth: \"2px\" }} />\n                    <Typography variant=\"body2\" style={{ color: 'gray', marginLeft: '4px' }}>{commentLikes[index]}</Typography>\n                  </IconButton>\n                  {/* Comment button */}\n                  <div> {/* Wrap comment icon and button in a div */}\n                    <IconButton aria-label=\"add a comment\" onClick={() => navigate(\"/comments\", { state: { postId: post._id } })}>\n                      <ChatBubbleOutlineIcon style={{ fontSize: '16px', fill: 'white', stroke: 'black'}} />\n                    </IconButton>\n                    <Typography variant=\"body2\" sx={{ color: \"#9E4291\", display: 'inline', marginLeft: '4px' }}>\n                      {post.comments.length}\n                    </Typography>\n                  </div>\n                </CardActions>\n              </Card>\n            </Grid>\n          ))\n        ) : (\n          <Grid item xs={12}>\n            <Typography variant=\"body1\" textAlign=\"center\">\n              There are no posts in this community :(\n            </Typography>\n          </Grid>\n        )}\n      </Grid>\n    </Box>\n  );\n\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}