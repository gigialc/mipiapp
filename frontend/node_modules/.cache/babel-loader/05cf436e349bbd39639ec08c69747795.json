{"ast":null,"code":"import * as React from 'react';\nimport { Action, UNSAFE_invariant, isRouteErrorResponse, createStaticHandler as createStaticHandler$1, UNSAFE_convertRoutesToDataRoutes, IDLE_NAVIGATION, IDLE_FETCHER, IDLE_BLOCKER } from '@remix-run/router';\nimport { UNSAFE_useRoutesImpl, UNSAFE_mapRouteProperties } from 'react-router';\nimport { parsePath, Router, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, createPath } from 'react-router-dom';\n\n/**\n * A <Router> that may not navigate to any other location. This is useful\n * on the server where there is no stateful UI.\n */\nfunction StaticRouter({\n  basename,\n  children,\n  location: locationProp = \"/\"\n}) {\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n  let action = Action.Pop;\n  let location = {\n    pathname: locationProp.pathname || \"/\",\n    search: locationProp.search || \"\",\n    hash: locationProp.hash || \"\",\n    state: locationProp.state || null,\n    key: locationProp.key || \"default\"\n  };\n  let staticNavigator = getStatelessNavigator();\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: location,\n    navigationType: action,\n    navigator: staticNavigator,\n    static: true\n  });\n}\n/**\n * A Data Router that may not navigate to any other location. This is useful\n * on the server where there is no stateful UI.\n */\nfunction StaticRouterProvider({\n  context,\n  router,\n  hydrate = true,\n  nonce\n}) {\n  !(router && context) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"You must provide `router` and `context` to <StaticRouterProvider>\") : UNSAFE_invariant(false) : void 0;\n  let dataRouterContext = {\n    router,\n    navigator: getStatelessNavigator(),\n    static: true,\n    staticContext: context,\n    basename: context.basename || \"/\"\n  };\n  let hydrateScript = \"\";\n  if (hydrate !== false) {\n    let data = {\n      loaderData: context.loaderData,\n      actionData: context.actionData,\n      errors: serializeErrors(context.errors)\n    };\n    // Use JSON.parse here instead of embedding a raw JS object here to speed\n    // up parsing on the client.  Dual-stringify is needed to ensure all quotes\n    // are properly escaped in the resulting string.  See:\n    //   https://v8.dev/blog/cost-of-javascript-2019#json\n    let json = htmlEscape(JSON.stringify(JSON.stringify(data)));\n    hydrateScript = `window.__staticRouterHydrationData = JSON.parse(${json});`;\n  }\n  let {\n    state\n  } = dataRouterContext.router;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(UNSAFE_DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(UNSAFE_DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: dataRouterContext.basename,\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: dataRouterContext.navigator,\n    static: dataRouterContext.static\n  }, /*#__PURE__*/React.createElement(DataRoutes, {\n    routes: router.routes,\n    state: state\n  })))), hydrateScript ? /*#__PURE__*/React.createElement(\"script\", {\n    suppressHydrationWarning: true,\n    nonce: nonce,\n    dangerouslySetInnerHTML: {\n      __html: hydrateScript\n    }\n  }) : null);\n}\nfunction DataRoutes({\n  routes,\n  state\n}) {\n  return UNSAFE_useRoutesImpl(routes, undefined, state);\n}\nfunction serializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // deserializeErrors in react-router-dom/index.tsx :)\n    if (isRouteErrorResponse(val)) {\n      serialized[key] = {\n        ...val,\n        __type: \"RouteErrorResponse\"\n      };\n    } else if (val instanceof Error) {\n      // Do not serialize stack traces from SSR for security reasons\n      serialized[key] = {\n        message: val.message,\n        __type: \"Error\"\n      };\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\nfunction getStatelessNavigator() {\n  return {\n    createHref,\n    encodeLocation,\n    push(to) {\n      throw new Error(`You cannot use navigator.push() on the server because it is a stateless ` + `environment. This error was probably triggered when you did a ` + `\\`navigate(${JSON.stringify(to)})\\` somewhere in your app.`);\n    },\n    replace(to) {\n      throw new Error(`You cannot use navigator.replace() on the server because it is a stateless ` + `environment. This error was probably triggered when you did a ` + `\\`navigate(${JSON.stringify(to)}, { replace: true })\\` somewhere ` + `in your app.`);\n    },\n    go(delta) {\n      throw new Error(`You cannot use navigator.go() on the server because it is a stateless ` + `environment. This error was probably triggered when you did a ` + `\\`navigate(${delta})\\` somewhere in your app.`);\n    },\n    back() {\n      throw new Error(`You cannot use navigator.back() on the server because it is a stateless ` + `environment.`);\n    },\n    forward() {\n      throw new Error(`You cannot use navigator.forward() on the server because it is a stateless ` + `environment.`);\n    }\n  };\n}\nfunction createStaticHandler(routes, opts) {\n  return createStaticHandler$1(routes, {\n    ...opts,\n    mapRouteProperties: UNSAFE_mapRouteProperties\n  });\n}\nfunction createStaticRouter(routes, context) {\n  let manifest = {};\n  let dataRoutes = UNSAFE_convertRoutesToDataRoutes(routes, UNSAFE_mapRouteProperties, undefined, manifest);\n\n  // Because our context matches may be from a framework-agnostic set of\n  // routes passed to createStaticHandler(), we update them here with our\n  // newly created/enhanced data routes\n  let matches = context.matches.map(match => {\n    let route = manifest[match.route.id] || match.route;\n    return {\n      ...match,\n      route\n    };\n  });\n  let msg = method => `You cannot use router.${method}() on the server because it is a stateless environment`;\n  return {\n    get basename() {\n      return context.basename;\n    },\n    get state() {\n      return {\n        historyAction: Action.Pop,\n        location: context.location,\n        matches,\n        loaderData: context.loaderData,\n        actionData: context.actionData,\n        errors: context.errors,\n        initialized: true,\n        navigation: IDLE_NAVIGATION,\n        restoreScrollPosition: null,\n        preventScrollReset: false,\n        revalidation: \"idle\",\n        fetchers: new Map(),\n        blockers: new Map()\n      };\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    initialize() {\n      throw msg(\"initialize\");\n    },\n    subscribe() {\n      throw msg(\"subscribe\");\n    },\n    enableScrollRestoration() {\n      throw msg(\"enableScrollRestoration\");\n    },\n    navigate() {\n      throw msg(\"navigate\");\n    },\n    fetch() {\n      throw msg(\"fetch\");\n    },\n    revalidate() {\n      throw msg(\"revalidate\");\n    },\n    createHref,\n    encodeLocation,\n    getFetcher() {\n      return IDLE_FETCHER;\n    },\n    deleteFetcher() {\n      throw msg(\"deleteFetcher\");\n    },\n    dispose() {\n      throw msg(\"dispose\");\n    },\n    getBlocker() {\n      return IDLE_BLOCKER;\n    },\n    deleteBlocker() {\n      throw msg(\"deleteBlocker\");\n    },\n    _internalFetchControllers: new Map(),\n    _internalActiveDeferreds: new Map(),\n    _internalSetRoutes() {\n      throw msg(\"_internalSetRoutes\");\n    }\n  };\n}\nfunction createHref(to) {\n  return typeof to === \"string\" ? to : createPath(to);\n}\nfunction encodeLocation(to) {\n  // Locations should already be encoded on the server, so just return as-is\n  let path = typeof to === \"string\" ? parsePath(to) : to;\n  return {\n    pathname: path.pathname || \"\",\n    search: path.search || \"\",\n    hash: path.hash || \"\"\n  };\n}\n\n// This utility is based on https://github.com/zertosh/htmlescape\n// License: https://github.com/zertosh/htmlescape/blob/0527ca7156a524d256101bb310a9f970f63078ad/LICENSE\nconst ESCAPE_LOOKUP = {\n  \"&\": \"\\\\u0026\",\n  \">\": \"\\\\u003e\",\n  \"<\": \"\\\\u003c\",\n  \"\\u2028\": \"\\\\u2028\",\n  \"\\u2029\": \"\\\\u2029\"\n};\nconst ESCAPE_REGEX = /[&><\\u2028\\u2029]/g;\nfunction htmlEscape(str) {\n  return str.replace(ESCAPE_REGEX, match => ESCAPE_LOOKUP[match]);\n}\nexport { StaticRouter, StaticRouterProvider, createStaticHandler, createStaticRouter };","map":{"version":3,"names":["React","Action","UNSAFE_invariant","isRouteErrorResponse","createStaticHandler","createStaticHandler$1","UNSAFE_convertRoutesToDataRoutes","IDLE_NAVIGATION","IDLE_FETCHER","IDLE_BLOCKER","UNSAFE_useRoutesImpl","UNSAFE_mapRouteProperties","parsePath","Router","UNSAFE_DataRouterContext","UNSAFE_DataRouterStateContext","createPath","StaticRouter","basename","children","location","locationProp","action","Pop","pathname","search","hash","state","key","staticNavigator","getStatelessNavigator","createElement","navigationType","navigator","static","StaticRouterProvider","context","router","hydrate","nonce","process","env","NODE_ENV","dataRouterContext","staticContext","hydrateScript","data","loaderData","actionData","errors","serializeErrors","json","htmlEscape","JSON","stringify","Fragment","Provider","value","historyAction","DataRoutes","routes","suppressHydrationWarning","dangerouslySetInnerHTML","__html","undefined","entries","Object","serialized","val","__type","Error","message","createHref","encodeLocation","push","to","replace","go","delta","back","forward","opts","mapRouteProperties","createStaticRouter","manifest","dataRoutes","matches","map","match","route","id","msg","method","initialized","navigation","restoreScrollPosition","preventScrollReset","revalidation","fetchers","Map","blockers","initialize","subscribe","enableScrollRestoration","navigate","fetch","revalidate","getFetcher","deleteFetcher","dispose","getBlocker","deleteBlocker","_internalFetchControllers","_internalActiveDeferreds","_internalSetRoutes","path","ESCAPE_LOOKUP","ESCAPE_REGEX","str"],"sources":["/Users/georgina/DestigFemmeDemoPi/frontend/node_modules/react-router-dom/server.mjs"],"sourcesContent":["import * as React from 'react';\nimport { Action, UNSAFE_invariant, isRouteErrorResponse, createStaticHandler as createStaticHandler$1, UNSAFE_convertRoutesToDataRoutes, IDLE_NAVIGATION, IDLE_FETCHER, IDLE_BLOCKER } from '@remix-run/router';\nimport { UNSAFE_useRoutesImpl, UNSAFE_mapRouteProperties } from 'react-router';\nimport { parsePath, Router, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, createPath } from 'react-router-dom';\n\n/**\n * A <Router> that may not navigate to any other location. This is useful\n * on the server where there is no stateful UI.\n */\nfunction StaticRouter({\n  basename,\n  children,\n  location: locationProp = \"/\"\n}) {\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n  let action = Action.Pop;\n  let location = {\n    pathname: locationProp.pathname || \"/\",\n    search: locationProp.search || \"\",\n    hash: locationProp.hash || \"\",\n    state: locationProp.state || null,\n    key: locationProp.key || \"default\"\n  };\n  let staticNavigator = getStatelessNavigator();\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: location,\n    navigationType: action,\n    navigator: staticNavigator,\n    static: true\n  });\n}\n/**\n * A Data Router that may not navigate to any other location. This is useful\n * on the server where there is no stateful UI.\n */\nfunction StaticRouterProvider({\n  context,\n  router,\n  hydrate = true,\n  nonce\n}) {\n  !(router && context) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"You must provide `router` and `context` to <StaticRouterProvider>\") : UNSAFE_invariant(false) : void 0;\n  let dataRouterContext = {\n    router,\n    navigator: getStatelessNavigator(),\n    static: true,\n    staticContext: context,\n    basename: context.basename || \"/\"\n  };\n  let hydrateScript = \"\";\n  if (hydrate !== false) {\n    let data = {\n      loaderData: context.loaderData,\n      actionData: context.actionData,\n      errors: serializeErrors(context.errors)\n    };\n    // Use JSON.parse here instead of embedding a raw JS object here to speed\n    // up parsing on the client.  Dual-stringify is needed to ensure all quotes\n    // are properly escaped in the resulting string.  See:\n    //   https://v8.dev/blog/cost-of-javascript-2019#json\n    let json = htmlEscape(JSON.stringify(JSON.stringify(data)));\n    hydrateScript = `window.__staticRouterHydrationData = JSON.parse(${json});`;\n  }\n  let {\n    state\n  } = dataRouterContext.router;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(UNSAFE_DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(UNSAFE_DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: dataRouterContext.basename,\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: dataRouterContext.navigator,\n    static: dataRouterContext.static\n  }, /*#__PURE__*/React.createElement(DataRoutes, {\n    routes: router.routes,\n    state: state\n  })))), hydrateScript ? /*#__PURE__*/React.createElement(\"script\", {\n    suppressHydrationWarning: true,\n    nonce: nonce,\n    dangerouslySetInnerHTML: {\n      __html: hydrateScript\n    }\n  }) : null);\n}\nfunction DataRoutes({\n  routes,\n  state\n}) {\n  return UNSAFE_useRoutesImpl(routes, undefined, state);\n}\nfunction serializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // deserializeErrors in react-router-dom/index.tsx :)\n    if (isRouteErrorResponse(val)) {\n      serialized[key] = {\n        ...val,\n        __type: \"RouteErrorResponse\"\n      };\n    } else if (val instanceof Error) {\n      // Do not serialize stack traces from SSR for security reasons\n      serialized[key] = {\n        message: val.message,\n        __type: \"Error\"\n      };\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\nfunction getStatelessNavigator() {\n  return {\n    createHref,\n    encodeLocation,\n    push(to) {\n      throw new Error(`You cannot use navigator.push() on the server because it is a stateless ` + `environment. This error was probably triggered when you did a ` + `\\`navigate(${JSON.stringify(to)})\\` somewhere in your app.`);\n    },\n    replace(to) {\n      throw new Error(`You cannot use navigator.replace() on the server because it is a stateless ` + `environment. This error was probably triggered when you did a ` + `\\`navigate(${JSON.stringify(to)}, { replace: true })\\` somewhere ` + `in your app.`);\n    },\n    go(delta) {\n      throw new Error(`You cannot use navigator.go() on the server because it is a stateless ` + `environment. This error was probably triggered when you did a ` + `\\`navigate(${delta})\\` somewhere in your app.`);\n    },\n    back() {\n      throw new Error(`You cannot use navigator.back() on the server because it is a stateless ` + `environment.`);\n    },\n    forward() {\n      throw new Error(`You cannot use navigator.forward() on the server because it is a stateless ` + `environment.`);\n    }\n  };\n}\nfunction createStaticHandler(routes, opts) {\n  return createStaticHandler$1(routes, {\n    ...opts,\n    mapRouteProperties: UNSAFE_mapRouteProperties\n  });\n}\nfunction createStaticRouter(routes, context) {\n  let manifest = {};\n  let dataRoutes = UNSAFE_convertRoutesToDataRoutes(routes, UNSAFE_mapRouteProperties, undefined, manifest);\n\n  // Because our context matches may be from a framework-agnostic set of\n  // routes passed to createStaticHandler(), we update them here with our\n  // newly created/enhanced data routes\n  let matches = context.matches.map(match => {\n    let route = manifest[match.route.id] || match.route;\n    return {\n      ...match,\n      route\n    };\n  });\n  let msg = method => `You cannot use router.${method}() on the server because it is a stateless environment`;\n  return {\n    get basename() {\n      return context.basename;\n    },\n    get state() {\n      return {\n        historyAction: Action.Pop,\n        location: context.location,\n        matches,\n        loaderData: context.loaderData,\n        actionData: context.actionData,\n        errors: context.errors,\n        initialized: true,\n        navigation: IDLE_NAVIGATION,\n        restoreScrollPosition: null,\n        preventScrollReset: false,\n        revalidation: \"idle\",\n        fetchers: new Map(),\n        blockers: new Map()\n      };\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    initialize() {\n      throw msg(\"initialize\");\n    },\n    subscribe() {\n      throw msg(\"subscribe\");\n    },\n    enableScrollRestoration() {\n      throw msg(\"enableScrollRestoration\");\n    },\n    navigate() {\n      throw msg(\"navigate\");\n    },\n    fetch() {\n      throw msg(\"fetch\");\n    },\n    revalidate() {\n      throw msg(\"revalidate\");\n    },\n    createHref,\n    encodeLocation,\n    getFetcher() {\n      return IDLE_FETCHER;\n    },\n    deleteFetcher() {\n      throw msg(\"deleteFetcher\");\n    },\n    dispose() {\n      throw msg(\"dispose\");\n    },\n    getBlocker() {\n      return IDLE_BLOCKER;\n    },\n    deleteBlocker() {\n      throw msg(\"deleteBlocker\");\n    },\n    _internalFetchControllers: new Map(),\n    _internalActiveDeferreds: new Map(),\n    _internalSetRoutes() {\n      throw msg(\"_internalSetRoutes\");\n    }\n  };\n}\nfunction createHref(to) {\n  return typeof to === \"string\" ? to : createPath(to);\n}\nfunction encodeLocation(to) {\n  // Locations should already be encoded on the server, so just return as-is\n  let path = typeof to === \"string\" ? parsePath(to) : to;\n  return {\n    pathname: path.pathname || \"\",\n    search: path.search || \"\",\n    hash: path.hash || \"\"\n  };\n}\n\n// This utility is based on https://github.com/zertosh/htmlescape\n// License: https://github.com/zertosh/htmlescape/blob/0527ca7156a524d256101bb310a9f970f63078ad/LICENSE\nconst ESCAPE_LOOKUP = {\n  \"&\": \"\\\\u0026\",\n  \">\": \"\\\\u003e\",\n  \"<\": \"\\\\u003c\",\n  \"\\u2028\": \"\\\\u2028\",\n  \"\\u2029\": \"\\\\u2029\"\n};\nconst ESCAPE_REGEX = /[&><\\u2028\\u2029]/g;\nfunction htmlEscape(str) {\n  return str.replace(ESCAPE_REGEX, match => ESCAPE_LOOKUP[match]);\n}\n\nexport { StaticRouter, StaticRouterProvider, createStaticHandler, createStaticRouter };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}