{"ast":null,"code":"import axios from'axios';var _window=window;var backendURL=_window.__ENV&&_window.__ENV.backendURL;var axiosClient=axios.create({baseURL:\"\".concat(backendURL),timeout:20000,withCredentials:true});var config={headers:{'Content-Type':'application/json','Access-Control-Allow-Origin':'*'}};/* \n* DEVELOPER NOTE:\n* logic for all of the payment callback functions that can be called\n* by the front end Pi SDK. See https://github.com/pi-apps/pi-platform-docs/blob/master/SDK_reference.md#callbacks-keys\n* for more information.\n*\n* implement your own logic as needed\n*/export var onIncompletePaymentFound=function onIncompletePaymentFound(payment){console.log(\"onIncompletePaymentFound\",payment);return axiosClient.post('/payments/incomplete',{payment:payment});};export var onReadyForServerApproval=function onReadyForServerApproval(paymentId){console.log(\"onReadyForServerApproval\",paymentId);axiosClient.post('/payments/approve',{paymentId:paymentId},config);};export var onReadyForServerCompletion=function onReadyForServerCompletion(paymentId,txid){console.log(\"onReadyForServerCompletion\",paymentId,txid);return axiosClient.post('/payments/complete',{paymentId:paymentId,txid:txid},config);};export var onCancel=function onCancel(paymentId){console.log(\"onCancel\",paymentId);return axiosClient.post('/payments/cancelled_payment',{paymentId:paymentId});};export var onError=function onError(error,payment){console.error(\"onError\",error);if(payment){console.log(payment);// handle the error accordingly\n}};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}