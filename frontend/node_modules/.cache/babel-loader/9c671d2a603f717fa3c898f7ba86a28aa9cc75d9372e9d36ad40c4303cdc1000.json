{"ast":null,"code":"var _jsxFileName = \"/Users/georgina/DestigFemmeDemoPi/frontend/src/Shop/pages/chat.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext, useRef } from 'react';\n// Import the Socket type from socket.io-client\nimport { SocketContext } from '../contexts/SocketContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n  const socket = useContext(SocketContext); // Specify the type of socket\n\n  // Handling new messages\n  useEffect(() => {\n    const messageListener = newMessage => {\n      setMessages(prevMessages => [...prevMessages, newMessage]);\n    };\n    socket.on('message', messageListener);\n    return () => {\n      socket.off('message', messageListener);\n    };\n  }, [socket]);\n  const messageEndRef = useRef(null); // Specify the type of the ref\n\n  // Scroll to the latest message\n  useEffect(() => {\n    var _messageEndRef$curren;\n    (_messageEndRef$curren = messageEndRef.current) === null || _messageEndRef$curren === void 0 ? void 0 : _messageEndRef$curren.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  const sendMessage = () => {\n    if (message.trim()) {\n      socket.emit('message', message);\n      setMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chat App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: msg\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messageEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      onKeyPress: e => e.key === 'Enter' && sendMessage()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"IY7AEp7LOopGO6T3g8m8az4oPeE=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useRef","SocketContext","jsxDEV","_jsxDEV","Chat","_s","messages","setMessages","message","setMessage","socket","messageListener","newMessage","prevMessages","on","off","messageEndRef","_messageEndRef$curren","current","scrollIntoView","behavior","sendMessage","trim","emit","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","msg","index","ref","type","value","onChange","e","target","onKeyPress","key","onClick","_c","$RefreshReg$"],"sources":["/Users/georgina/DestigFemmeDemoPi/frontend/src/Shop/pages/chat.tsx"],"sourcesContent":["import React, { useState, useEffect, useContext, useRef } from 'react';\nimport io, { Socket } from 'socket.io-client'; // Import the Socket type from socket.io-client\nimport { SocketContext } from '../contexts/SocketContext';\n\nfunction Chat() {\n  const [messages, setMessages] = useState<string[]>([]);\n  const [message, setMessage] = useState<string>('');\n  const socket: Socket = useContext(SocketContext); // Specify the type of socket\n\n  // Handling new messages\n  useEffect(() => {\n    const messageListener = (newMessage: string) => {\n      setMessages(prevMessages => [...prevMessages, newMessage]);\n    };\n\n    socket.on('message', messageListener);\n\n    return () => {\n      socket.off('message', messageListener);\n    };\n  }, [socket]);\n\n  const messageEndRef = useRef<HTMLDivElement>(null); // Specify the type of the ref\n\n  // Scroll to the latest message\n  useEffect(() => {\n    messageEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, [messages]);\n\n  const sendMessage = () => {\n    if (message.trim()) {\n      socket.emit('message', message);\n      setMessage('');\n    }\n  };\n\n  return (\n    <div>\n      <h1>Chat App</h1>\n      <div className=\"chat-box\">\n        {messages.map((msg, index) => (\n          <div key={index}>{msg}</div>\n        ))}\n        <div ref={messageEndRef} />\n      </div>\n      <input\n        type=\"text\"\n        value={message}\n        onChange={(e) => setMessage(e.target.value)}\n        onKeyPress={(e) => e.key === 'Enter' && sendMessage()}\n      />\n      <button onClick={sendMessage}>Send</button> {/* Add the missing button */}\n    </div>\n  );\n}\n\nexport default Chat;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,EAAEC,MAAM,QAAQ,OAAO;AACvB;AAC/C,SAASC,aAAa,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAW,EAAE,CAAC;EACtD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAS,EAAE,CAAC;EAClD,MAAMa,MAAc,GAAGX,UAAU,CAACE,aAAa,CAAC,CAAC,CAAC;;EAElD;EACAH,SAAS,CAAC,MAAM;IACd,MAAMa,eAAe,GAAIC,UAAkB,IAAK;MAC9CL,WAAW,CAACM,YAAY,IAAI,CAAC,GAAGA,YAAY,EAAED,UAAU,CAAC,CAAC;IAC5D,CAAC;IAEDF,MAAM,CAACI,EAAE,CAAC,SAAS,EAAEH,eAAe,CAAC;IAErC,OAAO,MAAM;MACXD,MAAM,CAACK,GAAG,CAAC,SAAS,EAAEJ,eAAe,CAAC;IACxC,CAAC;EACH,CAAC,EAAE,CAACD,MAAM,CAAC,CAAC;EAEZ,MAAMM,aAAa,GAAGhB,MAAM,CAAiB,IAAI,CAAC,CAAC,CAAC;;EAEpD;EACAF,SAAS,CAAC,MAAM;IAAA,IAAAmB,qBAAA;IACd,CAAAA,qBAAA,GAAAD,aAAa,CAACE,OAAO,cAAAD,qBAAA,uBAArBA,qBAAA,CAAuBE,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAC/D,CAAC,EAAE,CAACd,QAAQ,CAAC,CAAC;EAEd,MAAMe,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIb,OAAO,CAACc,IAAI,CAAC,CAAC,EAAE;MAClBZ,MAAM,CAACa,IAAI,CAAC,SAAS,EAAEf,OAAO,CAAC;MAC/BC,UAAU,CAAC,EAAE,CAAC;IAChB;EACF,CAAC;EAED,oBACEN,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBzB,OAAA;MAAK0B,SAAS,EAAC,UAAU;MAAAL,QAAA,GACtBlB,QAAQ,CAACwB,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACvB7B,OAAA;QAAAqB,QAAA,EAAkBO;MAAG,GAAXC,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAC5B,CAAC,eACFzB,OAAA;QAAK8B,GAAG,EAAEjB;MAAc;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eACNzB,OAAA;MACE+B,IAAI,EAAC,MAAM;MACXC,KAAK,EAAE3B,OAAQ;MACf4B,QAAQ,EAAGC,CAAC,IAAK5B,UAAU,CAAC4B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC5CI,UAAU,EAAGF,CAAC,IAAKA,CAAC,CAACG,GAAG,KAAK,OAAO,IAAInB,WAAW,CAAC;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD,CAAC,eACFzB,OAAA;MAAQsC,OAAO,EAAEpB,WAAY;MAAAG,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,KAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEV;AAACvB,EAAA,CAlDQD,IAAI;AAAAsC,EAAA,GAAJtC,IAAI;AAoDb,eAAeA,IAAI;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}