{"ast":null,"code":"var _jsxFileName = \"/Users/georgina/DestigFemmeDemoPi/frontend/src/Shop/components/CommentContent.tsx\",\n  _s = $RefreshSig$();\n//Created by Georgina Alacaraz\nimport { Button } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useLocation } from 'react-router-dom';\nimport { UserContext } from './Auth';\nimport { Paper } from '@mui/material';\nimport { Typography } from '@mui/material';\nimport { IconButton } from '@mui/material';\nimport HeartIcon from '@mui/icons-material/Favorite';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst _window = window;\nconst backendURL = _window.__ENV && _window.__ENV.backendURL;\nconst axiosClient = axios.create({\n  baseURL: `${backendURL}`,\n  timeout: 20000,\n  withCredentials: true\n});\nconst config = {\n  headers: {\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Origin': '*'\n  }\n};\nexport default function CommentContent() {\n  _s();\n  const {\n    user,\n    saveUser,\n    showModal,\n    saveShowModal,\n    onModalClose\n  } = React.useContext(UserContext);\n  const [comment, setComment] = useState([]);\n  const [post, setPost] = useState(null);\n  const [postLikes, setPostLikes] = useState(0);\n  const [commentLikes, setCommentLikes] = useState([]);\n  const [index, setIndex] = useState(0);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const postId = location.state.postId;\n  console.log(postId);\n\n  // get the posts that have the same community id as the current session\n  useEffect(() => {\n    const fetchComments = async () => {\n      try {\n        const response = await axiosClient.get(`/comments/commentsByPostId?post_id=${postId}`);\n        setComment(response.data.comments || []);\n      } catch (error) {\n        console.error(\"Failed to fetch comments: \", error);\n      }\n    };\n    if (postId) {\n      // Only fetch comments if postId is available\n      fetchComments();\n    }\n  }, [postId]);\n\n  // Function to handle post like\n\n  const handleCommentLike = index => {\n    if (liked[index]) {\n      return; // Exit early if the post is already liked\n    }\n\n    axiosClient.post(`/posts/like/${posts[index]._id}`).then(response => {\n      console.log(response);\n      // Update the liked status for the specific post\n      const newLiked = [...liked];\n      newLiked[index] = true;\n      setLiked(newLiked);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n  const handleNavigatePublicProfile = userId => {\n    navigate(`/publicProfile/${userId}`);\n  };\n  useEffect(() => {\n    if (!postId) return; // Add a guard clause if communityId is not set\n    console.log(postId);\n    axiosClient.get(`/posts/post/${postId}`) // Use template literals to inject communityId\n    .then(response => {\n      console.log(response.data); // Assuming you want to set the entire response object\n    }).catch(error => {\n      console.error(error);\n    });\n  }, [postId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: '600px',\n      margin: '1',\n      textAlign: 'left'\n    },\n    children: [(post === null || post === void 0 ? void 0 : post.title) && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        margin: 1,\n        style: {\n          color: '#9E4291',\n          fontWeight: 'bold'\n        },\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)\n    }, void 0, false), (post === null || post === void 0 ? void 0 : post.description) && /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      margin: 1,\n      style: {\n        color: 'black'\n      },\n      children: post.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), comment.length > 0 ? comment.map((comment, index) => /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        backgroundColor: 'transparent',\n        // Set background color to transparent\n        marginBottom: '8px',\n        padding: '12px',\n        borderRadius: '16px',\n        display: 'flex',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        sx: {\n          color: 'black',\n          flex: '1',\n          fontWeight: '400',\n          lineHeight: '1.4'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleNavigatePublicProfile(comment.user.username),\n          style: {\n            fontWeight: 'bold',\n            color: '#9E4291',\n            textTransform: 'none'\n          },\n          children: [comment.user.username || 'Anonymous', \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 15\n        }, this), comment.content]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"like comment\",\n        onClick: () => handleCommentLike(index),\n        style: {\n          marginLeft: '8px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(HeartIcon, {\n          style: {\n            fontSize: '16px',\n            fill: 'white',\n            stroke: 'black',\n            strokeWidth: '2px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          style: {\n            color: 'gray',\n            marginLeft: '4px'\n          },\n          children: commentLikes[index]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }, this)) :\n    /*#__PURE__*/\n    // Display a message if there are no comments\n    _jsxDEV(Typography, {\n      variant: \"subtitle2\",\n      style: {\n        marginTop: '5px',\n        fontStyle: \"italic\",\n        color: '#9E4291'\n      },\n      children: \"There are no comments, be the first :)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n_s(CommentContent, \"ajZ87KcfpGG9msKunWzaoM/gFpM=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = CommentContent;\n;\nvar _c;\n$RefreshReg$(_c, \"CommentContent\");","map":{"version":3,"names":["Button","React","useEffect","useState","axios","useLocation","UserContext","Paper","Typography","IconButton","HeartIcon","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","_window","window","backendURL","__ENV","axiosClient","create","baseURL","timeout","withCredentials","config","headers","CommentContent","_s","user","saveUser","showModal","saveShowModal","onModalClose","useContext","comment","setComment","post","setPost","postLikes","setPostLikes","commentLikes","setCommentLikes","index","setIndex","navigate","location","postId","state","console","log","fetchComments","response","get","data","comments","error","handleCommentLike","liked","posts","_id","then","newLiked","setLiked","catch","handleNavigatePublicProfile","userId","style","maxWidth","margin","textAlign","children","title","variant","color","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","description","length","map","elevation","sx","backgroundColor","marginBottom","padding","borderRadius","display","alignItems","flex","lineHeight","onClick","username","textTransform","content","marginLeft","fontSize","fill","stroke","strokeWidth","marginTop","fontStyle","_c","$RefreshReg$"],"sources":["/Users/georgina/DestigFemmeDemoPi/frontend/src/Shop/components/CommentContent.tsx"],"sourcesContent":["//Created by Georgina Alacaraz\nimport { Button, Grid } from '@mui/material';\nimport { StringDecoder } from 'string_decoder';\nimport { UserContextType } from './Types';\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useLocation } from 'react-router-dom';\nimport { UserContext } from './Auth';\nimport { Paper } from '@mui/material';\nimport { Card, CardContent, Typography } from '@mui/material';\nimport { IconButton } from '@mui/material';\nimport HeartIcon from '@mui/icons-material/Favorite';\nimport Box from '@mui/material/Box';\nimport { useNavigate } from 'react-router-dom';\nimport { PostType } from './Types';\n\n\ninterface WindowWithEnv extends Window {\n  __ENV?: {\n    backendURL: string, // REACT_APP_BACKEND_URL environment variable\n    sandbox: \"true\" | \"false\", // REACT_APP_SANDBOX_SDK environment variable - string, not boolean!\n  }\n}\n\nconst _window: WindowWithEnv = window;\nconst backendURL = _window.__ENV && _window.__ENV.backendURL;\n\nconst axiosClient = axios.create({ baseURL: `${backendURL}`, timeout: 20000, withCredentials: true });\nconst config = { headers: { 'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*' } };\n\nexport default function CommentContent ( ) {\n  const { user, saveUser, showModal, saveShowModal, onModalClose } = React.useContext(UserContext) as UserContextType;\n  const [comment, setComment] = useState<{ content: string, user: { username: string } }[]>([]);\n  const [post, setPost] = useState<any>(null);\n  const [postLikes, setPostLikes] = useState(0);\n  const [commentLikes, setCommentLikes] = useState<number[]>([]);\n  const [index, setIndex] = useState<number>(0);\n  \n  const navigate = useNavigate();\n  \n  const location = useLocation();\n  const postId = location.state.postId;\n  console.log(postId);\n\n    // get the posts that have the same community id as the current session\n    useEffect(() => {\n      const fetchComments = async () => {\n          try {\n              const response = await axiosClient.get(`/comments/commentsByPostId?post_id=${postId}`);\n              setComment(response.data.comments || []);\n          } catch (error) {\n              console.error(\"Failed to fetch comments: \", error);\n          }\n      };\n      if (postId) { // Only fetch comments if postId is available\n          fetchComments();\n      }\n  }, [postId]);\n\n  // Function to handle post like\n \n  const handleCommentLike = (index: number) => {\n    if (liked[index]) {\n      return; // Exit early if the post is already liked\n    }\n    axiosClient.post(`/posts/like/${posts[index]._id}`)\n      .then((response) => {\n        console.log(response);\n        // Update the liked status for the specific post\n        const newLiked = [...liked];\n        newLiked[index] = true;\n        setLiked(newLiked);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n \n  const handleNavigatePublicProfile = (userId: string) => {\n    navigate(`/publicProfile/${userId}`);\n  }\n  \n  useEffect(() => {\n    if (!postId) return; // Add a guard clause if communityId is not set\n  console.log(postId);\n    axiosClient.get(`/posts/post/${postId}`) // Use template literals to inject communityId\n      .then((response) => {\n        console.log(response.data); // Assuming you want to set the entire response object\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }, [postId]);\n  \n  return (\n    <div style={{ maxWidth: '600px', margin: '1', textAlign: 'left' }}>\n      {post?.title && (\n        <>\n          <Typography variant=\"h5\" margin={1} style={{ color: '#9E4291', fontWeight: 'bold' }}>\n              {post.title}\n            </Typography>\n            </>\n      )}\n      {post?.description && (\n        <Typography variant=\"body1\" margin={1} style={{ color: 'black' }}>\n              {post.description}\n            </Typography>\n      )}\n      <br />\n      <br />\n      {/* Comments */}\n      {comment.length > 0 ? (\n        comment.map((comment, index) => (\n          <Paper\n            key={index}\n            elevation={3}\n            sx={{\n              backgroundColor: 'transparent', // Set background color to transparent\n              marginBottom: '8px',\n              padding: '12px',\n              borderRadius: '16px',\n              display: 'flex',\n              alignItems: 'center',\n            }}\n          >\n\n              <Typography variant=\"body1\" sx={{ color: 'black', flex: '1', fontWeight: '400', lineHeight: '1.4' }}>\n              <Button\n                  onClick={() => handleNavigatePublicProfile(comment.user.username)} \n                  style={{ fontWeight: 'bold', color: '#9E4291', textTransform: 'none' }}\n                >\n                  {comment.user.username|| 'Anonymous'}:\n                </Button>\n                {comment.content}\n              </Typography>\n            {/* Like button for the comment */}\n            <IconButton aria-label=\"like comment\" onClick={() => handleCommentLike(index)} style={{ marginLeft: '8px' }}>\n              <HeartIcon style={{ fontSize: '16px', fill: 'white', stroke: 'black', strokeWidth: '2px' }} />\n              <Typography variant=\"body2\" style={{ color: 'gray', marginLeft: '4px' }}>{commentLikes[index]}</Typography>\n            </IconButton>\n          </Paper>\n        ))\n      ) : (\n        // Display a message if there are no comments\n        <Typography variant=\"subtitle2\" style={{ marginTop: '5px', fontStyle: \"italic\", color: '#9E4291' }}>\n          There are no comments, be the first :)\n        </Typography>\n      )}\n    </div>\n  );\n};\n\n  \n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}