{"ast":null,"code":"var _jsxFileName = \"/Users/georgina/DestigFemmeDemoPi/frontend/src/Shop/components/PostContent.tsx\",\n  _s = $RefreshSig$();\n// Created by Georgina Alacaraz\nimport React, { useContext, useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { UserContext } from \"./Auth\";\nimport { Box, Grid, Typography, Card, CardContent } from '@mui/material';\nimport { useLocation } from 'react-router-dom';\nimport CardActions from '@mui/material/CardActions';\nimport IconButton from '@mui/material/IconButton';\nimport HeartIcon from '@mui/icons-material/Favorite';\nimport ChatBubbleOutlineIcon from '@mui/icons-material/ChatBubbleOutline';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst _window = window;\nconst backendURL = _window.__ENV && _window.__ENV.backendURL;\nconst axiosClient = axios.create({\n  baseURL: `${backendURL}`,\n  timeout: 20000,\n  withCredentials: true\n});\nconst config = {\n  headers: {\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Origin': '*'\n  }\n};\nexport default function PostContent({\n  communityId\n}) {\n  _s();\n  const {\n    user,\n    saveUser,\n    showModal,\n    saveShowModal,\n    onModalClose\n  } = useContext(UserContext);\n  const navigate = useNavigate();\n  const [posts, setPosts] = useState([]);\n  const [postLikes, setPostLikes] = useState(posts.map(() => 0));\n  const [commentLikes, setCommentLikes] = useState([]);\n  const location = useLocation();\n  const postId = location.state.postId;\n  console.log(postId);\n\n  // Fetch posts when component mounts\n  useEffect(() => {\n    console.log(posts);\n  }, [setPosts]);\n\n  //likes posted to backend for posts\n  const handleCommentLike = index => {\n    axiosClient.post(`/posts/like/${posts[index]._id}`).then(response => {\n      const heartIcon = document.getElementById('heartIcon');\n      console.log(response);\n      if (heartIcon) {\n        heartIcon.style.color = 'red';\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  // Function to handle comment like\n  const handlePostLike = () => {\n    const updatedLikes = [...postLikes];\n    updatedLikes[0] += 1;\n    setPostLikes(updatedLikes);\n  };\n\n  // get the posts that have the same community id as the current session\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await axiosClient.get(`/posts/posts1?community_id=${communityId}`);\n        setPosts(response.data.posts || []);\n      } catch (error) {\n        console.error(\"Failed to fetch posts: \", error);\n      }\n    };\n    fetchPosts();\n  }, [communityId]); // Empty dependency array means this effect runs once on mount\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      flexGrow: 1,\n      margin: 2\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: Array.isArray(posts) && posts.length > 0 ? posts.map((post, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            flexDirection: 'column',\n            minHeight: 100,\n            width: \"100%\",\n            backgroundColor: '#efc9e4'\n          },\n          children: [/*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              align: \"left\",\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              color: \"text.secondary\",\n              align: \"left\",\n              children: post.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n            sx: {\n              marginTop: 'auto',\n              display: 'flex',\n              justifyContent: 'space-between'\n            },\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              \"aria-label\": \"like\",\n              onClick: handlePostLike,\n              children: [/*#__PURE__*/_jsxDEV(HeartIcon, {\n                style: {\n                  fontSize: '16px',\n                  fill: liked ? 'red' : 'white',\n                  // Change fill color to red if liked, white otherwise\n                  stroke: 'black',\n                  strokeWidth: '2px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: \"Like\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: {\n                color: \"#9E4291\",\n                display: 'inline'\n              },\n              children: post.likes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(IconButton, {\n                \"aria-label\": \"add a comment\",\n                onClick: () => navigate(\"/comments\", {\n                  state: {\n                    postId: post._id\n                  }\n                }),\n                children: /*#__PURE__*/_jsxDEV(ChatBubbleOutlineIcon, {\n                  style: {\n                    fontSize: '16px',\n                    fill: 'white',\n                    stroke: 'black'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                sx: {\n                  color: \"#9E4291\",\n                  display: 'inline',\n                  marginLeft: '4px'\n                },\n                children: post.comments.length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, post._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)) : /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          textAlign: \"center\",\n          children: \"There are no posts in this community :(\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(PostContent, \"n1egfpDxSOZVvdLXpYKeQZlzi4c=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = PostContent;\n;\nvar _c;\n$RefreshReg$(_c, \"PostContent\");","map":{"version":3,"names":["React","useContext","useEffect","useState","axios","useNavigate","UserContext","Box","Grid","Typography","Card","CardContent","useLocation","CardActions","IconButton","HeartIcon","ChatBubbleOutlineIcon","jsxDEV","_jsxDEV","_window","window","backendURL","__ENV","axiosClient","create","baseURL","timeout","withCredentials","config","headers","PostContent","communityId","_s","user","saveUser","showModal","saveShowModal","onModalClose","navigate","posts","setPosts","postLikes","setPostLikes","map","commentLikes","setCommentLikes","location","postId","state","console","log","handleCommentLike","index","post","_id","then","response","heartIcon","document","getElementById","style","color","catch","error","handlePostLike","updatedLikes","fetchPosts","get","data","sx","flexGrow","margin","children","container","spacing","Array","isArray","length","item","xs","flexDirection","minHeight","width","backgroundColor","variant","gutterBottom","align","title","fileName","_jsxFileName","lineNumber","columnNumber","description","marginTop","display","justifyContent","onClick","fontSize","fill","liked","stroke","strokeWidth","likes","marginLeft","comments","textAlign","_c","$RefreshReg$"],"sources":["/Users/georgina/DestigFemmeDemoPi/frontend/src/Shop/components/PostContent.tsx"],"sourcesContent":["// Created by Georgina Alacaraz\nimport React, { useContext, useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { UserContext } from \"./Auth\";\nimport { PostType, UserContextType } from \"./Types\";\nimport { set } from \"mongoose\";\nimport { Box, Grid, Typography, Card, CardContent } from '@mui/material';\nimport ButtonBase from '@mui/material/ButtonBase';\nimport { useLocation } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport CardActions from '@mui/material/CardActions';\nimport IconButton from '@mui/material/IconButton';\nimport CommentIcon from '@mui/icons-material/Comment';\nimport { PodcastsOutlined, PostAddOutlined } from \"@mui/icons-material\";\nimport CommentContent from \"./CommentContent\";\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\nimport { CardMedia } from '@mui/material';\nimport { CardActionArea } from '@mui/material';\nimport HeartIcon from '@mui/icons-material/Favorite';\nimport ChatBubbleOutlineIcon from '@mui/icons-material/ChatBubbleOutline';\n\ninterface WindowWithEnv extends Window {\n  __ENV?: {\n    backendURL: string, // REACT_APP_BACKEND_URL environment variable\n    sandbox: \"true\" | \"false\", // REACT_APP_SANDBOX_SDK environment variable - string, not boolean!\n  }\n}\n\nconst _window: WindowWithEnv = window;\nconst backendURL = _window.__ENV && _window.__ENV.backendURL;\n\nconst axiosClient = axios.create({ baseURL: `${backendURL}`, timeout: 20000, withCredentials: true });\nconst config = { headers: { 'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*' } };\n\nexport default function PostContent({ communityId }: { communityId: string }) {\n  const { user, saveUser, showModal, saveShowModal, onModalClose } = useContext(UserContext) as UserContextType;\n  const navigate = useNavigate();\n  const [posts, setPosts] = useState<PostType[]>([]);\n  const [postLikes, setPostLikes] = useState(posts.map(() => 0));\n  const [commentLikes, setCommentLikes] = useState<number[]>([]);\n\n  const location = useLocation();\n  const postId = location.state.postId;\n  console.log(postId);\n \n  // Fetch posts when component mounts\n  useEffect(() => {\n    console.log(posts);\n  }, [setPosts]);\n\n  //likes posted to backend for posts\n  const handleCommentLike = (index: number) => {\n    axiosClient.post(`/posts/like/${posts[index]._id}`)\n      .then((response) => {\n        const heartIcon = document.getElementById('heartIcon');\n        console.log(response);\n        if (heartIcon) {\n          heartIcon.style.color = 'red';\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  // Function to handle comment like\n  const handlePostLike = () => {\n    const updatedLikes = [...postLikes];\n    updatedLikes[0] += 1;\n    setPostLikes(updatedLikes);\n  };\n  \n  // get the posts that have the same community id as the current session\n  useEffect(() => {\n      const fetchPosts = async () => {\n          try {\n              const response = await axiosClient.get(`/posts/posts1?community_id=${communityId}`);\n              setPosts(response.data.posts || []);\n          } catch (error) {\n              console.error(\"Failed to fetch posts: \", error);\n          }\n      };\n      fetchPosts();\n  }, [communityId]);// Empty dependency array means this effect runs once on mount\n\n  return (\n    <Box sx={{ flexGrow: 1, margin: 2 }}>\n  <Grid container spacing={2}>\n    {Array.isArray(posts) && posts.length > 0 ? (\n      posts.map((post, index) => (\n        <Grid item xs={12} key={post._id}>\n          <Card sx={{ flexDirection: 'column', minHeight: 100, width: \"100%\", backgroundColor:'#efc9e4' }}>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom align=\"left\">\n                {post.title}\n              </Typography>\n              <Typography variant=\"body1\" color=\"text.secondary\" align=\"left\">\n                {post.description}\n              </Typography>\n            </CardContent>\n            <CardActions sx={{ marginTop: 'auto', display: 'flex', justifyContent: 'space-between' }}>\n              {/* Like button */}\n              <IconButton\n                aria-label=\"like\"\n                onClick={handlePostLike}\n                > \n                  <HeartIcon\n                    style={{\n                      fontSize: '16px',\n                      fill: liked ? 'red' : 'white', // Change fill color to red if liked, white otherwise\n                      stroke: 'black',\n                      strokeWidth: '2px'\n                    }}\n                  />\n                  <Typography variant=\"body2\">Like</Typography>\n                </IconButton>\n              <Typography variant=\"body2\" sx={{ color: \"#9E4291\", display: 'inline' }}>\n                {post.likes}\n              </Typography>\n              {/* Comment button */}\n              <div> {/* Wrap comment icon and button in a div */}\n                <IconButton aria-label=\"add a comment\" onClick={() => navigate(\"/comments\", { state: { postId: post._id } })}>\n                  <ChatBubbleOutlineIcon style={{ fontSize: '16px', fill: 'white', stroke: 'black'}} />\n                </IconButton>\n                <Typography variant=\"body2\" sx={{ color: \"#9E4291\", display: 'inline', marginLeft: '4px' }}>\n                  {post.comments.length}\n                </Typography>\n              </div>\n            </CardActions>\n          </Card>\n        </Grid>\n      ))\n    ) : (\n      <Grid item xs={12}>\n        <Typography variant=\"body1\" textAlign=\"center\">\n          There are no posts in this community :(\n        </Typography>\n      </Grid>\n    )}\n  </Grid>\n</Box>\n\n  );\n\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}