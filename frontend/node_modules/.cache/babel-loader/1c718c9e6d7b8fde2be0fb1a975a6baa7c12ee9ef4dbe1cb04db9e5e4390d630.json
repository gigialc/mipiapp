{"ast":null,"code":"var _jsxFileName = \"/Users/georgina/DestigFemmeDemoPi/frontend/src/Shop/components/CommentContent.tsx\",\n  _s = $RefreshSig$();\n//Created by Georgina Alacaraz\nimport { Button } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useLocation } from 'react-router-dom';\nimport { UserContext } from './Auth';\nimport { Paper } from '@mui/material';\nimport { Typography } from '@mui/material';\nimport { IconButton } from '@mui/material';\nimport HeartIcon from '@mui/icons-material/Favorite';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst _window = window;\nconst backendURL = _window.__ENV && _window.__ENV.backendURL;\nconst axiosClient = axios.create({\n  baseURL: `${backendURL}`,\n  timeout: 20000,\n  withCredentials: true\n});\nconst config = {\n  headers: {\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Origin': '*'\n  }\n};\nexport default function CommentContent() {\n  _s();\n  const {\n    user,\n    saveUser,\n    showModal,\n    saveShowModal,\n    onModalClose\n  } = React.useContext(UserContext);\n  const [comment, setComment] = useState([]);\n  const [post, setPost] = useState(null);\n  const [postLikes, setPostLikes] = useState(0);\n  const [commentLikes, setCommentLikes] = useState([]);\n  const [index, setIndex] = useState(0);\n  const [liked, setLiked] = useState(Array(comment.length).fill(false));\n  const navigate = useNavigate();\n  const location = useLocation();\n  const postId = location.state.postId;\n  console.log(postId);\n\n  // get the posts that have the same community id as the current session\n  useEffect(() => {\n    const fetchComments = async () => {\n      try {\n        const response = await axiosClient.get(`/comments/commentsByPostId?post_id=${postId}`);\n        setComment(response.data.comments || []);\n      } catch (error) {\n        console.error(\"Failed to fetch comments: \", error);\n      }\n    };\n    if (postId) {\n      // Only fetch comments if postId is available\n      fetchComments();\n    }\n  }, [postId]);\n  const handleCommentLike = index => {\n    if (liked[index]) {\n      return; // Exit early if the post is already liked\n    }\n\n    axiosClient.post(`/comments/like/${comment[index]}`).then(response => {\n      console.log(response);\n      // Update the liked status for the specific post\n      const newLiked = [...liked];\n      newLiked[index] = true;\n      setLiked(newLiked);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n  const handleNavigatePublicProfile = userId => {\n    navigate(`/publicProfile/${userId}`);\n  };\n  useEffect(() => {\n    if (!postId) return; // Add a guard clause if communityId is not set\n    console.log(postId);\n    axiosClient.get(`/posts/post/${postId}`) // Use template literals to inject communityId\n    .then(response => {\n      console.log(response.data); // Assuming you want to set the entire response object\n    }).catch(error => {\n      console.error(error);\n    });\n  }, [postId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), comment.length > 0 ? comment.map((comment, index) => /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        backgroundColor: 'transparent',\n        // Set background color to transparent\n        marginBottom: '8px',\n        padding: '12px',\n        borderRadius: '16px',\n        display: 'flex',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        sx: {\n          color: 'black',\n          flex: '1',\n          fontWeight: '400',\n          lineHeight: '1.4'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleNavigatePublicProfile(comment.user.username),\n          style: {\n            fontWeight: 'bold',\n            color: '#9E4291',\n            textTransform: 'none'\n          },\n          children: [comment.user.username || 'Anonymous', \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }, this), comment.content]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"like comment\",\n        onClick: () => handleCommentLike(index),\n        style: {\n          marginLeft: '8px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(HeartIcon, {\n          style: {\n            fontSize: '16px',\n            fill: 'white',\n            stroke: 'black',\n            strokeWidth: '2px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          style: {\n            color: 'gray',\n            marginLeft: '4px'\n          },\n          children: commentLikes[index]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }, this)) :\n    /*#__PURE__*/\n    // Display a message if there are no comments\n    _jsxDEV(Typography, {\n      variant: \"subtitle2\",\n      style: {\n        marginTop: '5px',\n        fontStyle: \"italic\",\n        color: '#9E4291'\n      },\n      children: \"There are no comments, be the first :)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_s(CommentContent, \"4VidOUlQ/RSrhcx0zK7Tnn2pQBU=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = CommentContent;\n;\nvar _c;\n$RefreshReg$(_c, \"CommentContent\");","map":{"version":3,"names":["Button","React","useEffect","useState","axios","useLocation","UserContext","Paper","Typography","IconButton","HeartIcon","useNavigate","jsxDEV","_jsxDEV","_window","window","backendURL","__ENV","axiosClient","create","baseURL","timeout","withCredentials","config","headers","CommentContent","_s","user","saveUser","showModal","saveShowModal","onModalClose","useContext","comment","setComment","post","setPost","postLikes","setPostLikes","commentLikes","setCommentLikes","index","setIndex","liked","setLiked","Array","length","fill","navigate","location","postId","state","console","log","fetchComments","response","get","data","comments","error","handleCommentLike","then","newLiked","catch","handleNavigatePublicProfile","userId","children","fileName","_jsxFileName","lineNumber","columnNumber","map","elevation","sx","backgroundColor","marginBottom","padding","borderRadius","display","alignItems","variant","color","flex","fontWeight","lineHeight","onClick","username","style","textTransform","content","marginLeft","fontSize","stroke","strokeWidth","marginTop","fontStyle","_c","$RefreshReg$"],"sources":["/Users/georgina/DestigFemmeDemoPi/frontend/src/Shop/components/CommentContent.tsx"],"sourcesContent":["//Created by Georgina Alacaraz\nimport { Button, Grid } from '@mui/material';\nimport { StringDecoder } from 'string_decoder';\nimport { UserContextType } from './Types';\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useLocation } from 'react-router-dom';\nimport { UserContext } from './Auth';\nimport { Paper } from '@mui/material';\nimport { Card, CardContent, Typography } from '@mui/material';\nimport { IconButton } from '@mui/material';\nimport HeartIcon from '@mui/icons-material/Favorite';\nimport Box from '@mui/material/Box';\nimport { useNavigate } from 'react-router-dom';\nimport { PostType } from './Types';\nimport PostContent from './PostContent';\n\n\ninterface WindowWithEnv extends Window {\n  __ENV?: {\n    backendURL: string, // REACT_APP_BACKEND_URL environment variable\n    sandbox: \"true\" | \"false\", // REACT_APP_SANDBOX_SDK environment variable - string, not boolean!\n  }\n}\n\nconst _window: WindowWithEnv = window;\nconst backendURL = _window.__ENV && _window.__ENV.backendURL;\n\nconst axiosClient = axios.create({ baseURL: `${backendURL}`, timeout: 20000, withCredentials: true });\nconst config = { headers: { 'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*' } };\n\nexport default function CommentContent ( ) {\n  const { user, saveUser, showModal, saveShowModal, onModalClose } = React.useContext(UserContext) as UserContextType;\n  const [comment, setComment] = useState<{ content: string, user: { username: string } }[]>([]);\n  const [post, setPost] = useState<any>(null);\n  const [postLikes, setPostLikes] = useState(0);\n  const [commentLikes, setCommentLikes] = useState<number[]>([]);\n  const [index, setIndex] = useState<number>(0);\n  const [liked, setLiked] = useState<boolean[]>(Array(comment.length).fill(false));\n  \n  const navigate = useNavigate();\n  \n  const location = useLocation();\n  const postId = location.state.postId;\n  console.log(postId);\n\n    // get the posts that have the same community id as the current session\n    useEffect(() => {\n      const fetchComments = async () => {\n          try {\n              const response = await axiosClient.get(`/comments/commentsByPostId?post_id=${postId}`);\n              setComment(response.data.comments || []);\n          } catch (error) {\n              console.error(\"Failed to fetch comments: \", error);\n          }\n      };\n      if (postId) { // Only fetch comments if postId is available\n          fetchComments();\n      }\n  }, [postId]);\n\n  const handleCommentLike = (index: number) => {\n    if (liked[index]) {\n      return; // Exit early if the post is already liked\n    }\n    axiosClient.post(`/comments/like/${comment[index]}`)\n      .then((response) => {\n        console.log(response);\n        // Update the liked status for the specific post\n        const newLiked = [...liked];\n        newLiked[index] = true;\n        setLiked(newLiked);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n \n  const handleNavigatePublicProfile = (userId: string) => {\n    navigate(`/publicProfile/${userId}`);\n  }\n  \n  useEffect(() => {\n    if (!postId) return; // Add a guard clause if communityId is not set\n  console.log(postId);\n    axiosClient.get(`/posts/post/${postId}`) // Use template literals to inject communityId\n      .then((response) => {\n        console.log(response.data); // Assuming you want to set the entire response object\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }, [postId]);\n  \n  return (\n    <div>\n      \n      <br />\n      <br />\n      {/* Comments */}\n      {comment.length > 0 ? (\n        comment.map((comment, index) => (\n          <Paper\n            key={index}\n            elevation={3}\n            sx={{\n              backgroundColor: 'transparent', // Set background color to transparent\n              marginBottom: '8px',\n              padding: '12px',\n              borderRadius: '16px',\n              display: 'flex',\n              alignItems: 'center',\n            }}\n          >\n\n              <Typography variant=\"body1\" sx={{ color: 'black', flex: '1', fontWeight: '400', lineHeight: '1.4' }}>\n              <Button\n                  onClick={() => handleNavigatePublicProfile(comment.user.username)} \n                  style={{ fontWeight: 'bold', color: '#9E4291', textTransform: 'none' }}\n                >\n                  {comment.user.username|| 'Anonymous'}:\n                </Button>\n                {comment.content}\n              </Typography>\n            {/* Like button for the comment */}\n            <IconButton aria-label=\"like comment\" onClick={() => handleCommentLike(index)} style={{ marginLeft: '8px' }}>\n              <HeartIcon style={{ fontSize: '16px', fill: 'white', stroke: 'black', strokeWidth: '2px' }} />\n              <Typography variant=\"body2\" style={{ color: 'gray', marginLeft: '4px' }}>{commentLikes[index]}</Typography>\n            </IconButton>\n          </Paper>\n        ))\n      ) : (\n        // Display a message if there are no comments\n        <Typography variant=\"subtitle2\" style={{ marginTop: '5px', fontStyle: \"italic\", color: '#9E4291' }}>\n          There are no comments, be the first :)\n        </Typography>\n      )}\n    </div>\n  );\n};\n\n  \n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}